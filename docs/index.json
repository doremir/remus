[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "lib/classes/audio-file.js",
    "content": "\nimport _ from 'underscore';\nimport Item from './item.js';\nimport misc from '../misc.js';\n// import chalk from 'chalk';\n\nexport default class AudioFile extends Item {\n  /** @ignore */\n  static getSlots() {\n    return super.getSlots().concat(['externalId', 'frames', 'channels', 'sampleRate', 'externalUrl', 'fileType']);\n  }\n\n  // inspect() {\n  //   return chalk.magenta('<') + chalk.magenta.bold(this.pitch.toString()) + chalk.magenta('>');\n  // },\n\n  /** @ignore */\n  init() {\n    super.init();\n    /** @type {Number} */\n    this.frames = misc.parseIntOr(this.frames, 0);\n    /** @type {Number} */\n    this.channels = misc.parseIntOr(this.channels, null);\n    /** @type {Number} */\n    this.sampleRate = misc.parseFloatOr(this.sampleRate, null);\n    return this;\n  }\n\n  /** @ignore */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.isInteger(this, 'frames', 1, null);\n    validator.isInteger(this, 'channels', 1, 8);\n    validator.isNumber(this, 'sampleRate', 22050, 192000);\n    return validator;\n  }\n}\n\nAudioFile.coerce = function(source, parent, copy) {\n  if (source instanceof AudioFile) {\n    if (copy) return new AudioFile(source, parent);\n    else return source;\n  }\n  if (_.isObject(source)) {\n    return new AudioFile(source, parent);\n  }\n  throw new Error('Cannot coerce ' + source + ' to an audio file!');\n};\n\nAudioFile.itemType = 'AudioFile';\n\nimport ItemHandler from '../item-handler.js';\nItemHandler.registerItem(AudioFile);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/audio-file.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "AudioFile",
    "memberof": "lib/classes/audio-file.js",
    "static": true,
    "longname": "lib/classes/audio-file.js~AudioFile",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/audio-file.js",
    "importStyle": "AudioFile",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/classes/item.js~Item"
    ]
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/audio-file.js~AudioFile",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/audio-file.js~AudioFile.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/audio-file.js~AudioFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/audio-file.js~AudioFile#init",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "frames",
    "memberof": "lib/classes/audio-file.js~AudioFile",
    "static": false,
    "longname": "lib/classes/audio-file.js~AudioFile#frames",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "channels",
    "memberof": "lib/classes/audio-file.js~AudioFile",
    "static": false,
    "longname": "lib/classes/audio-file.js~AudioFile#channels",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "sampleRate",
    "memberof": "lib/classes/audio-file.js~AudioFile",
    "static": false,
    "longname": "lib/classes/audio-file.js~AudioFile#sampleRate",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/audio-file.js~AudioFile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/audio-file.js~AudioFile#doValidate",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/audio-file.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/audio-file.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/audio-file.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "lib/classes/duration.js",
    "content": "\nimport Item from './item.js';\nimport misc from '../misc.js';\nimport Fraction from 'fraction.js';\nimport _ from 'underscore';\nvar isNumber = _.isNumber;\nvar isObject = _.isObject;\n\n/* eslint-disable */\nvar wnToVexFlow = {\n  '7/4':   { duration: 'w',  dots: 2 },  // \"noteValue\" would be better than \"duration\",\n  '3/2':   { duration: 'w',  dots: 1 },  // but let's follow VexFlow's nomenclature\n  '1/1':   { duration: 'w',  dots: 0 },\n  '7/8':   { duration: 'h',  dots: 2 },\n  '3/4':   { duration: 'h',  dots: 1 },\n  '1/2':   { duration: 'h',  dots: 0 },\n  '7/16':  { duration: 'q',  dots: 2 },\n  '3/8':   { duration: 'q',  dots: 1 },\n  '1/4':   { duration: 'q',  dots: 0 },\n  '7/32':  { duration: '8',  dots: 2 },\n  '3/16':  { duration: '8',  dots: 1 },\n  '1/8':   { duration: '8',  dots: 0 },\n  '7/64':  { duration: '16', dots: 2 },\n  '3/32':  { duration: '16', dots: 1 },\n  '1/16':  { duration: '16', dots: 0 },\n  '7/128': { duration: '32', dots: 2 },\n  '3/64':  { duration: '32', dots: 1 },\n  '1/32':  { duration: '32', dots: 0 },\n  // '7/256': { duration: '64', dots: 2 },\n  '3/128': { duration: '64', dots: 1 },\n  '1/64':  { duration: '64', dots: 0 },\n  // '7/512': { duration: '128', dots: 2 },\n  // '3/256': { duration: '128', dots: 1 },\n  '1/128': { duration: '128', dots: 0 },\n}\n/* eslint-enable */\n\nexport default class Duration extends Item {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots().concat(['value', 'unit']);\n  }\n\n  /**\n   * @ignore\n   */\n  inspect() {\n    // return chalk.blue.bold(this.value.toFraction()) + ' ' + chalk.blue(this.unit);\n  }\n\n  /**\n   * @ignore\n   */\n  init() {\n    super.init();\n    /** @type {Fraction} */\n    this.value = new Fraction(this.value || 0);\n    /** @type {String} */\n    this.unit = this.unit || 'ms';\n    return this;\n  }\n\n  /**\n   * Is this a zero duration?\n   * @return {boolean}\n   */\n  isZero() {\n    // eslint-disable-next-line eqeqeq\n    return this.value == 0; // N.B: Don't use ===\n  }\n\n  /**\n   * Returns `true` if the duration is in time units (currently `s` or `ms`), `false` otherwise.\n   * @return {boolean}\n   */\n  isTime() {\n    return ['s', 'ms'].indexOf(this.unit) >= 0;\n  }\n\n  /**\n   * Returns `true` if the duration is in atomic units, `false` otherwise.\n   * The inverse of {@link isTime()}\n   * @return {boolean}\n   */\n  isAtom() {\n    return !this.isTime();\n  }\n\n  /**\n   * Returns `true` if the duration has a fixed unit, i.e. unaffected by time signature.\n   * Currently, the fixed units are `s`, `ms` and `wn`.\n   * @return {boolean}\n   */\n  isFixed() {\n    return ['s', 'ms', 'wn'].indexOf(this.unit) >= 0;\n  }\n\n  /**\n   * Returns a new duration with same unit and inverted value\n   * (positive durations become negative and v.v.)\n   * The current object is not changed.\n   * @return {Duration}\n   */\n  inverse() {\n    return new Duration({value: this.value.neg(), unit: this.unit});\n  }\n\n  /**\n   * Return the duration as a number of seconds.\n   * Valid only when the duration is expressed in time units (`s` or `ms`)\n   * @return {Fraction}\n   */\n  toSeconds() {\n    switch (this.unit) {\n      case 's': return this.value;\n      case 'ms': return this.value.div(1000);\n    }\n  }\n\n  /**\n   * Return the value of the duration as a floating point number (ignoring the unit).\n   * @return {Number}\n   */\n  toFloat() {\n    return this.value.valueOf();\n  }\n\n  /** @ignore */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.hasType(this, 'value', Fraction);\n    validator.isOneOf(this, 'unit', ['s', 'ms', 'measures', 'beats', 'atoms', 'wn']);\n    return validator;\n  }\n\n  /** @ignore */\n  toString() {\n    return this.value.toFraction() + ' ' + this.unit;\n  }\n\n  /** @ignore */\n  toJSON() {\n    if (this.value.n === 0) return 0;\n    if (this.value.d === 1) return [this.value.n * this.value.s, this.unit];\n    return [this.value.n * this.value.s, this.value.d, this.unit];\n  }\n\n  /** @ignore */\n  toXML(rootName) {\n    return misc.buildXML(this.toXMLObject(), {rootName: rootName || 'duration'});\n  }\n\n  /** @ignore */\n  toXMLObject() {\n    if (this.unit === '' || this.unit === 'divisions') return {_: this.num / this.denom};\n    return {_: this.num / this.denom, '$': {unit: this.unit}};\n  }\n\n  /** @ignore */\n  toVexFlow() {\n    if (this.unit === 'wn') {\n      return Duration.wnToVexFlow(this.value);\n    }\n  }\n\n  /** @ignore */\n  static wnToVexFlow(fraction) {\n    return wnToVexFlow[fraction.n + '/' + fraction.d];\n  }\n}\n\nDuration.fromString = function(str, parent) {\n  var matches = str.match(/^([0-9\\.]+(?:\\/[1-9][0-9]*)?)\\s*([A-Za-z]*)$/);\n  if (matches) {\n    return new Duration({value: matches[1], unit: matches[2]}, parent);\n  }\n};\n\nDuration.coerce = function(source, parent, copy) {\n  if (source instanceof Duration) {\n    if (copy) return new Duration(source, parent);\n    else return source;\n  }\n  if (typeof source === 'string') return Duration.fromString(source, parent);\n  if (isNumber(source)) return new Duration({value: source}, parent);\n  if (source instanceof Array && source.length === 2) return new Duration({value: source[0], unit: source[1]}, parent);\n  if (source instanceof Array && source.length === 3) return new Duration({value: [source[0], source[1]], unit: source[2]}, parent);\n  if (isObject(source)) return new Duration(source, parent);\n  throw new Error('Cannot coerce ' + source + ' to a duration!');\n};\n\nDuration.fromXML = function(xml) {\n  var obj = misc.parseXML(xml, {explicitArray: false, mergeAttrs: true, explicitCharkey: true});\n  return Duration.fromXMLObject(obj);\n};\n\nDuration.fromXMLObject = function(obj) {\n  if (typeof obj === 'string') return new Duration(parseInt(obj), 'divisions');\n  return new Duration({num: parseInt(obj._), unit: obj.unit || 'divisions'});\n};\n\nDuration.itemType = 'Duration';\n\nimport ItemHandler from '../item-handler.js';\nItemHandler.registerItem(Duration);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/duration.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "isNumber",
    "memberof": "lib/classes/duration.js",
    "static": true,
    "longname": "lib/classes/duration.js~isNumber",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/duration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/duration.js",
    "static": true,
    "longname": "lib/classes/duration.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/duration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "wnToVexFlow",
    "memberof": "lib/classes/duration.js",
    "static": true,
    "longname": "lib/classes/duration.js~wnToVexFlow",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/duration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"7/4\": *, \"3/2\": *, \"1/1\": *, \"7/8\": *, \"3/4\": *, \"1/2\": *, \"7/16\": *, \"3/8\": *, \"1/4\": *, \"7/32\": *, \"3/16\": *, \"1/8\": *, \"7/64\": *, \"3/32\": *, \"1/16\": *, \"7/128\": *, \"3/64\": *, \"1/32\": *, \"3/128\": *, \"1/64\": *, \"1/128\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "Duration",
    "memberof": "lib/classes/duration.js",
    "static": true,
    "longname": "lib/classes/duration.js~Duration",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/duration.js",
    "importStyle": "Duration",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/classes/item.js~Item"
    ]
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/duration.js~Duration.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#inspect",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#init",
    "access": "public",
    "description": "",
    "lineNumber": 56,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "value",
    "memberof": "lib/classes/duration.js~Duration",
    "static": false,
    "longname": "lib/classes/duration.js~Duration#value",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "Fraction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "unit",
    "memberof": "lib/classes/duration.js~Duration",
    "static": false,
    "longname": "lib/classes/duration.js~Duration#unit",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "isZero",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#isZero",
    "access": "public",
    "description": "Is this a zero duration?",
    "lineNumber": 69,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "isTime",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#isTime",
    "access": "public",
    "description": "Returns `true` if the duration is in time units (currently `s` or `ms`), `false` otherwise.",
    "lineNumber": 78,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "isAtom",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#isAtom",
    "access": "public",
    "description": "Returns `true` if the duration is in atomic units, `false` otherwise.\nThe inverse of {@link isTime()}",
    "lineNumber": 87,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "isFixed",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#isFixed",
    "access": "public",
    "description": "Returns `true` if the duration has a fixed unit, i.e. unaffected by time signature.\nCurrently, the fixed units are `s`, `ms` and `wn`.",
    "lineNumber": 96,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "inverse",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#inverse",
    "access": "public",
    "description": "Returns a new duration with same unit and inverted value\n(positive durations become negative and v.v.)\nThe current object is not changed.",
    "lineNumber": 106,
    "return": {
      "nullable": null,
      "types": [
        "Duration"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "toSeconds",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#toSeconds",
    "access": "public",
    "description": "Return the duration as a number of seconds.\nValid only when the duration is expressed in time units (`s` or `ms`)",
    "lineNumber": 115,
    "return": {
      "nullable": null,
      "types": [
        "Fraction"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "toFloat",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#toFloat",
    "access": "public",
    "description": "Return the value of the duration as a floating point number (ignoring the unit).",
    "lineNumber": 126,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#doValidate",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#toString",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#toJSON",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "toXML",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#toXML",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "ignore": true,
    "params": [
      {
        "name": "rootName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "toXMLObject",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#toXMLObject",
    "access": "public",
    "description": null,
    "lineNumber": 156,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "{\"_\": *, \"$\": *}"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "toVexFlow",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/duration.js~Duration#toVexFlow",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "wnToVexFlow",
    "memberof": "lib/classes/duration.js~Duration",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/duration.js~Duration.wnToVexFlow",
    "access": "public",
    "description": null,
    "lineNumber": 169,
    "ignore": true,
    "params": [
      {
        "name": "fraction",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "fromString",
    "memberof": "lib/classes/duration.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/duration.js~fromString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/duration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/duration.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/duration.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/duration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "fromXML",
    "memberof": "lib/classes/duration.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/duration.js~fromXML",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/duration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "params": [
      {
        "name": "xml",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "fromXMLObject",
    "memberof": "lib/classes/duration.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/duration.js~fromXMLObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/duration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "lib/classes/event/audio.js",
    "content": "\nimport _ from 'underscore';\nimport Event from './event.js';\nimport Duration from '../duration.js';\n\n/**\n * An audio event, playing back audio from e.g. an audio file\n */\nexport default class Audio extends Event {\n  /** @ignore */\n  static getSlots() {\n    return super.getSlots().concat(['file', 'trimLeft', 'trimRight']);\n  }\n\n  /** @ignore */\n  init() {\n    super.init();\n    this.trimLeft = this.initSubObject(this.trimLeft, Duration);\n    this.trimRight = this.initSubObject(this.trimRight, Duration);\n    return this;\n  }\n\n  /** @ignore */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.hasTypeOrNull(this, 'trimLeft', Duration);\n    validator.hasTypeOrNull(this, 'trimRight', Duration);\n    validator.hasTypeOrNull(this, 'file', Duration);\n    return validator;\n  }\n}\n\nAudio.coerce = function(source, parent, copy) {\n  if (source instanceof Audio) {\n    if (copy) {\n      return new Audio(source, parent);\n    } else {\n      return source;\n    }\n  }\n  if (_.isObject(source)) {\n    return new Audio(source, parent);\n  }\n  throw new Error('Cannot coerce ' + source + ' to an audio object!');\n};\n\nAudio.itemType = 'Audio';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Audio);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/audio.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "class",
    "name": "Audio",
    "memberof": "lib/classes/event/audio.js",
    "static": true,
    "longname": "lib/classes/event/audio.js~Audio",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/audio.js",
    "importStyle": "Audio",
    "description": "An audio event, playing back audio from e.g. an audio file",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "lib/classes/event/event.js~Event"
    ]
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/event/audio.js~Audio",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/audio.js~Audio.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/event/audio.js~Audio",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/audio.js~Audio#init",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "trimLeft",
    "memberof": "lib/classes/event/audio.js~Audio",
    "static": false,
    "longname": "lib/classes/event/audio.js~Audio#trimLeft",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "trimRight",
    "memberof": "lib/classes/event/audio.js~Audio",
    "static": false,
    "longname": "lib/classes/event/audio.js~Audio#trimRight",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/event/audio.js~Audio",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/audio.js~Audio#doValidate",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/audio.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/audio.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "lib/classes/event/chord-sequence.js",
    "content": "\nimport _ from 'underscore';\n\nimport EventContainer from './event-container.js';\nimport Pitch from '../pitch.js';\nimport Interval from '../interval.js';\n\nfunction fractionToWnJSON(fraction) {\n  return [fraction.n, fraction.d, 'wn'];\n}\n\nfunction getChordPitches(chord) {\n  var root = chord.initSubObject(chord.harmony.root, 'Pitch');\n  var pitches = [root];\n\n  _.each(chord.harmony.intervals, (interval) => {\n    pitches.push(root.interval(interval));\n  });\n\n  return pitches;\n}\n\nfunction getChordMidiNumbers(chord) {\n  return _.map(getChordPitches(chord), (pitch) => {\n    return pitch.toMIDI();\n  });\n}\n\nfunction findClosestMidiNumber(targetNumber, inputNumber) {\n  var difference = targetNumber - inputNumber;\n  var octaveDifference = Math.round(difference / 12);\n  return inputNumber + (octaveDifference * 12);\n}\n\nfunction findClosestChordMidiNumber(targetNumber, chord) {\n  var chordNumbers = getChordMidiNumbers(chord);\n\n  var currentClosest = null;\n  var currentDistance = null;\n\n  _.each(chordNumbers, (n) => {\n    var closest = findClosestMidiNumber(targetNumber, n);\n    var distance = Math.abs(targetNumber - closest);\n\n    if (!currentClosest || distance < currentDistance) {\n      currentClosest = closest;\n      currentDistance = distance;\n    }\n  });\n\n  return currentClosest;\n}\n\nfunction closestOctaveDifference(pitchFrom, pitchTo) {\n  var mod = (a, b) => (a % b + b) % b;\n\n  // calculate closest direction to transpose\n  var interval = pitchTo.interval(pitchFrom).coord[1];\n  var octaveDifference = Math.sign(interval) * Math.abs(Math.floor(interval / 12));\n\n  var chromaticDifference = mod(interval, 12);\n  if (chromaticDifference > 6) {\n    chromaticDifference = chromaticDifference - 12;\n  }\n\n  // is closest new root in the same octave?\n  var octaveCorrection = Math.floor(pitchFrom.coord[1] / 12) - Math.floor((pitchFrom.coord[1] + chromaticDifference) / 12);\n\n  // adjust\n  octaveDifference += octaveCorrection;\n\n  return octaveDifference;\n}\n\nfunction transposeNote(keyFrom, keyTo, note) {\n  var pitch = note.pitch;\n\n  var octaveDifference = closestOctaveDifference(keyFrom.root, keyTo.root);\n  var octaveInterval = new Interval({coord: [octaveDifference * 7, octaveDifference * 12]});\n\n  // transpose destination root pitch to be in closest octave\n\n  var keyInterval = keyFrom.root.interval(keyTo.root);\n  keyInterval = keyInterval.add(octaveInterval);\n\n  // this mutates the original note rather than creating a new one, correct?\n  pitch.transpose(keyInterval);\n\n  return note;\n}\n\nfunction noteToAutoNote(env, chord, note) {\n  var targetNumber = note.pitch.toMIDI();\n  var result = findClosestChordMidiNumber(targetNumber, chord);\n\n  if (result) {\n    note.pitch = Pitch.fromMIDI(result, note);\n  } else {\n    note.amp = 0;\n  }\n}\n\nfunction noteToChordNote(env, chord, note) {\n  var step = env.harmonyRelation.step;\n\n  if (!step) {\n    console.error('\"step\" is required in harmonyRelation when using type \"chordNote\"!');\n    note.amp = 0;\n    return;\n  }\n\n  var chordNumbers = getChordMidiNumbers(chord);\n  var index = (step - 1) % chordNumbers.length;\n  var chordNoteNumber = chordNumbers[index];\n\n  var targetNumber = note.pitch.toMIDI();\n  var result = findClosestMidiNumber(targetNumber, chordNoteNumber);\n\n  if (result) {\n    note.pitch = Pitch.fromMIDI(result, note);\n  } else {\n    note.amp = 0;\n  }\n}\n\nfunction noteToKeyNote(env, note) {\n  var patternKey = env.patternKey;\n  var songKey = env.songKey;\n\n  return transposeNote(patternKey, songKey, note);\n}\n\nfunction getInstruments(song) {\n  return (\n    _.chain(song.findEvents('Voice'))\n    .map(function(voice) { return voice.sound; })\n    .filter(_.identity)\n    .unique()\n    .value()\n  );\n}\n\nfunction generateChordPlayback(chordSequence, patternSong) {\n  var song = chordSequence.env.get('song');\n  var songKey = song.findMeta('Key');\n  var chords = chordSequence.findEvents('Chord');\n  var patternKey = patternSong.findMeta('Key');\n\n  // make sure pattern is 1 bar long\n  var pattern = (\n    _.chain(patternSong.findEvents('Note'))\n    .filter((note) => {\n      var absWn = note.cache.absWn.valueOf();\n      return absWn >= 0 && absWn < 1;\n    })\n    // We decided against transposing all notes, instead it only transposes key notes.\n    // .map((note) => {\n    //   return transposeNote(patternKey, songKey, note);\n    // })\n    .value()\n  );\n\n  // sort chords by time\n  chords = _.sortBy(chords, (chord) => {\n    return chord.cache.absTime.valueOf();\n  });\n\n  var chordEndWn = _.last(chords).cache.endWn;\n  var measures = _.times(Math.ceil(chordEndWn.valueOf()), _.identity);\n  var events = [];\n\n  _.each(measures, (measure) => {\n    var newEvents = _.map(pattern, (note) => {\n      var out = note.toJSON();\n\n      out.position = fractionToWnJSON(note.cache.absWn.add(measure));\n      out.duration = fractionToWnJSON(note.cache.absWn.sub(note.cache.endWn));\n\n      return out;\n    });\n\n    events = events.concat(newEvents);\n  });\n\n  var instruments = getInstruments(patternSong);\n\n  if (instruments.length > 1) {\n    console.error('Pattern contains more than 1 instrument!' +\n      ' Only the first one will be used. Instruments found:', instruments);\n  }\n\n  var container = song.initSubObject({\n    type: 'Voice',\n    id: 'generated-chords',\n    eventTimeMode: 'absolute',\n    sound: instruments[0] || 'keyboard',\n    events: events\n  });\n\n  container.resolve(true);\n\n  var env = {\n    song: song,\n    patternSong: patternSong,\n    chords: chords,\n    songKey: songKey,\n    patternKey: patternKey\n  };\n\n  var currentChordIndex = null;\n  var currentChord = null;\n\n  _.each(container.events, (event) => {\n    if (!currentChord) {\n      // https://github.com/infusion/Fraction.js/#boolean-comparen\n      if (event.cache.absWn.compare(chords[0].cache.absWn) >= 0) {\n        currentChord = chords[0];\n        currentChordIndex = 0;\n      }\n    }\n\n    var nextChordIndex = currentChordIndex + 1;\n    var nextChord = chords[nextChordIndex];\n\n    if (nextChord && event.cache.absWn.compare(nextChord.cache.absWn) >= 0) {\n      currentChordIndex = nextChordIndex;\n      currentChord = nextChord;\n\n      nextChordIndex = currentChordIndex + 1;\n      nextChord = chords[nextChordIndex];\n    }\n\n    if (!currentChord) {\n      event.amp = 0;\n      return event;\n    }\n\n    var harmonyRelation = _.extend({\n      type: 'auto'\n    }, event.harmonyRelation);\n\n    env.currentChord = currentChord;\n    env.nextChord = nextChord;\n    env.harmonyRelation = harmonyRelation;\n\n    var note = event;\n\n    switch (harmonyRelation.type) {\n      default:\n      case 'auto': noteToAutoNote(env, currentChord, note); break;\n      case 'keyNote': noteToKeyNote(env, note); break;\n      case 'chordNote': noteToChordNote(env, currentChord, note); break;\n    }\n  });\n\n  return container;\n}\n\n/**\n * A sequence of chords\n *\n * Convenience class to group chords horizontally, like a {@link Voice} but for {@link Chord}s\n * rather than for {@link Note}s or {@link NoteChord}s.\n *\n */\nexport default class ChordSequence extends EventContainer {\n  /** @ignore */\n  get defaultEventItemType() {\n    return 'Chord';\n  }\n\n  /** @ignore */\n  inspect() {\n    // var color = chalk.yellow;\n    // return color.bold('ChordSequence') + color(' [') + this.getEvents().join(', ') + color(']');\n  }\n\n  generateChordPlayback(patternSong) {\n    return generateChordPlayback(this, patternSong);\n  }\n}\n\nChordSequence.coerce = function(source, parent, copy) {\n  if (source instanceof ChordSequence) return copy ? new ChordSequence(source, parent) : source;\n  throw new Error('Cannot coerce ' + source + ' to a chord sequence!');\n};\n\nChordSequence.itemType = 'ChordSequence';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(ChordSequence);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/chord-sequence.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "fractionToWnJSON",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~fractionToWnJSON",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "fraction",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "getChordPitches",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~getChordPitches",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "chord",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "getChordMidiNumbers",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~getChordMidiNumbers",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "chord",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "findClosestMidiNumber",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~findClosestMidiNumber",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "targetNumber",
        "types": [
          "*"
        ]
      },
      {
        "name": "inputNumber",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "findClosestChordMidiNumber",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~findClosestChordMidiNumber",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "targetNumber",
        "types": [
          "*"
        ]
      },
      {
        "name": "chord",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "closestOctaveDifference",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~closestOctaveDifference",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "pitchFrom",
        "types": [
          "*"
        ]
      },
      {
        "name": "pitchTo",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "transposeNote",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~transposeNote",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [
      {
        "name": "keyFrom",
        "types": [
          "*"
        ]
      },
      {
        "name": "keyTo",
        "types": [
          "*"
        ]
      },
      {
        "name": "note",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "noteToAutoNote",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~noteToAutoNote",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "env",
        "types": [
          "*"
        ]
      },
      {
        "name": "chord",
        "types": [
          "*"
        ]
      },
      {
        "name": "note",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "noteToChordNote",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~noteToChordNote",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "env",
        "types": [
          "*"
        ]
      },
      {
        "name": "chord",
        "types": [
          "*"
        ]
      },
      {
        "name": "note",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "noteToKeyNote",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~noteToKeyNote",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [
      {
        "name": "env",
        "types": [
          "*"
        ]
      },
      {
        "name": "note",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "getInstruments",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~getInstruments",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [
      {
        "name": "song",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "generateChordPlayback",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~generateChordPlayback",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "params": [
      {
        "name": "chordSequence",
        "types": [
          "*"
        ]
      },
      {
        "name": "patternSong",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "class",
    "name": "ChordSequence",
    "memberof": "lib/classes/event/chord-sequence.js",
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~ChordSequence",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": "ChordSequence",
    "description": "A sequence of chords\n\nConvenience class to group chords horizontally, like a {@link Voice} but for {@link Chord}s\nrather than for {@link Note}s or {@link NoteChord}s.",
    "lineNumber": 266,
    "interface": false,
    "extends": [
      "lib/classes/event/event-container.js~EventContainer"
    ]
  },
  {
    "__docId__": 107,
    "kind": "get",
    "name": "defaultEventItemType",
    "memberof": "lib/classes/event/chord-sequence.js~ChordSequence",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/chord-sequence.js~ChordSequence#defaultEventItemType",
    "access": "public",
    "description": null,
    "lineNumber": 268,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/event/chord-sequence.js~ChordSequence",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/chord-sequence.js~ChordSequence#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 273,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "generateChordPlayback",
    "memberof": "lib/classes/event/chord-sequence.js~ChordSequence",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/chord-sequence.js~ChordSequence#generateChordPlayback",
    "access": "public",
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "params": [
      {
        "name": "patternSong",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/chord-sequence.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord-sequence.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord-sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 283,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "lib/classes/event/chord.js",
    "content": "\nimport Event from './event.js';\n// import chalk from 'chalk';\nimport Harmony from '../harmony.js';\n\n/**\n * A chord event\n *\n * In remus terminology, a Chord is a Harmony in event form. In other words, Chord\n * relate to {@link Harmony} much in the same way as {@link Note} relate to {@link Pitch}.\n *\n */\nexport default class Chord extends Event {\n  /** @ignore */\n  static getSlots() {\n    return super.getSlots().concat(['harmony']);\n  }\n\n  /** @ignore */\n  inspect() {\n    // var color = chalk.yellow;\n    // if (this.harmony) return color('<') + color.bold(this.harmony) + color('>');\n    // return color('<chord>');\n  }\n\n  /** @ignore */\n  init() {\n    super.init();\n    /** @type {?Harmony} */\n    this.harmony = this.initSubObject(this.harmony, Harmony) || null;\n    this.isChord = true; // ?\n    return this;\n  }\n\n  /** @ignore */\n  toString() {\n    if (this.harmony) return '<' + this.harmony.toString() + '>';\n    return '<chord>';\n  }\n\n  /** @ignore */\n  localResolve() {\n    super.localResolve();\n    if (this.harmony) {\n      this.cache.harmonyKind = this.harmony.kind();\n    }\n  }\n}\n\nChord.coerce = function(source, parent, copy) {\n  if (source instanceof Chord) {\n    if (copy) return new Chord(source, parent);\n    else return source;\n  }\n  if (source instanceof Harmony) return new Chord({harmony: source}, parent);\n  return new Chord(source, parent);\n  // throw new Error('Cannot coerce ' + source + ' to a chord!');\n};\n\nChord.itemType = 'Chord';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Chord);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/chord.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "class",
    "name": "Chord",
    "memberof": "lib/classes/event/chord.js",
    "static": true,
    "longname": "lib/classes/event/chord.js~Chord",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/chord.js",
    "importStyle": "Chord",
    "description": "A chord event\n\nIn remus terminology, a Chord is a Harmony in event form. In other words, Chord\nrelate to {@link Harmony} much in the same way as {@link Note} relate to {@link Pitch}.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "lib/classes/event/event.js~Event"
    ]
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/event/chord.js~Chord",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord.js~Chord.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/event/chord.js~Chord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/chord.js~Chord#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/event/chord.js~Chord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/chord.js~Chord#init",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "harmony",
    "memberof": "lib/classes/event/chord.js~Chord",
    "static": false,
    "longname": "lib/classes/event/chord.js~Chord#harmony",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "type": {
      "nullable": true,
      "types": [
        "Harmony"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "isChord",
    "memberof": "lib/classes/event/chord.js~Chord",
    "static": false,
    "longname": "lib/classes/event/chord.js~Chord#isChord",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/event/chord.js~Chord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/chord.js~Chord#toString",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "localResolve",
    "memberof": "lib/classes/event/chord.js~Chord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/chord.js~Chord#localResolve",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/chord.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/chord.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/chord.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "lib/classes/event/event-container.js",
    "content": "\nimport _ from 'underscore';\nimport Event from './event.js';\nimport Note from './note.js';\nimport Duration from '../duration.js';\nimport ItemHandler from '../../item-handler.js';\nimport Fraction from 'fraction.js';\nimport misc from '../../misc.js';\nimport { createState, stepState, updateState } from '../../resolver.js';\n\n/**\n * Base class for events that can contain other events.\n *\n * Event containers store their child events in two lists:\n * `events` and `metas`. The `events` list is for Notes, Rests, Chords,\n * Audio clips etc, while the `metas` list is used to store \"meta-events\"\n * like Time, Key and Tempo.\n *\n * EventContainers can be nested, e.g. a Song could contain a voice, which\n * in turn contains a NoteChord, containing some Notes.\n *\n * **Note** that `metas` cannot be nested. Events in `metas` also cannot\n * have (non-zero) duration — they only have position.\n *\n * All event containers have a *time mode* for its `events` and `metas` lists.\n * Time mode can be either `absolute` or `relative`. This determines how\n * the position of the contained events are interpreted.\n *\n * * In **absolute time mode**, positions are related to the parent container's start position\n * * In **relative time mode**, positions are related to the previous event's end position\n *\n * Subclasses of EventContainer specify a default time mode, however that can be\n * overridden in individual objects if needed.\n *\n * For example, VerticalContainer have the default `eventTimeMode` set to `absolute`.\n * This means that Notes in a NoteChord relate to the beginning of the NoteChord by default,\n * while NoteChords in a Voice are placed after each other by default (since the default\n * `eventTimeMode` for Voice is `relative`).\n */\nexport default class EventContainer extends Event {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots().concat(['eventTimeMode', 'metaTimeMode', 'scale']);\n  }\n\n  /*\n   * @ignore\n   */\n  constructor(properties, parent) {\n    if (!properties) properties = {};\n    super(properties, parent);\n\n    this.initEvents(properties.events || [], this.defaultEventItemType); // Why not just specify events and metas as slots??\n    this.metas = this.initSubObjects(properties.metas);\n  }\n\n  /** @ignore */\n  initEvents(events, defaultItemType) {\n    var ItemConstructor = defaultItemType ? ItemHandler.getConstructor(defaultItemType) : null;\n    this.events = this.initSubObjects(events, ItemConstructor);\n  }\n\n  /** @ignore */\n  init() {\n    super.init();\n    this.eventTimeMode = this.eventTimeMode || this.defaultEventTimeMode;\n    this.metaTimeMode = this.metaTimeMode || this.defaultMetaTimeMode;\n    /** @type {Fraction} */\n    this.scale = this.scale === undefined ? null : new Fraction(this.scale);\n    return this;\n  }\n\n  /** @ignore */\n  clone() {\n    let copy = super.clone();\n    copy.events = misc.clone(this.events);\n    copy.metas = misc.clone(this.metas);\n    return copy;\n  }\n\n  /**\n   * Returns immediate children of the specified class, or matching the specified function.\n   * @param {?(string|function)} [selector] - A string, a function or `null` (for matching all items)\n   * @return {Array}\n   */\n  childEvents(selector) {\n    var selectorFunction = null;\n\n    if (_.isFunction(selector)) {\n      selectorFunction = selector;\n    } else if (_.isString(selector)) {\n      selectorFunction = (item) => {\n        return item.type === selector;\n      };\n    } else {\n      selectorFunction = v => true;\n    }\n\n    return _.filter(this.events, selectorFunction);\n  }\n\n  /**\n   * Returns descendents of the specified class, or matching the specified function.\n   * @param {?(string|function)} [selector] - A string, a function or `null` (for matching all items)\n   * @return {Array}\n   */\n  findEvents(selector) {\n    var events = this.childEvents(selector);\n\n    _.each(this.events, (event) => {        // NB: Go through the unfiltered this.events, in order to search the whole tree\n      if (event instanceof EventContainer) {\n        events = events.concat(event.findEvents(selector));\n      }\n    });\n\n    return events;\n  }\n\n  /**\n   * Find the first descendent of the specified class, or matching the specified function.\n   * @param {?(string|function)} [selector] - A string, a function or `null` (for matching all items)\n   * @return {Event?}\n   */\n  findEvent(selector) {\n    var events = this.findEvents(selector); // TODO: stop at first match instead of finding all\n    return events ? events[0] : null;\n  }\n\n  /**\n   * Returns immediate child metas of the specified class, or matching the specified function.\n   * @param {?(string|function)} [selector] - A string, a function or `null` (for matching all items)\n   * @return {Array}\n   */\n  childMetas(selector) {\n    var selectorFunction = null;\n\n    if (_.isFunction(selector)) {\n      selectorFunction = selector;\n    } else if (_.isString(selector)) {\n      selectorFunction = (item) => {\n        return item.type === selector;\n      };\n    } else {\n      selectorFunction = v => true;\n    }\n\n    return _.filter(this.metas, selectorFunction);\n  }\n\n  /**\n   * Returns descendent metas of the specified class, or matching the specified function.\n   * @param {?(string|function)} [selector] - A string, a function or `null` (for matching all items)\n   * @return {Array}\n   */\n  findMetas(selector) {\n    var metas = this.childMetas(selector);\n\n    _.each(this.events, (event) => {        // NB: Go through the unfiltered this.events, in order to search the whole tree\n      if (event instanceof EventContainer) {\n        metas = metas.concat(event.findMetas(selector));\n      }\n    });\n\n    return metas;\n  }\n\n  /**\n   * Find the first meta of the specified class, or matching the specified function.\n   * @param {?(string|function)} [selector] - A string, a function or `null` (for matching all items)\n   * @return {Event?}\n   */\n  findMeta(selector) {\n    var metas = this.findMetas(selector); // TODO: stop at first match instead of finding all\n    return metas ? metas[0] : null;\n  }\n\n  /**\n   * @ignore\n   */\n  toJSON() {\n    var obj = super.toJSON();\n    if (obj.scale instanceof Fraction && obj.scale.valueOf() === 1) delete obj.scale;\n    if (obj.eventTimeMode === this.defaultEventTimeMode) delete obj.eventTimeMode;\n    if (obj.metaTimeMode === this.defaultMetaTimeMode) delete obj.metaTimeMode;\n    obj.events = _.map(this.childEvents(), event => event.toJSON());\n    let metas = this.childMetas();\n    if (metas && metas.length) obj.metas = _.map(metas, meta => meta.toJSON());\n    return obj;\n  }\n\n  /**\n   * @ignore\n   */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.isOneOf(this, 'eventTimeMode', ['absolute', 'relative']);\n    validator.isOneOf(this, 'metaTimeMode', ['absolute', 'relative']);\n    validator.hasTypeOrNull(this, 'scale', Fraction);\n    return validator;\n  }\n\n  enableAutoResolver() {\n    super.enableAutoResolver();\n    _.each(this.childEvents(), (event) => { event.enableAutoResolver(); });\n  }\n\n  disableAutoResolver() {\n    super.disableAutoResolver();\n    _.each(this.childEvents(), (event) => { event.disableAutoResolver(); });\n  }\n\n  /**\n   * @ignore\n   */\n  get defaultEventTimeMode() {\n    return 'relative';\n  }\n\n  /**\n   * @ignore\n   */\n  get defaultMetaTimeMode() {\n    return 'relative';\n  }\n\n  /**\n   * @protected\n   */\n  resolveMetas(force = false) {\n    super.resolveMetas(force);\n    if (!this.metas || this.metas.length === 0) return false;\n\n    // TODO: handle unsorted absolute lists\n\n    var absolute = this.metaTimeMode === 'absolute';\n    var state = absolute ? null : createState(this, this.cache.globals);\n    this.metas.forEach(child => {\n      if (child.position) {\n        if (absolute) {\n          if (!child.position.isFixed()) throw Error('Absolute meta lists must only have fixed duration units');\n          state = createState(this, this.cache.globals);\n        } else {\n          if (child.position.value < 0) throw Error('Negative time values not allowed in relative meta list');\n        }\n        stepState(state, child.position, this.cache.globals);\n      }\n      child.cache.absTime = state.absTime;\n      child.cache.absWn = state.absWn;\n      child.cache.tempo = state.tempo;\n      child.cache.time = state.time;\n      child.cache.sPerWn = state.sPerWn;\n      child.cache.key = state.key;\n      // child.env.set(\"tempo\", state.tempo);\n      // child.env.set(\"time\", state.time);\n      // child.env.set(\"sPerWn\", state.sPerWn);\n      switch (child.type) {\n        case 'Time':\n        case 'Tempo':\n        case 'Key':\n          this.cache.globals = _.sortBy(this.cache.globals.concat(child), 'absTime');\n          if (child.type === 'Tempo') state.tempo = child;\n          if (child.type === 'Time') state.time = child;\n          if (child.type === 'Key') state.key = child;\n          updateState(state, child);\n          break;\n      }\n      child.localResolve();\n    });\n\n    return true; // TODO!\n  }\n\n    /**\n   * Find overlapping events.\n   * Returns an array of arrays, where each top-level array is a \"cluster\" of overlapping events\n   * @return {Array}\n   */\n  findOverlappingEvents() {\n    this.resolve();\n    if (!this.events) return [];\n    // Sort events by start time\n    var events = this.events.slice().sort((a, b) => { return a.cache.absTime.sub(b.cache.absTime); });\n    var clusters = [];\n    var overlapping = [];\n    var max = null;\n    var lastEvent = null;\n    _.each(events, (event) => {\n      if (lastEvent && (max > event.cache.absTime)) {\n        // Overlap\n        max = max > event.cache.endTime ? max : event.cache.endTime;\n        if (overlapping[overlapping.length - 1] !== lastEvent) overlapping.push(lastEvent);\n        overlapping.push(event);\n      } else {\n        // No overlap\n        max = event.cache.endTime;\n        if (overlapping.length) {\n          clusters.push(overlapping);\n          overlapping = [];\n        }\n      }\n      lastEvent = event;\n    });\n    if (overlapping.length) clusters.push(overlapping);\n    return clusters;\n  }\n\n /**\n   * Non-destructivly (but see note below) split the EventContainer based on the layer slot of the contained events.\n   * @param {bool} [resetLayerSlot=false] - Set the layer slot to null for all events after splitting\n   * @return {Array} - Returns a list of new containers of the same class as the original EventContainer\n   * NOTE: In the current implementation, the EventContainer is cloned, but its events aren't.\n   * This means that the newly created EventContainers will share data with the original EventContainer,\n   * and if resetLayerSlot is used, layers will be reset also in the original EventContainer.\n   */\n  splitByLayers(resetLayerSlot = false) {\n    if (this.eventTimeMode !== 'absolute') {\n      throw new Error('splitByLayers can currently only be used with absolute-time containers');\n    }\n    // TODO: handle relative mode\n    var newEventLists = [];\n    _.each(this.events, (event) => {\n      var layer = event.layer || 0;\n      if (!newEventLists[layer]) newEventLists[layer] = [];\n      newEventLists[layer].push(event);\n      if (resetLayerSlot) event.layer = null;\n    });\n    return newEventLists.map((events) => {\n      var container = this.clone();\n      container.events = events;\n      return container;\n    }, this);\n  }\n\n  static mergeIntoLayers(containers) {\n    // Sanity check\n    if (containers.length === 0) throw new Error('Empty array passed to mergeIntoLayers');\n    if (_.uniq(containers.map((c) => { return c.type; })).length !== 1) {\n      console.warn('Non-uniform array passed to mergeIntoLayers');\n    }\n    // Can currently only handle absolute time mode\n    _.each(containers, (container) => {\n      if (container.eventTimeMode !== 'absolute') {\n        throw new Error('mergeIntoLayers can currently only be used with absolute-time containers');\n      }\n    });\n    // TODO: check for existing layers in the passed containers, and preferly do something about them\n    // (might be so simple as to call splitByLayers on every container)\n\n    var container = containers[0].clone();\n    _.each(container.events, (event) => { event.layer = 0; });\n    for (var i = 1; i < containers.length; i++) {\n      _.each(containers[i].events, (event) => {\n        event.layer = i;    // TODO: this is a destructive operation! Document or handle differently\n        container.events.push(event);\n      });\n    }\n\n    return container;\n  }\n\n  // unwrapNotes() {\n  //   if (this.eventTimeMode !== 'absolute') {\n  //     throw new Error('unwrapNotes can currently only be used with absolute-time containers');\n  //   }\n  //   if (!this.events) return null;\n  //   this.resolve();\n  //   let notes = this.findEvents('Note');\n  //   _.each(notes, (note) => {\n  //     note.position = new Duration({ value: note.cache.absTime, unit: 's'});\n  //   });\n  //   this.events = notes;\n  // }\n\n  // Very Simple Version:\n  // - can only handle containers in absolute time mode\n  // - the actual Note objects being unwrapped cannot have an explicit [non-zero] position\n  // - unwrapping is not recursive, only one level deep (may be a feature though)\n  unwrapNotes() {\n    if (this.eventTimeMode !== 'absolute') {\n      throw new Error('unwrapNotes can currently only be used with absolute-time containers');\n    }\n    if (!this.events) return null;\n    let notes = [];\n    this.events = _.filter(this.events, (event) => {\n      if (event.events) { // Duck typing\n        let single = event.events.length === 1;\n        event.events = _.filter(event.events, (child) => {\n          if (child instanceof Note) {\n            if (child.position && child.position.value !== 0) {\n              throw new Error('unwrapNotes can currently not handle notes with explicit position');\n            }\n            child.position = single ? event.position : new Duration(event.position); // Reuse if possible\n            notes.push(child);\n            return false;\n          }\n          return true;\n        });\n        return event.events.length > 0; // Keep the event if there are sub-events left in it\n      }\n    });\n    this.events = this.events.concat(notes); // Add the extracted notes. TODO: sort by position?\n  }\n\n  /**\n   * Identify overlapping events (using {@link findOverlappingEvents()}) and\n   * assign ther layer slot, so that each event belongs to a non-overlapping layer.\n   * Non-overlapping events get their layer slot set to null.\n   * NOTE: Currently, no regard is given existing layer assignments; they are just discarded.\n   */\n  assignOverlapsToLayers() {\n    // Reset existing layer assignments\n    // TODO: Keep existing layer assignments\n    _.each(this.events, (event) => { event.layer = null; });\n\n    // Loop over overlap clusters one by one, as they are guaranteed to be disjoint\n    var clusters = this.findOverlappingEvents();\n    _.each(clusters, (cluster) => {\n      var layers = [];\n      _.each(cluster, (event) => {\n        // Check if this event fits into an existing layer\n        for (var i = 0; i < layers.length; i++) {\n          if (event.cache.absTime >= layers[i]) {\n            event.layer = i;\n            layers[i] = event.cache.endTime;\n            return;\n          }\n        }\n        // Doesn't fit in any existing layer, create a new one\n        event.layer = layers.length;\n        layers.push(event.cache.endTime);\n      });\n    });\n  }\n\n  // Very Simple Version:\n  // - can only handle containers in absolute time mode\n  // - the actual Note objects being unwrapped cannot have an explicit [non-zero] position\n  // - unwrapping is not recursive, only one level deep (may be a feature though)\n  wrapNotes() {\n    if (this.eventTimeMode !== 'absolute') {\n      throw new Error('wrapNotes can currently only be used with absolute-time containers');\n    }\n    if (!this.events) return null;\n    let NoteChord = ItemHandler.getConstructor('NoteChord'); // Can't import NoteChord (circular dependency)\n    let noteChords = {}; // map position -> object\n    this.events = _.filter(this.events, (note) => {\n      if (!(note instanceof Note)) return true; // Keep non-Note items\n      let pos = note.position ? note.position.toString() : 'no';\n      let dur = note.duration ? note.duration.toString() : 'no';\n      let ident = pos + ' ' + dur;\n      let noteChord = noteChords[ident];\n      if (!noteChord) {\n        noteChord = NoteChord.coerce({}); // cannot call new NoteChord(), it is not a function (but why really?)\n        noteChord.position = note.position;\n        noteChord.duration = note.duration;\n        noteChords[ident] = noteChord;\n      }\n      note.position = null;\n      note.duration = null;\n      noteChord.events.push(note);\n      return false; // Remove the Note from the event list\n    });\n    // Add the new noteChords. TODO: sort by position?\n    this.events = this.events.concat(_.values(noteChords));\n  }\n\n  /**\n   * Get pitch statistics of descendant notes\n   * Return an object with the keys `min`, `max`, `mean` and `median`,\n   * representing pitches in `mmel` units.\n   * @return {Object}\n   */\n  getAmbitus() {\n    let pitches = this.findEvents('Note').map((note) => {\n      return note.pitch.toMmel();\n    });\n    pitches.sort();\n    let count = pitches.length;\n    if (!count) return null;\n    let median = count % 2\n      ? pitches[Math.ceil(count / 2) - 1]  // odd number of elements: take the middle value\n      : (pitches[count / 2 - 1] + pitches[count / 2]) / 2; // even number: take the mean of the two middle values\n    return {\n      min: pitches[0],\n      max: pitches[count - 1],\n      mean: pitches.reduce((a, b) => { return a + b; }) / count,\n      median: median\n    };\n  }\n\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/event-container.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "class",
    "name": "EventContainer",
    "memberof": "lib/classes/event/event-container.js",
    "static": true,
    "longname": "lib/classes/event/event-container.js~EventContainer",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/event-container.js",
    "importStyle": "EventContainer",
    "description": "Base class for events that can contain other events.\n\nEvent containers store their child events in two lists:\n`events` and `metas`. The `events` list is for Notes, Rests, Chords,\nAudio clips etc, while the `metas` list is used to store \"meta-events\"\nlike Time, Key and Tempo.\n\nEventContainers can be nested, e.g. a Song could contain a voice, which\nin turn contains a NoteChord, containing some Notes.\n\n**Note** that `metas` cannot be nested. Events in `metas` also cannot\nhave (non-zero) duration — they only have position.\n\nAll event containers have a *time mode* for its `events` and `metas` lists.\nTime mode can be either `absolute` or `relative`. This determines how\nthe position of the contained events are interpreted.\n\n* In **absolute time mode**, positions are related to the parent container's start position\n* In **relative time mode**, positions are related to the previous event's end position\n\nSubclasses of EventContainer specify a default time mode, however that can be\noverridden in individual objects if needed.\n\nFor example, VerticalContainer have the default `eventTimeMode` set to `absolute`.\nThis means that Notes in a NoteChord relate to the beginning of the NoteChord by default,\nwhile NoteChords in a Voice are placed after each other by default (since the default\n`eventTimeMode` for Voice is `relative`).",
    "lineNumber": 40,
    "interface": false,
    "extends": [
      "lib/classes/event/event.js~Event"
    ]
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/event-container.js~EventContainer.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "metas",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#metas",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "initEvents",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#initEvents",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "ignore": true,
    "params": [
      {
        "name": "events",
        "types": [
          "*"
        ]
      },
      {
        "name": "defaultItemType",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "events",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#events",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#init",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "eventTimeMode",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#eventTimeMode",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "metaTimeMode",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#metaTimeMode",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "scale",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#scale",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "Fraction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "clone",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#clone",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "childEvents",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#childEvents",
    "access": "public",
    "description": "Returns immediate children of the specified class, or matching the specified function.",
    "lineNumber": 88,
    "params": [
      {
        "nullable": true,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "selector",
        "description": "A string, a function or `null` (for matching all items)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "findEvents",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#findEvents",
    "access": "public",
    "description": "Returns descendents of the specified class, or matching the specified function.",
    "lineNumber": 109,
    "params": [
      {
        "nullable": true,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "selector",
        "description": "A string, a function or `null` (for matching all items)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "findEvent",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#findEvent",
    "access": "public",
    "description": "Find the first descendent of the specified class, or matching the specified function.",
    "lineNumber": 126,
    "params": [
      {
        "nullable": true,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "selector",
        "description": "A string, a function or `null` (for matching all items)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Event?"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "childMetas",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#childMetas",
    "access": "public",
    "description": "Returns immediate child metas of the specified class, or matching the specified function.",
    "lineNumber": 136,
    "params": [
      {
        "nullable": true,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "selector",
        "description": "A string, a function or `null` (for matching all items)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "findMetas",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#findMetas",
    "access": "public",
    "description": "Returns descendent metas of the specified class, or matching the specified function.",
    "lineNumber": 157,
    "params": [
      {
        "nullable": true,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "selector",
        "description": "A string, a function or `null` (for matching all items)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "findMeta",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#findMeta",
    "access": "public",
    "description": "Find the first meta of the specified class, or matching the specified function.",
    "lineNumber": 174,
    "params": [
      {
        "nullable": true,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "selector",
        "description": "A string, a function or `null` (for matching all items)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Event?"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#toJSON",
    "access": "public",
    "description": "",
    "lineNumber": 182,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#doValidate",
    "access": "public",
    "description": "",
    "lineNumber": 196,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "enableAutoResolver",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#enableAutoResolver",
    "access": "public",
    "description": null,
    "lineNumber": 204,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "disableAutoResolver",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#disableAutoResolver",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "get",
    "name": "defaultEventTimeMode",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#defaultEventTimeMode",
    "access": "public",
    "description": "",
    "lineNumber": 217,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "get",
    "name": "defaultMetaTimeMode",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#defaultMetaTimeMode",
    "access": "public",
    "description": "",
    "lineNumber": 224,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "resolveMetas",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#resolveMetas",
    "access": "protected",
    "description": "",
    "lineNumber": 231,
    "params": [
      {
        "name": "force",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "findOverlappingEvents",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#findOverlappingEvents",
    "access": "public",
    "description": "Find overlapping events.\nReturns an array of arrays, where each top-level array is a \"cluster\" of overlapping events",
    "lineNumber": 280,
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "splitByLayers",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#splitByLayers",
    "access": "public",
    "description": "Non-destructivly (but see note below) split the EventContainer based on the layer slot of the contained events.",
    "lineNumber": 317,
    "params": [
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "resetLayerSlot",
        "description": "Set the layer slot to null for all events after splitting"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Returns a list of new containers of the same class as the original EventContainer\nNOTE: In the current implementation, the EventContainer is cloned, but its events aren't.\nThis means that the newly created EventContainers will share data with the original EventContainer,\nand if resetLayerSlot is used, layers will be reset also in the original EventContainer."
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "mergeIntoLayers",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/event-container.js~EventContainer.mergeIntoLayers",
    "access": "public",
    "description": null,
    "lineNumber": 336,
    "undocument": true,
    "params": [
      {
        "name": "containers",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "unwrapNotes",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#unwrapNotes",
    "access": "public",
    "description": null,
    "lineNumber": 380,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "assignOverlapsToLayers",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#assignOverlapsToLayers",
    "access": "public",
    "description": "Identify overlapping events (using {@link findOverlappingEvents()}) and\nassign ther layer slot, so that each event belongs to a non-overlapping layer.\nNon-overlapping events get their layer slot set to null.\nNOTE: Currently, no regard is given existing layer assignments; they are just discarded.",
    "lineNumber": 412,
    "params": [],
    "return": null
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "wrapNotes",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#wrapNotes",
    "access": "public",
    "description": null,
    "lineNumber": 441,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "getAmbitus",
    "memberof": "lib/classes/event/event-container.js~EventContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event-container.js~EventContainer#getAmbitus",
    "access": "public",
    "description": "Get pitch statistics of descendant notes\nReturn an object with the keys `min`, `max`, `mean` and `median`,\nrepresenting pitches in `mmel` units.",
    "lineNumber": 475,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "lib/classes/event/event.js",
    "content": "\nimport Item from '../item.js';\nimport Duration from '../duration.js';\nimport Syllable from '../syllable.js';\nimport _ from 'underscore';\nimport { createState, stepState } from '../../resolver.js';\nimport Fraction from 'fraction.js';\n\n/**\n * Base class for all Items that can be placed in a timeline.\n *\n * All events have a position (although it may be implicit). Some\n * events also have a duration (Note, Rest, Voice, etc.), while other\n * have no extent (Key, Time, etc.)\n *\n * Durations need not always be explicit: under certain circumstances,\n * durations are inherited either \"upward\" or \"downward\" in the tree.\n *\n * For example, Notes in a NoteChord inherit their duration from the\n * NoteChord, unless overridden in the individual Note objects. A\n * VoiceContainer, on the other hand, automatically expands to the\n * duration of its child Voice objects, unless the VoiceContainer have\n * an explicit duration.\n *\n * To get the absolute position or duration of an event, the event\n * need to be *resolved*. After resolving, the absolute time values\n * can be read from `event.cache`:\n *\n * Key                              | Value\n * -------------------------------- | -------------------------\n * `event.cache.absTime`            | Start time in seconds\n * `event.cache.absWn`              | Start time in wn (whole notes)\n * `event.cache.endTime`            | End time in seconds (not relevant for events that lack extent)\n * `event.cache.endWn`              | End time in wn\n * `event.cache.trimmedStartTime`   | Start time in seconds, taking trim into account\n * `event.cache.trimmedStartWn`     | Trimmed start time in wn\n * `event.cache.trimmedEndTime`     | Trimmed end time in seconds\n * `event.cache.trimmedEndWn`       | Trimmed end time in wn\n * `event.cache.skip`               | Amount of time in seconds to skip from the beginning, e.g. for audio files\n * `event.cache.playbackTimingTime` | Playback timing offset in seconds\n *\n *  ### Other cache values\n *\n * Key                            | Value\n * ------------------------------ | ----------------------\n * `event.cache.amp`              | Volume. 1.0 is the default\n * `event.cache.enabled`          | Item and all of its anchestors is enabled\n\n */\nexport default class Event extends Item {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots().concat(\n      ['position', 'duration', 'anchor', 'offset', 'trimLeft', 'trimRight', 'amp', 'repeat', 'stepDuration',\n      'playbackTiming', 'score', 'layer', 'syllables']);\n  }\n\n  /**\n   * @ignore\n   */\n  init() {\n    super.init();\n\n    if (this.offset) {\n      console.warn('offset is deprecated');\n    }\n\n    /** @type {Duration} */\n    this.position = this.initSubObject(this.position, Duration);\n    /** @type {Duration} */\n    this.duration = this.initSubObject(this.duration, Duration);\n    /** @type {Duration} */\n    this.anchor = this.initSubObject(this.anchor, Duration);\n    /** @type {Duration} */\n    this.offset = this.initSubObject(this.offset, Duration);\n    /** @type {Duration} */\n    this.trimLeft = this.initSubObject(this.trimLeft, Duration);\n    /** @type {Duration} */\n    this.trimRight = this.initSubObject(this.trimRight, Duration);\n    /** @type {Duration} */\n    this.playbackTiming = this.initSubObject(this.playbackTiming, Duration);\n    /** @type {Number} */\n    this.amp = this.amp === undefined ? 1 : this.amp;\n    /** @type {Number} */\n    this.repeat = this.repeat === undefined ? 1 : this.repeat;\n    /** @type {boolean} */\n    this.stepDuration = this.stepDuration === undefined ? this.defaultStepDuration : this.stepDuration;\n    /** @type {?Number} */\n    this.layer = this.layer === undefined ? null : this.layer;\n    /** @type {Syllable[]} */\n    this.syllables = this.initSubObjects(this.syllables, Syllable);\n    return this;\n  }\n\n  /**\n   * @ignore\n   */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.hasTypeOrNull(this, 'position', Duration);\n    validator.hasTypeOrNull(this, 'duration', Duration);\n    validator.hasTypeOrNull(this, 'anchor', Duration);\n    validator.hasTypeOrNull(this, 'offset', Duration);\n    validator.hasTypeOrNull(this, 'trimLeft', Duration);\n    validator.hasTypeOrNull(this, 'trimRight', Duration);\n    validator.hasTypeOrNull(this, 'playbackTiming', Duration);\n    validator.isNumber(this, 'amp', 0, null);\n    validator.isIntegerOrNull(this, 'layer', 0);\n    validator.isInteger(this, 'repeat', 0, null);\n    validator.isBoolean(this, 'stepDuration');\n    return validator;\n  }\n\n  /**\n   * @param {boolean} [force=false] Force resolve, even if `shouldResolve` is `false`\n   */\n  resolve(force = false) {\n    // super.resolve(force);\n    // if (force || this.shouldResolve) {\n    if (true) { // TEMP: always resolve, because shouldResolve is not implemented correctly!\n      var changed = this.resolveEvents(force) || changed;\n      if (changed || force) {\n        this.resolveTrim();\n        this.resolveRepeats();\n      }\n    }\n    this.localResolve();\n  }\n\n  /**\n   * @protected\n   * Called internally by resolveEvents\n   */\n  resolveMetas(force) {\n    // See EventContainer for more interesting stuff\n    this.cache.globals = (this.parent && this.parent.cache.globals) ? this.parent.cache.globals : [];\n    return false;\n  }\n\n  /**\n   * @protected\n   * Called internally by resolve\n   */\n  resolveEvents(force) {\n    // console.warn(\"resolving \", this);\n\n    if (this.parent && this.parent.shouldResolve) {\n      console.warn('Using outdated parent');\n    }\n\n    // Remember old values for comparision\n    var oldAbsTime = this.cache.absTime;\n    var oldEndTime = this.cache.endTime;\n    var oldAbsWn = this.cache.absWn;\n    var oldEndWn = this.cache.endWn;\n\n    // Simple inherited properties\n    this.cache.enabled = this.parent ? !!(this.parent.cache.enabled && this.enabled) : !!this.enabled;\n    let parentAmp = this.parent ? this.parent.cache.amp : 1.0;\n    this.cache.amp = _.isNumber(this.amp) ? (this.amp * parentAmp) : parentAmp;\n    let parentScale = this.parent ? this.parent.cache.scale : new Fraction(1);\n    this.cache.scale = this.scale ? parentScale.mul(this.scale) : parentScale;\n\n    // Start time\n    var refTime = this.parent ? this.parent.cache.absTime : new Fraction(0);   // reference point\n    var refWn = this.parent ? this.parent.cache.absWn : new Fraction(0);\n    var defTime = refTime;                                                // default, if no position given\n    var defWn = refWn;\n    if (this.parent && this.parent.eventTimeMode === 'relative' &&\n        this.cache.prevSibling && this.cache.prevSibling.stepDuration) {\n      defTime = this.cache.prevSibling.cache.endTime;\n      defWn = this.cache.prevSibling.cache.endWn;\n    }\n    this.cache.absTime = defTime;\n    this.cache.absWn = defWn;\n    if (this.parent) {\n      var state = createState(this, this.parent ? this.parent.cache.globals : []);\n      if (this.position && !this.position.isZero()) {\n        stepState(state, this.position, this.parent.cache.globals);\n        this.cache.absTime = state.absTime;\n        this.cache.absWn = state.absWn;\n      }\n      this.cache.tempo = state.tempo;\n      this.cache.time = state.time;\n      this.cache.sPerWn = state.sPerWn;\n      this.cache.key = state.key;\n    } else {\n      if (this.position && !this.position.isZero()) {\n        throw Error('Top object cannot have a non-zero position');\n      }\n    }\n\n    // Now that we know the start time of the event, we resolve the meta list\n    this.resolveMetas();\n\n    // console.log(\"After resolveMetas() for \", this, this.cache.globals);\n\n    // Inherit explicit durations from parent\n    var duration = this.duration || ((this.inheritExplitDuration && this.parent) ? this.parent.cache.duration : null);\n    this.cache.duration = duration;\n\n    // Mark as resolved before propagating to children\n    this.shouldResolve = false;\n\n    // Propagate\n    var children = this.events ? this.events.slice(0) : [];\n    var maxEndTime = this.cache.absTime;\n    var maxEndWn = this.cache.absWn;\n    this.cache.children = children;\n    for (var no = 0; no < children.length; no++) {\n      var child = children[no];\n      child.cache.no = no;\n      child.cache.prevSibling = children[no - 1];\n      child.cache.nextSibling = children[no + 1];\n      child.resolveEvents(force);\n      child.localResolve();\n      if (child.cache.endTime > maxEndTime) maxEndTime = child.cache.endTime;\n      if (child.cache.endWn > maxEndWn) maxEndWn = child.cache.endWn;\n    }\n\n    if (duration && !duration.isZero()) { // Explicit duration in this object, or inherited from parent\n      state = createState(this, this.cache.globals);\n      stepState(state, duration, this.cache.globals);\n      this.cache.endTime = state.absTime;\n      this.cache.endWn = state.absWn;\n    } else {\n      this.cache.endTime = maxEndTime;\n      this.cache.endWn = maxEndWn;\n    }\n\n    // Temp: cache.durations\n    // if (this.cache.endWn) {\n    //   this.cache.durations = [this.cache.endWn.sub(this.cache.absWn)];\n    // }\n\n    // Return true if timing changed\n    return (this.cache.absTime !== oldAbsTime ||\n      this.cache.endTime !== oldEndTime ||\n      !this.cache.absWn.equals(oldAbsWn) ||\n      !this.cache.endWn.equals(oldEndWn));\n  }\n\n  /**\n   * @protected\n   * Called internally by resolve\n   */\n  resolveTrim() {\n    // Start values are the boundaries of the event\n    this.cache.trimmedStartTime = this.cache.absTime;\n    this.cache.trimmedStartWn = this.cache.absWn;\n    this.cache.trimmedEndTime = this.cache.endTime;\n    this.cache.trimmedEndWn = this.cache.endWn;\n    this.cache.skip = 0;\n\n    // Left Trim\n    if (this.trimLeft && this.trimLeft.value > 0) {\n      let state = createState(this, this.cache.globals);\n      stepState(state, this.trimLeft, this.cache.globals);\n      this.cache.trimmedStartTime = state.absTime;\n      this.cache.trimmedStartWn = state.absWn;\n    }\n    // Right Trim\n    if (this.trimRight && this.trimRight.value > 0) {\n      // TODO!!!\n      // this.cache.tempo is not defined here! (Yes, it is??)\n\n      let state = createState(this, this.cache.globals);\n      let actualDuration = Duration.coerce([this.cache.endWn.sub(this.cache.absWn), 'wn']);\n      // console.log(\">> actualDuration\", actualDuration, this.cache.endTime.sub(this.cache.absTime));\n      // console.log(\"Before stepping: \", state);\n      stepState(state, actualDuration, this.cache.globals);\n      // console.log(\"After stepping: \", state);\n      // console.log(\">> trimRight: \", this.trimRight, state.absTime);\n      stepState(state, this.trimRight.inverse(), this.cache.globals);\n      // console.log(\">> inverted trimRight\", this.trimRight.inverse(), state.absTime);\n      this.cache.trimmedEndTime = state.absTime;\n      this.cache.trimmedEndWn = state.absWn;\n    }\n\n    // Store this object's \"own\" trim, unaffected by inherited values (needed for e.g. repeats)\n    this.cache.ownTrimmedStartTime = this.cache.trimmedStartTime;\n    this.cache.ownTrimmedStartWn = this.cache.trimmedStartWn;\n    this.cache.ownTrimmedEndTime = this.cache.trimmedEndTime;\n    this.cache.ownTrimmedEndWn = this.cache.trimmedEndWn;\n\n    // Adjust left trim so that it uses the maximum of the own and the inherited value\n    if (this.parent && (this.parent.cache.trimmedStartTime !== undefined)) {\n      if (this.cache.trimmedStartTime < this.parent.cache.trimmedStartTime) {\n        this.cache.trimmedStartTime = this.parent.cache.trimmedStartTime;\n        this.cache.trimmedStartWn = this.parent.cache.trimmedStartWn;\n      }\n    }\n\n    // Same for right trim\n    if (this.parent && (this.parent.cache.trimmedEndTime !== undefined)) {\n      if (this.cache.trimmedEndTime > this.parent.cache.trimmedEndTime) {\n        this.cache.trimmedEndTime = this.parent.cache.trimmedEndTime;\n        this.cache.trimmedEndWn = this.parent.cache.trimmedEndWn;\n      }\n    }\n\n    // Set trimmedStart\n    if (this.cache.absTime < this.cache.trimmedStartTime) {\n      this.cache.trimmedStart = true;\n      this.cache.skip = this.cache.trimmedStartTime - this.cache.absTime;\n      // TEMPORARY:\n      // Set enabled to false for Notes or NoteChords that have a trimmed start\n      if (((this.type === 'Note') || (this.type === 'NoteChord')) && (this.cache.skip > 0)) this.cache.enabled = false;\n    }\n    if ((this.cache.trimmedEndTime !== undefined) && this.cache.absTime > this.cache.trimmedEndTime) {\n      this.cache.trimmedStart = true; // sic!\n      if ((this.type === 'Note') || (this.type === 'NoteChord')) this.cache.enabled = false;\n    }\n\n    // Propagate to children\n    if (this.cache.children) {\n      this.cache.children.forEach(function(child) {\n        child.resolveTrim();\n      });\n    }\n  }\n\n  /**\n   * @protected\n   * Called internally by resolve\n   */\n  resolveRepeats() {\n    this.cache.repeats = this.parent ? this.parent.cache.repeats : [];\n    if (this.repeat !== 1) {\n      this.cache.repeats = this.cache.repeats.slice(); // copy on write\n      this.cache.repeats.push({\n        count: this.repeat,\n        periodTime: this.cache.ownTrimmedEndTime.sub(this.cache.ownTrimmedStartTime),\n        periodWn: this.cache.ownTrimmedEndWn.sub(this.cache.ownTrimmedStartWn)\n      });\n    }\n    if (this.cache.children) {\n      this.cache.children.forEach((child) => {\n        child.resolveRepeats();\n      });\n    }\n  }\n\n  /** @ignore */\n  localResolve() {\n    super.localResolve();\n    if (this.playbackTiming) {\n      if (this.playbackTiming.isTime()) {\n        this.cache.playbackTimingTime = this.playbackTiming.toSeconds();\n      } else if (this.playbackTiming.unit === 'wn') {\n        this.cache.playbackTimingTime = this.playbackTiming.value.mul(this.cache.sPerWn);\n      } else {\n        console.error('Bad unit in playbackTiming');\n      }\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  get defaultStepDuration() {\n    return true; // true means automatic\n  }\n\n  /**\n   * @ignore\n   */\n  toJSON() {\n    var obj = super.toJSON();\n    if (obj.stepDuration === this.defaultStepDuration) delete obj.stepDuration;\n    if (obj.amp === 1.0) delete obj.amp;\n    if (obj.repeat === 1) delete obj.repeat;\n    if (!(_.isArray(obj.syllables)) || obj.syllables.length === 0) delete obj.syllables;\n    return obj;\n  }\n\n}\n\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/event.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 158,
    "kind": "class",
    "name": "Event",
    "memberof": "lib/classes/event/event.js",
    "static": true,
    "longname": "lib/classes/event/event.js~Event",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/event.js",
    "importStyle": "Event",
    "description": "Base class for all Items that can be placed in a timeline.\n\nAll events have a position (although it may be implicit). Some\nevents also have a duration (Note, Rest, Voice, etc.), while other\nhave no extent (Key, Time, etc.)\n\nDurations need not always be explicit: under certain circumstances,\ndurations are inherited either \"upward\" or \"downward\" in the tree.\n\nFor example, Notes in a NoteChord inherit their duration from the\nNoteChord, unless overridden in the individual Note objects. A\nVoiceContainer, on the other hand, automatically expands to the\nduration of its child Voice objects, unless the VoiceContainer have\nan explicit duration.\n\nTo get the absolute position or duration of an event, the event\nneed to be *resolved*. After resolving, the absolute time values\ncan be read from `event.cache`:\n\nKey                              | Value\n-------------------------------- | -------------------------\n`event.cache.absTime`            | Start time in seconds\n`event.cache.absWn`              | Start time in wn (whole notes)\n`event.cache.endTime`            | End time in seconds (not relevant for events that lack extent)\n`event.cache.endWn`              | End time in wn\n`event.cache.trimmedStartTime`   | Start time in seconds, taking trim into account\n`event.cache.trimmedStartWn`     | Trimmed start time in wn\n`event.cache.trimmedEndTime`     | Trimmed end time in seconds\n`event.cache.trimmedEndWn`       | Trimmed end time in wn\n`event.cache.skip`               | Amount of time in seconds to skip from the beginning, e.g. for audio files\n`event.cache.playbackTimingTime` | Playback timing offset in seconds\n\n ### Other cache values\n\nKey                            | Value\n------------------------------ | ----------------------\n`event.cache.amp`              | Volume. 1.0 is the default\n`event.cache.enabled`          | Item and all of its anchestors is enabled",
    "lineNumber": 50,
    "interface": false,
    "extends": [
      "lib/classes/item.js~Item"
    ]
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/event.js~Event.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#init",
    "access": "public",
    "description": "",
    "lineNumber": 63,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "position",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#position",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "Duration"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "duration",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#duration",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Duration"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "anchor",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#anchor",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "Duration"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "offset",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#offset",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "Duration"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "trimLeft",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#trimLeft",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Duration"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "trimRight",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#trimRight",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "Duration"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "playbackTiming",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#playbackTiming",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "Duration"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "amp",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#amp",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "repeat",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#repeat",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "stepDuration",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#stepDuration",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "layer",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#layer",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "type": {
      "nullable": true,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "syllables",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#syllables",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "Syllable[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#doValidate",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "resolve",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#resolve",
    "access": "public",
    "description": "",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "force",
        "description": "Force resolve, even if `shouldResolve` is `false`"
      }
    ],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "resolveMetas",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#resolveMetas",
    "access": "protected",
    "description": "",
    "lineNumber": 136,
    "params": [
      {
        "name": "force",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "resolveEvents",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#resolveEvents",
    "access": "protected",
    "description": "",
    "lineNumber": 146,
    "params": [
      {
        "name": "force",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "shouldResolve",
    "memberof": "lib/classes/event/event.js~Event",
    "static": false,
    "longname": "lib/classes/event/event.js~Event#shouldResolve",
    "access": "public",
    "description": null,
    "lineNumber": 205,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "resolveTrim",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#resolveTrim",
    "access": "protected",
    "description": "",
    "lineNumber": 249,
    "params": [],
    "return": null
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "resolveRepeats",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#resolveRepeats",
    "access": "protected",
    "description": "",
    "lineNumber": 329,
    "params": [],
    "return": null
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "localResolve",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#localResolve",
    "access": "public",
    "description": null,
    "lineNumber": 347,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 181,
    "kind": "get",
    "name": "defaultStepDuration",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#defaultStepDuration",
    "access": "public",
    "description": "",
    "lineNumber": 363,
    "ignore": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/classes/event/event.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/event.js~Event#toJSON",
    "access": "public",
    "description": "",
    "lineNumber": 370,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "lib/classes/event/note-chord.js",
    "content": "\nimport VerticalContainer from './vertical-container.js';\nimport Note from './note.js';\n// import chalk from 'chalk';\nimport _ from 'underscore';\nvar isObject = _.isObject;\n\n/**\n * A group of {@link Note}s, occurring at the same time.\n *\n * All Notes in a NoteChord usually share properties such as duration,\n * while other such as pitch and velocity may differ.\n *\n *\n */\nexport default class NoteChord extends VerticalContainer {\n  // inspect(level, options) {\n  //   var color = chalk.green;\n  //   return color('<') + color.bold('NoteChord') + color(': [') + this.events.join(', ') + color(']>');\n  // }\n\n  /** @ignore */\n  get defaultEventItemType() {\n    return 'Note';\n  }\n\n  /** @ignore */\n  toString() {\n    return '[NoteChord]';\n  }\n\n  /** @ignore */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.isArray(this, 'events', function(obj) { return obj instanceof Note; });\n    return validator;\n  }\n}\n\nNoteChord.coerce = function(source, parent, copy) {\n  if (source instanceof NoteChord) {\n    return copy ? new NoteChord(source, parent) : source;\n  }\n  if (isObject(source)) {\n    return new NoteChord(source, parent);\n  }\n  throw new Error('Cannot coerce ' + source + ' to a NoteChord!');\n};\n\nNoteChord.itemType = 'NoteChord';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(NoteChord);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/note-chord.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/event/note-chord.js",
    "static": true,
    "longname": "lib/classes/event/note-chord.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/note-chord.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "class",
    "name": "NoteChord",
    "memberof": "lib/classes/event/note-chord.js",
    "static": true,
    "longname": "lib/classes/event/note-chord.js~NoteChord",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/note-chord.js",
    "importStyle": "NoteChord",
    "description": "A group of {@link Note}s, occurring at the same time.\n\nAll Notes in a NoteChord usually share properties such as duration,\nwhile other such as pitch and velocity may differ.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "lib/classes/event/vertical-container.js~VerticalContainer"
    ]
  },
  {
    "__docId__": 186,
    "kind": "get",
    "name": "defaultEventItemType",
    "memberof": "lib/classes/event/note-chord.js~NoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note-chord.js~NoteChord#defaultEventItemType",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/event/note-chord.js~NoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note-chord.js~NoteChord#toString",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/event/note-chord.js~NoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note-chord.js~NoteChord#doValidate",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/note-chord.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/note-chord.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/note-chord.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "file",
    "name": "lib/classes/event/note.js",
    "content": "\nimport Event from './event.js';\nimport Pitch from '../pitch.js';\nimport Duration from '../duration.js';\nimport misc from '../../misc.js';\n// import chalk from 'chalk.js';\nimport _ from 'underscore';\nvar isObject = _.isObject;\nvar isString = _.isString;\n\n/**\n * A Note is essentially an event with a pitch.\n */\nexport default class Note extends Event {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots().concat(['pitch', 'sonority', 'category', 'velocity', 'harmonyRelation']);\n  }\n\n  // inspect() {\n  //   return chalk.magenta('<') + chalk.magenta.bold(this.pitch.toString()) + chalk.magenta('>');\n  // }\n\n  /**\n   * @ignore\n   */\n  init() {\n    super.init();\n\n    /** @type {Pitch} */\n    this.pitch = this.initSubObject(this.pitch, Pitch);\n    /** @type {string} */\n    this.sonority = this.sonority || this.defaultSonority;\n    return this;\n  }\n\n  /**\n   * Destructively transpose the pitch of the note\n   * @param {Interval} interval\n   */\n  transpose(interval) {\n    this.pitch.transpose(interval);\n    return this;\n  }\n\n  /**\n   * @ignore\n   */\n  toString() {\n    return 'Note: ' + this.pitch.toString();\n  }\n\n  /**\n   * @ignore\n   */\n  toXML(rootName) {\n    return misc.buildXML(this.toXMLObject(), {rootName: rootName || 'note'});\n  }\n\n  /**\n   * @ignore\n   */\n  toXMLObject() {\n    return {pitch: this.pitch.toXMLObject(), duration: this.duration.toXMLObject()};\n  }\n\n  /**\n   * @ignore\n   */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.hasTypeOrNull(this, 'pitch', Pitch);\n    validator.isOneOf(this, 'sonority', ['tonal', 'nonPitched']);\n    return validator;\n  }\n\n  /** @ignore */\n  resolveEvents() {\n    super.resolveEvents();\n    if (this.pitch) {\n      this.cache.pitch = {\n        midi: this.pitch.toMIDI(),\n        scientific: this.pitch.scientific()\n      };\n    } else {\n      this.cache.pitch = {};\n    }\n  }\n\n  /**\n  * @ignore\n  */\n  get defaultSonority() {\n    return 'tonal';\n  }\n\n  /**\n  * @ignore\n  */\n  toJSON() {\n    var obj = super.toJSON();\n    if (obj.sonority === this.defaultSonority) delete obj.sonority;\n    return obj;\n  }\n}\n\nNote.coerce = function(source, parent, copy) {\n  if (source instanceof Note) {\n    if (copy) {\n      return new Note(source, parent);\n    } else {\n      return source;\n    }\n  }\n  if (source instanceof Pitch) { return new Note({pitch: source}, parent); }\n  if (isString(source)) {\n    return new Note({pitch: Pitch.fromString(source)}, parent);\n  }\n  if (isObject(source)) { return new Note(source, parent); }\n  throw new Error('Cannot coerce ' + source + ' to a note!');\n};\n\nNote.fromXML = function(xml, o) {\n  var obj = misc.parseXML(xml, {explicitArray: false, mergeAttrs: true, explicitCharkey: false});\n  return Note.fromXMLObject(obj);\n};\n\nNote.fromXMLObject = function(obj) {\n  var pitch = Pitch.fromXMLObject(obj.pitch);\n  var duration = Duration.fromXMLObject(obj.duration);\n  return new Note(pitch, duration);\n};\n\nNote.itemType = 'Note';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Note);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/note.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/event/note.js",
    "static": true,
    "longname": "lib/classes/event/note.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/note.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "variable",
    "name": "isString",
    "memberof": "lib/classes/event/note.js",
    "static": true,
    "longname": "lib/classes/event/note.js~isString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/note.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "class",
    "name": "Note",
    "memberof": "lib/classes/event/note.js",
    "static": true,
    "longname": "lib/classes/event/note.js~Note",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/note.js",
    "importStyle": "Note",
    "description": "A Note is essentially an event with a pitch.",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "lib/classes/event/event.js~Event"
    ]
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/note.js~Note.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note.js~Note#init",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "pitch",
    "memberof": "lib/classes/event/note.js~Note",
    "static": false,
    "longname": "lib/classes/event/note.js~Note#pitch",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Pitch"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "sonority",
    "memberof": "lib/classes/event/note.js~Note",
    "static": false,
    "longname": "lib/classes/event/note.js~Note#sonority",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "transpose",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note.js~Note#transpose",
    "access": "public",
    "description": "Destructively transpose the pitch of the note",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Interval"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note.js~Note#toString",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "toXML",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note.js~Note#toXML",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "ignore": true,
    "params": [
      {
        "name": "rootName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "toXMLObject",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note.js~Note#toXMLObject",
    "access": "public",
    "description": "",
    "lineNumber": 65,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "{\"pitch\": *, \"duration\": *}"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note.js~Note#doValidate",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "resolveEvents",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note.js~Note#resolveEvents",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 204,
    "kind": "get",
    "name": "defaultSonority",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note.js~Note#defaultSonority",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/classes/event/note.js~Note",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/note.js~Note#toJSON",
    "access": "public",
    "description": "",
    "lineNumber": 102,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/note.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/note.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/note.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "fromXML",
    "memberof": "lib/classes/event/note.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/note.js~fromXML",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/note.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "params": [
      {
        "name": "xml",
        "types": [
          "*"
        ]
      },
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "function",
    "name": "fromXMLObject",
    "memberof": "lib/classes/event/note.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/note.js~fromXMLObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/note.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 209,
    "kind": "file",
    "name": "lib/classes/event/rest.js",
    "content": "\nimport Event from './event.js';\nimport Duration from '../duration.js';\nimport misc from '../../misc.js';\n// import chalk from 'chalk';\nimport _ from 'underscore';\nvar isObject = _.isObject;\n\n/**\n * A Note with no sound\n */\nexport default class Rest extends Event {\n  // inspect() {\n  //   return chalk.magenta('<') + chalk.magenta.bold(this.pitch.toString()) + chalk.magenta('>');\n  // }\n\n  init() {\n    super.init();\n    return this;\n  }\n\n  toString() {\n    return 'Rest';\n  }\n\n  toXML(rootName) {\n    return misc.buildXML(this.toXMLObject(), {rootName: rootName || 'rest'});\n  }\n\n  toXMLObject() {\n    return {duration: this.duration.toXMLObject()};\n  }\n\n  doValidate() {\n    var validator = super.doValidate();\n    // validator.hasType(this, 'pitch', Pitch);\n    return validator;\n  }\n}\n\nRest.coerce = function(source, env, copy) {\n  if (source instanceof Rest) {\n    if (copy || (source.env !== env)) return new Rest(source, env);\n    else return source;\n  }\n  if (isObject(source)) { return new Rest(source, env); }\n  throw new Error('Cannot coerce ' + source + ' to a rest!');\n};\n\nRest.fromXML = function(xml, o) {\n  var obj = misc.parseXML(xml, {explicitArray: false, mergeAttrs: true, explicitCharkey: false});\n  return Rest.fromXMLObject(obj);\n};\n\nRest.fromXMLObject = function(obj) {\n  // var pitch = Pitch.fromXMLObject(obj.pitch);\n  var duration = Duration.fromXMLObject(obj.duration);\n  return new Rest(duration);\n};\n\nRest.itemType = 'Rest';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Rest);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/rest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 210,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/event/rest.js",
    "static": true,
    "longname": "lib/classes/event/rest.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/rest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 211,
    "kind": "class",
    "name": "Rest",
    "memberof": "lib/classes/event/rest.js",
    "static": true,
    "longname": "lib/classes/event/rest.js~Rest",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/rest.js",
    "importStyle": "Rest",
    "description": "A Note with no sound",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "lib/classes/event/event.js~Event"
    ]
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/event/rest.js~Rest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/rest.js~Rest#init",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/event/rest.js~Rest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/rest.js~Rest#toString",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "toXML",
    "memberof": "lib/classes/event/rest.js~Rest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/rest.js~Rest#toXML",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "rootName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "toXMLObject",
    "memberof": "lib/classes/event/rest.js~Rest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/rest.js~Rest#toXMLObject",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"duration\": *}"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/event/rest.js~Rest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/rest.js~Rest#doValidate",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/rest.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/rest.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/rest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "env",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 218,
    "kind": "function",
    "name": "fromXML",
    "memberof": "lib/classes/event/rest.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/rest.js~fromXML",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/rest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "xml",
        "types": [
          "*"
        ]
      },
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 219,
    "kind": "function",
    "name": "fromXMLObject",
    "memberof": "lib/classes/event/rest.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/rest.js~fromXMLObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/rest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 220,
    "kind": "file",
    "name": "lib/classes/event/song.js",
    "content": "\nimport _ from 'underscore';\n// import chalk from 'chalk';\nimport VerticalContainer from './vertical-container.js';\nimport envDefaults from '../../defaults.js';\n\n/**\n * A piece of music.\n */\nexport default class Song extends VerticalContainer {\n  /** @ignore */\n  constructor(properties, parent) {\n    if (parent) {\n      console.warn('Song should not have a parent');\n    }\n    properties = _.clone(properties);\n    properties.env = _.extend({}, envDefaults, properties.env);\n    super(properties, parent);\n\n    this.env.set('root', this);\n    this.env.set('song', this);\n  }\n\n  // set parent(parent) {\n  //   console.warn('Song should not have a parent'); // Just warn, this could change in the future\n  //   super(parent); // Hmm, this doesn't work, cannot call super in a setter...\n  // }\n\n  /** @ignore */\n  static getSlots() {\n    return super.getSlots().concat(['items', 'clientSpecific', 'title', 'remusVersion']);\n  }\n\n  childItems(selector) {\n    var selectorFunction = null;\n\n    if (_.isFunction(selector)) {\n      selectorFunction = selector;\n    } else if (_.isString(selector)) {\n      selectorFunction = (item) => {\n        return item.type === selector;\n      };\n    } else {\n      selectorFunction = v => true;\n    }\n\n    return _.filter(this.items, selectorFunction);\n  }\n\n  findItems(selector) {\n    return this.childItems(selector);\n  }\n\n  // inspect(indent, options) {\n  //   var color = chalk.blue;\n  //   var lines = [];\n  //   Object.keys(this).forEach(function(key) {\n  //     lines.push(key + ': ' + util.inspect(this[key], options));\n  //   });\n  //   return color.bold('Song ') + color('{\\n') + lines.join(',\\n') + color(' }');\n  // },\n\n  /** @ignore */\n  init() {\n    super.init();\n    this.items = this.initSubObjects(this.items);\n    return this;\n  }\n\n  /** @ignore */\n  toString() {\n    return '[Song]';\n  }\n\n  /** @ignore */\n  toJSON() {\n    var obj = super.toJSON();\n\n    obj.items = _.map(this.items, (item) => {\n      if (_.isObject(item) && item.toJSON) {\n        return item.toJSON();\n      } else {\n        return item;\n      }\n    });\n\n    return obj;\n  }\n\n  /** @ignore */\n  resolve(force = false) {\n    super.resolve(force);\n  }\n}\n\nSong.coerce = function(source, parent, copy) {\n  if (source instanceof Song) return copy ? new Song(source, parent) : source;\n  throw new Error('Cannot coerce ' + source + ' to a song!');\n};\n\nSong.itemType = 'Song';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Song);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/song.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 221,
    "kind": "class",
    "name": "Song",
    "memberof": "lib/classes/event/song.js",
    "static": true,
    "longname": "lib/classes/event/song.js~Song",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/song.js",
    "importStyle": "Song",
    "description": "A piece of music.",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "lib/classes/event/vertical-container.js~VerticalContainer"
    ]
  },
  {
    "__docId__": 222,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/classes/event/song.js~Song",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/song.js~Song#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/event/song.js~Song",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/song.js~Song.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "childItems",
    "memberof": "lib/classes/event/song.js~Song",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/song.js~Song#childItems",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "selector",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "findItems",
    "memberof": "lib/classes/event/song.js~Song",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/song.js~Song#findItems",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "selector",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/event/song.js~Song",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/song.js~Song#init",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "member",
    "name": "items",
    "memberof": "lib/classes/event/song.js~Song",
    "static": false,
    "longname": "lib/classes/event/song.js~Song#items",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/event/song.js~Song",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/song.js~Song#toString",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/classes/event/song.js~Song",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/song.js~Song#toJSON",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "resolve",
    "memberof": "lib/classes/event/song.js~Song",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/song.js~Song#resolve",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "ignore": true,
    "params": [
      {
        "name": "force",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": null
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/song.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/song.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/song.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "file",
    "name": "lib/classes/event/tuplet.js",
    "content": "\nimport EventContainer from './event-container.js';\n\n/**\n * A tuplet\n *\n * A thin wrapper around the generic {@link EventContainer}.\n *\n */\nexport default class Tuplet extends EventContainer {\n\n  /** @ignore */\n  inspect() {\n    // var color = chalk.yellow;\n    // return color.bold('Tuplet') + color(' [') + this.getEvents().join(', ') + color(']');\n  }\n}\n\nTuplet.coerce = function(source, parent, copy) {\n  if (source instanceof Tuplet) return copy ? new Tuplet(source, parent) : source;\n  throw new Error('Cannot coerce ' + source + ' to a tuplet!');\n};\n\nTuplet.itemType = 'Tuplet';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Tuplet);\n\nTuplet.prototype.inheritExplitDuration = false;\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/tuplet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 233,
    "kind": "class",
    "name": "Tuplet",
    "memberof": "lib/classes/event/tuplet.js",
    "static": true,
    "longname": "lib/classes/event/tuplet.js~Tuplet",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/tuplet.js",
    "importStyle": "Tuplet",
    "description": "A tuplet\n\nA thin wrapper around the generic {@link EventContainer}.",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "lib/classes/event/event-container.js~EventContainer"
    ]
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/event/tuplet.js~Tuplet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/tuplet.js~Tuplet#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/tuplet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/tuplet.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/tuplet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "lib/classes/event/vertical-container.js",
    "content": "\n// import chalk from 'chalk';\nimport EventContainer from './event-container.js';\n\n/**\n * Generic container for stacked events\n *\n * VerticalContainer inherits from {@link EventContainer}, and overrides\n * `defaultEventTimeMode` to `absolute`. The two classes are otherwise identical.\n *\n * See {@link EventContainer} for more information about relative and absolute time modes.\n */\nexport default class VerticalContainer extends EventContainer {\n  /** @ignore */\n  inspect(level, options) {\n    // var color = chalk.yellow;\n    // return color('<') + color.bold('VerticalContainer') + color(': [') + this.events.join(', ') + color(']>');\n    // return color('VerticalContainer\\n') + util.inspect(this.getEvents(), options);\n  }\n\n  /** @ignore */\n  toString() {\n    return '[VerticalContainer]';\n  }\n\n  /** @ignore */\n  get defaultEventTimeMode() {\n    return 'absolute';\n  }\n\n  /** @ignore */\n  get defaultMetaTimeMode() {\n    return 'relative';\n  }\n}\n\nVerticalContainer.coerce = function(source, parent, copy) {\n  if (source instanceof VerticalContainer) return copy ? new VerticalContainer(source, parent) : source;\n  throw new Error('Cannot coerce ' + source + ' to a VerticalContainer!');\n};\n\nVerticalContainer.itemType = 'VerticalContainer';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(VerticalContainer);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/vertical-container.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "class",
    "name": "VerticalContainer",
    "memberof": "lib/classes/event/vertical-container.js",
    "static": true,
    "longname": "lib/classes/event/vertical-container.js~VerticalContainer",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/vertical-container.js",
    "importStyle": "VerticalContainer",
    "description": "Generic container for stacked events\n\nVerticalContainer inherits from {@link EventContainer}, and overrides\n`defaultEventTimeMode` to `absolute`. The two classes are otherwise identical.\n\nSee {@link EventContainer} for more information about relative and absolute time modes.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "lib/classes/event/event-container.js~EventContainer"
    ]
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/event/vertical-container.js~VerticalContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/vertical-container.js~VerticalContainer#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "ignore": true,
    "params": [
      {
        "name": "level",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/event/vertical-container.js~VerticalContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/vertical-container.js~VerticalContainer#toString",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "get",
    "name": "defaultEventTimeMode",
    "memberof": "lib/classes/event/vertical-container.js~VerticalContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/vertical-container.js~VerticalContainer#defaultEventTimeMode",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "get",
    "name": "defaultMetaTimeMode",
    "memberof": "lib/classes/event/vertical-container.js~VerticalContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/vertical-container.js~VerticalContainer#defaultMetaTimeMode",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/vertical-container.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/vertical-container.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/vertical-container.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "lib/classes/event/voice-container.js",
    "content": "\nimport VerticalContainer from './vertical-container.js';\n// import chalk from 'chalk';\n\n/**\n * Grouping of {@link Voice}s, {@link Audio} events and {@link ChordSequence}s that belong together,\n * e.g. because they represent the same musical fragment.\n */\nexport default class VoiceContainer extends VerticalContainer {\n  static getSlots() {\n    return super.getSlots();\n  }\n\n  inspect(level, options) {\n    // var color = chalk.yellow;\n    // return color('<') + color.bold('VerticalContainer') + color(': [') + this.events.join(', ') + color(']>');\n    // return color('VoiceContainer\\n') + util.inspect(this.events, options);\n  }\n\n  get defaultEventItemType() {\n    return 'Voice';\n  }\n\n  init() {\n    super.init();\n    return this;\n  }\n\n  toString() {\n    return '[VoiceContainer]';\n  }\n}\n\nVoiceContainer.coerce = function(source, parent, copy) {\n  if (source instanceof VoiceContainer) return copy ? new VoiceContainer(source, parent) : source;\n  throw new Error('Cannot coerce ' + source + ' to a VoiceContainer!');\n};\n\nVoiceContainer.itemType = 'VoiceContainer';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(VoiceContainer);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/voice-container.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "class",
    "name": "VoiceContainer",
    "memberof": "lib/classes/event/voice-container.js",
    "static": true,
    "longname": "lib/classes/event/voice-container.js~VoiceContainer",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/voice-container.js",
    "importStyle": "VoiceContainer",
    "description": "Grouping of {@link Voice}s, {@link Audio} events and {@link ChordSequence}s that belong together,\ne.g. because they represent the same musical fragment.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "lib/classes/event/vertical-container.js~VerticalContainer"
    ]
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/event/voice-container.js~VoiceContainer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/voice-container.js~VoiceContainer.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/event/voice-container.js~VoiceContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice-container.js~VoiceContainer#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "level",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 247,
    "kind": "get",
    "name": "defaultEventItemType",
    "memberof": "lib/classes/event/voice-container.js~VoiceContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice-container.js~VoiceContainer#defaultEventItemType",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/event/voice-container.js~VoiceContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice-container.js~VoiceContainer#init",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/event/voice-container.js~VoiceContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice-container.js~VoiceContainer#toString",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/voice-container.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/voice-container.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/voice-container.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 251,
    "kind": "file",
    "name": "lib/classes/event/voice.js",
    "content": "\n// import chalk from 'chalk';\nimport EventContainer from './event-container.js';\nimport Duration from '../duration.js';\nimport Fraction from 'fraction.js';\nimport Tuplet from './tuplet.js';\nimport _ from 'underscore';\nimport misc from '../../misc.js';\nimport Rest from './rest.js';\n\nimport NoteSplit from '../../../../note-split/note-split.js';\n\n/**\n * A horizontal grouping of {@link Note}s\n */\nexport default class Voice extends EventContainer {\n  static getSlots() {\n    return super.getSlots().concat(['sound', 'title', 'channel', 'kind']);\n  }\n\n  inspect() {\n    // var color = chalk.blue;\n    // return color('<Voice>');\n  }\n\n   /**\n   * @ignore\n   */\n  toString() {\n    return `[Voice ${this.id}]`;\n  }\n\n  init() {\n    super.init();\n    this.env.set('voice', this);\n    return this;\n  }\n\n  convertOverlapsToSubvoices() {\n    this.assignOverlapsToLayers();\n    let voices = this.splitByLayers();\n    let firstVoice = voices.shift();\n    this.events = firstVoice.events;\n    _.each(voices, (voice) => {\n      if (voice.position) voice.position = Duration.coerce({value: 0, unit: voice.position.unit});\n    });\n    this.events = voices.concat(this.events);\n    this.shouldResolve = true;\n  }\n\n  /**\n   *   Destructively split notes and rests so that the voice may be scored\n   *   (no events crosses barlines etc)\n   */\n  splitEventsForScoring() {\n    let newEventList = [];\n\n    // TODO: support for changing time\n    let time = this.cache.time;\n    if (!time) {\n      console.warn('cache.time is not set in splitEventsForScoring, is song resolved?');\n    }\n    let measureLength = time ? time.getMeasureWn() : new Fraction(1);\n    let beatLength = new Fraction(1, 4); // TODO: don't hardcode!\n    let position = time ? this.cache.absWn.sub(time.cache.absWn) : this.cache.absWn; // position since start of this time signature\n    position = position || new Fraction(0);\n    for (let e of this.events) {\n      if (e.duration && e.duration.unit !== 'wn') {\n        console.log('splitEventsForScoring does not support this duration unit: ', e.duration);\n        throw new Error('splitEventsForScoring can only work with wn durations!');\n      }\n      let d = e.duration ? e.duration.value : e.cache.endWn.sub(e.cache.absWn);\n      if (!d) {\n        console.log('Undefined duration: ', e);\n        throw new Error('Undefined duration');\n      }\n      if (e instanceof Tuplet) {\n        newEventList.push(e);\n        continue;\n      }\n      let durations = NoteSplit.divide([d], measureLength, beatLength, position, (e instanceof Rest), 2)[0];\n      if (durations.length === 1) {\n        newEventList.push(e);\n      } else {\n        e.duration = new Duration({value: durations[0], unit: 'wn'});\n        newEventList.push(e);\n        for (let i = 1; i < durations.length; i++) {\n          let e2 = misc.clone(e);\n          e2.duration = new Duration({value: durations[i], unit: 'wn'});\n          e2.tiedTo = true;\n          newEventList[newEventList.length - 1].tiedFrom = true;\n          newEventList.push(e2);\n        }\n      }\n      position = position.add(d);\n    }\n    this.events = newEventList;\n    this.shouldResolve = true;\n  }\n\n  /**\n   * @ignore\n   */\n  get defaultStepDuration() {\n    return false;\n  }\n\n  scorable() {\n    if (this.eventTimeMode === 'relative') {\n      let events = this.events;\n      for (let i = 0; i < events.length; i++) {\n        // if (!event.cache) return false;\n        // if (event.cache.absWn !== event.cache.endWn) return false;\n        let event = events[i];\n        if (event.position && !event.position.isZero()) return false;\n        if (event.duration.isZero() || event.duration.unit !== 'wn') return false;\n      }\n    } else {\n      // Cannot currently score absolute voices\n      return false;\n    }\n    return true;\n  }\n}\n\nVoice.coerce = function(source, parent, copy) {\n  if (source instanceof Voice) return copy ? new Voice(source, parent) : source;\n  throw new Error('Cannot coerce ' + source + ' to a voice!');\n};\n\nVoice.itemType = 'Voice';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Voice);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/event/voice.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 252,
    "kind": "class",
    "name": "Voice",
    "memberof": "lib/classes/event/voice.js",
    "static": true,
    "longname": "lib/classes/event/voice.js~Voice",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/event/voice.js",
    "importStyle": "Voice",
    "description": "A horizontal grouping of {@link Note}s",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "lib/classes/event/event-container.js~EventContainer"
    ]
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/event/voice.js~Voice",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/voice.js~Voice.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/event/voice.js~Voice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice.js~Voice#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/event/voice.js~Voice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice.js~Voice#toString",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/event/voice.js~Voice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice.js~Voice#init",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "convertOverlapsToSubvoices",
    "memberof": "lib/classes/event/voice.js~Voice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice.js~Voice#convertOverlapsToSubvoices",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "events",
    "memberof": "lib/classes/event/voice.js~Voice",
    "static": false,
    "longname": "lib/classes/event/voice.js~Voice#events",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "shouldResolve",
    "memberof": "lib/classes/event/voice.js~Voice",
    "static": false,
    "longname": "lib/classes/event/voice.js~Voice#shouldResolve",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "splitEventsForScoring",
    "memberof": "lib/classes/event/voice.js~Voice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice.js~Voice#splitEventsForScoring",
    "access": "public",
    "description": "  Destructively split notes and rests so that the voice may be scored\n  (no events crosses barlines etc)",
    "lineNumber": 55,
    "params": [],
    "return": null
  },
  {
    "__docId__": 264,
    "kind": "get",
    "name": "defaultStepDuration",
    "memberof": "lib/classes/event/voice.js~Voice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice.js~Voice#defaultStepDuration",
    "access": "public",
    "description": "",
    "lineNumber": 104,
    "ignore": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "scorable",
    "memberof": "lib/classes/event/voice.js~Voice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/event/voice.js~Voice#scorable",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/event/voice.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/event/voice.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/event/voice.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 267,
    "kind": "file",
    "name": "lib/classes/harmony.js",
    "content": "\nimport Item from './item.js';\nimport knowledge from '../knowledge.js';\nimport Pitch from './pitch.js';\nimport Interval from './interval.js';\nimport misc from '../misc.js';\nimport xml2js from 'xml2js';\n// import var chalk from 'chalk';\nimport _ from 'underscore';\n\nvar get = _.get; // require('lodash.get');\n// var difference = _.difference;\n\nfunction simpleInterval(i) {\n  return i.toString();\n}\n\nexport default class Harmony extends Item {\n  /** @ignore */\n  static getSlots() {\n    return super.getSlots().concat(['root', 'intervals', 'bass', 'kindText']);\n  }\n\n  /** @ignore */\n  inspect() {\n    // return chalk.dim('<') + chalk.yellow.bold(this.toString()) + ' ' + chalk.yellow(this.intervals) + chalk.dim('>');\n  }\n\n  /** @ignore */\n  init() {\n    super.init();\n    /** @type {Pitch} */\n    this.root = this.initSubObject(this.root, Pitch);\n    /** @type {Pitch?} */\n    this.bass = this.initSubObject(this.bass, Pitch) || null;\n    /** @type {Interval[]} */\n    this.intervals = this.initSubObjects(this.intervals, Interval);\n    // TODO: bass\n    return this;\n  }\n\n  // getRootPitch() {\n  //   if (this.rootPitch) {\n  //     return this.rootPitch;\n  //   } else if (this.root instanceof Pitch) {\n  //     return this.root;\n  //   } else if (this.root) {\n  //     this.rootPitch = this.initSubObject(this.root, 'Pitch');\n  //     return this.rootPitch;\n  //   }\n\n  //   return null;\n  // }\n\n  // getBassPitch() {\n  //   if (this.bassPitch) {\n  //     return this.bassPitch;\n  //   } else if (this.bass instanceof Pitch) {\n  //     return this.bass;\n  //   } else if (this.bass) {\n  //     this.bassPitch = this.initSubObject(this.bass, 'Pitch');\n  //     return this.bassPitch;\n  //   }\n\n  //   return null;\n  // }\n\n  pitches() {\n    var root = this.root; // getRootPitch();\n    var pitches = [root];\n    this.intervals.forEach(function(interval) {\n      pitches.push(root.interval(interval));\n    });\n    return pitches;\n  }\n\n  simple() {\n    return this.pitches().map(function(n) { return n.toString(true); });\n  }\n\n  isMajor() {\n    return this.intervals.map(simpleInterval).indexOf('M3') >= 0;\n  }\n\n  isMinor() {\n    return this.intervals.map(simpleInterval).indexOf('m3') >= 0;\n  }\n\n  isDominant() {\n    var intervals = this.intervals.map(simpleInterval);\n    return intervals.indexOf('M3') >= 0 && intervals.indexOf('m7') >= 0;\n  }\n\n  dominant(additional) {\n    return this.interval('P5');\n  }\n\n  subdominant(additional) {\n    return this.interval('P4');\n  }\n\n  parallel() {\n    var quality = this.quality();\n\n    if (this.harmonyType() !== 'triad' || !(quality === 'major' || quality === 'minor')) {\n      throw new Error('Only major/minor triads have parallel harmonies');\n    }\n\n    if (this.isMajor()) {\n      return new Harmony(this.root.interval('m3', 'down'), 'minor');\n    } else {\n      return new Harmony(this.root.interval('m3', 'up'), 'major');\n    }\n  }\n\n  quality() {\n    var third;\n    var fifth;\n    var seventh;\n    var intervals = this.intervals;\n\n    for (var i = 0, length = intervals.length; i < length; i++) {\n      if (intervals[i].number() === 3) {\n        third = intervals[i];\n      } else if (intervals[i].number() === 5) {\n        fifth = intervals[i];\n      } else if (intervals[i].number() === 7) {\n        seventh = intervals[i];\n      }\n    }\n\n    if (!third) {\n      return;\n    }\n\n    third = (third.direction() === 'down') ? third.invert() : third;\n    third = third.simple().toString();\n\n    if (fifth) {\n      fifth = (fifth.direction === 'down') ? fifth.invert() : fifth;\n      fifth = fifth.simple().toString();\n    }\n\n    if (seventh) {\n      seventh = (seventh.direction === 'down') ? seventh.invert() : seventh;\n      seventh = seventh.simple().toString();\n    }\n\n    if (third === 'M3') {\n      if (fifth === 'A5') {\n        return 'augmented';\n      } else if (fifth === 'P5') {\n        return (seventh === 'm7') ? 'dominant' : 'major';\n      }\n\n      return 'major';\n    } else if (third === 'm3') {\n      if (fifth === 'P5') {\n        return 'minor';\n      } else if (fifth === 'd5') {\n        return (seventh === 'm7') ? 'half-diminished' : 'diminished';\n      }\n\n      return 'minor';\n    }\n  }\n\n  kind() {\n    var degrees = {};\n    [2, 3, 4, 5, 6, 7].map(function(x) {\n      var interval = this.getDegree(x);\n      degrees[x] = interval ? interval.quality() : null;\n    }, this);\n\n    // SPECIAL\n    if (!degrees[3] && degrees[7] === 'm' && degrees[2] === 'M' && degrees[4] === 'P') {\n      return 'dominant-11th';\n    }\n    if (degrees[7] === 'm' && degrees[3] === 'M' && degrees[6] === 'M') {\n      return 'dominant-13th';\n    }\n    if (degrees[5] === 'P' && this.intervals.length === 1) {\n      return 'power';\n    }\n\n    // MAJOR CHORDS\n    if (degrees[3] === 'M') {\n      // Augmented\n      if (degrees[5] === 'A') {\n        if (degrees[7] === 'm') { return 'augmented-seventh'; }\n        return 'augmented';\n      }\n      // Dominants\n      if (degrees[7] === 'm') {\n        if (degrees[2] === 'M') { return 'dominant-ninth'; }\n        if (degrees[4] === 'P') { return 'dominant-eleventh'; }\n        return 'dominant';\n      }\n      // Major sevenths\n      if (degrees[7] === 'M') {\n        if (degrees[6] === 'M') { return 'major-13th'; }\n        if (degrees[2] === 'M') { return 'major-ninth'; }\n        return 'major-seventh';\n      }\n      // Other major harmonies\n      if (degrees[5] === 'A') { return 'augmented'; }\n      if (degrees[6] === 'M') { return 'major-sixth'; }\n      return 'major';\n    }\n\n    // MINOR CHORDS\n    if (degrees[3] === 'm') {\n      // Diminished & half-diminished\n      if (degrees[5] === 'd') {\n        if (degrees[7] === 'd') { return 'diminished-seventh'; }\n        if (!degrees[7] && degrees[6] === 'M') {\n           // arguably wrong but very common spelling of diminished chords\n          return 'diminished-seventh';\n        }\n        if (degrees[7] === 'm') { return 'half-diminished'; }\n        return 'diminished';\n      }\n      // Sevenths\n      if (degrees[7] === 'm') {\n        if (degrees[2] === 'M') { return 'minor-ninth'; }\n        return 'minor-seventh';\n      }\n      // Other minor harmonies\n      if (degrees[6] === 'M') { return 'minor-sixth'; }\n      if (degrees[7] === 'M') { return 'major-minor'; }\n      return 'minor';\n    }\n\n    // SUSPENDED\n    if (degrees[5] === 'P' || !degrees[5]) {\n      if (degrees[2] === 'M') { return 'suspended-second'; }\n      if (degrees[4] === 'P') { return 'suspended-fourth'; }\n    }\n\n    if ((degrees[7] === 'm') && !degrees[3]) {\n      return 'dominant';\n    }\n\n    return 'other';\n  }\n\n  harmonyType() { // In need of better name\n    var intervals = this.intervals();\n    var length = intervals.length;\n    var interval;\n    var has;\n    var invert;\n    var i;\n    var name;\n\n    if (length === 2) {\n      return 'dyad';\n    } else if (length === 3) {\n      has = {first: false, third: false, fifth: false};\n      for (i = 0; i < length; i++) {\n        interval = intervals[i];\n        invert = interval.invert();\n        if (interval.base() in has) {\n          has[interval.base()] = true;\n        } else if (invert.base() in has) {\n          has[invert.base()] = true;\n        }\n      }\n\n      name = (has.first && has.third && has.fifth) ? 'triad' : 'trichord';\n    } else if (length === 4) {\n      has = {first: false, third: false, fifth: false, seventh: false};\n      for (i = 0; i < length; i++) {\n        interval = intervals[i];\n        invert = interval.invert();\n        if (interval.base() in has) {\n          has[interval.base()] = true;\n        } else if (invert.base() in has) {\n          has[invert.base()] = true;\n        }\n      }\n\n      if (has.first && has.third && has.fifth && has.seventh) {\n        name = 'tetrad';\n      }\n    }\n\n    return name || 'unknown';\n  }\n\n  getDegree(interval) {\n    var intervals = this.intervals;\n    var length = intervals.length;\n\n    interval = (interval - 1) % 7;\n\n    for (var i = 0; i < length; i++) {\n      if ((intervals[i].number() - 1) % 7 === interval) {\n        return intervals[i];\n      }\n    }\n    return null;\n  }\n\n  // get(interval) {\n  //   var intervals = this.intervals, i, length;\n  //   if (typeof interval === 'number') {\n  //     for (i = 0, length = intervals.length; i < length; i++) {\n  //       if (intervals[i].number() === interval) {\n  //         return this.root.interval(intervals[i]);\n  //       }\n  //     }\n  //     return null;\n  //   } else if (typeof interval === 'string' && interval in knowledge.stepNumber) {\n  //     interval = knowledge.stepNumber[interval];\n  //     for (i = 0, length = intervals.length; i < length; i++) {\n  //       if (intervals[i].number() === interval) {\n  //         return this.root.interval(intervals[i]);\n  //       }\n  //     }\n  //\n  //     return null;\n  //   } else {\n  //     throw new Error('Invalid interval name');\n  //   }\n  // },\n\n  interval(interval, parent = null) {\n    let root = this.root ? root.interval(interval) : this.root;\n    let bass = this.bass ? this.bass.interval(interval) : this.bass;\n    return new Harmony({root: root, bass: bass, intervals: misc.clone(this.intervals), kindText: this.kindText}, parent);\n  }\n\n  transpose(interval) {\n    this.root.transpose(interval);\n    if (this.bass) this.bass.transpose(interval);\n    return this;\n  }\n\n  toXML() {\n    var root = { step: this.root.name().toUpperCase(), alter: this.root.accidentalValue(), text: this.root.text };\n    var bass;\n\n    if (this.getBassPitch()) {\n      bass = { step: this.getBassPitch().name().toUpperCase(), alter: this.getBassPitch().accidentalValue(), text: this.getBassPitch().text };\n    }\n\n    var kind = this.kind();\n    var kindText = this.kindText;\n    var xml = '';\n    xml += '<harmony>\\n';\n    xml += '  <root>\\n';\n\n    if (root.text && root.text !== root.step) {\n      xml += '    <root-step text=\"' + root.text + '\">' + root.step + '</root-step>\\n';\n    } else {\n      xml += '    <root-step>' + root.step + '</root-step>\\n';\n    }\n\n    if (root.alter) {\n      xml += '    <root-alter>' + root.alter + '</root-alter>\\n';\n    }\n\n    xml += '  </root>\\n';\n\n    if (bass) {\n      xml += '  <bass>\\n';\n      if (bass.text && bass.text !== bass.step) {\n        xml += '    <bass-step text=\"' + bass.text + '\">' + bass.step + '</bass-step>\\n';\n      } else {\n        xml += '    <bass-step>' + bass.step + '</bass-step>\\n';\n      }\n      if (bass.alter) {\n        xml += '    <bass-alter>' + bass.alter + '</bass-alter>\\n';\n      }\n      xml += '  </bass>\\n';\n    }\n\n    if (kindText) {\n      xml += '<kind text=\"' + kindText + '\">' + kind + '</kind>\\n';\n    } else {\n      xml += '<kind>' + kind + '</kind>\\n';\n    }\n    // this.degrees.forEach(function(degree) {\n    //   xml += '<degree>\\n';\n    //   xml += (typeof degree.text === 'string') ? ('  <degree-type text=\"' + degree.text + '\">') : '<degree-type>';\n    //   xml += degree.type;\n    //   xml += '</degree-type>\\n';\n    //   xml += '<degree-value>' + degree.step + '</degree-value>\\n';\n    //   switch (degree.type) {\n    //   case 'add':\n    //     // TODO\n    //     break;\n    //   case 'alter':\n    //     xml += '<degree-alter>' + degree.semitones + '</degree-alter>\\n';\n    //     break;\n    //   case 'subtract':\n    //     // TODO\n    //     break;\n    //   }\n    //   xml += '</degree>\\n';\n    // });\n    xml += '</harmony>\\n';\n    return xml;\n  }\n\n  toString() {\n    let root = this.root.name().toUpperCase() + this.root.accidental();\n    let kind = this.kindText || knowledge.chordShort[this.kind()];\n    let bass = this.bass ? '/' + this.bass.name().toUpperCase() + this.bass.accidental() : '';\n\n    // TODO: additions, alterations, subtractions\n    return root + kind + bass;\n  }\n\n  /**\n   * @ignore\n   */\n  toJSON() {\n    var obj = super.toJSON();\n    if (obj.intervals) {\n      obj.intervals = obj.intervals.map(i => {\n        return i.toString();\n      });\n    }\n    return obj;\n  }\n\n  defaultVoicings() {\n    let kind = this.kind();\n    let voicings = null;\n\n    var degrees = {};\n    [2, 3, 4, 5, 6, 7].map(function(x) {\n      var interval = this.getDegree(x);\n      degrees[x] = interval ? interval.quality() : null;\n    }, this);\n\n    //\n    // First, test for a few special or common chords\n    //\n\n    // 7#9\n    if ((kind === 'dominant' || kind === 'dominant-ninth') && degrees[2] === 'A') {\n      voicings = [['P1', 'M3', 'm7', 'a9'],\n                  ['P1', 'M3', 'm7', 'P1', 'a9'],\n                  ['M3', 'm7', 'P1', 'a9'],\n                  ['M3', 'm7', 'a9']];\n    } else if (kind === 'major' && degrees[2] === 'M') { // major add9\n      voicings = [['P1', 'M2', 'M3', 'P5'],\n                  ['P5', 'P1', 'M2', 'M3'],\n                  ['M2', 'M3', 'P5', 'P1']];\n    } else if (kind === 'minor' && degrees[2] === 'M') { // minor add9\n      voicings = [['P1', 'M2', 'm3', 'P5'],\n                  ['P5', 'P1', 'M2', 'm3'],\n                  ['M2', 'm3', 'P5', 'P1']];\n    } else {\n      //\n      // All other chords get their default voicings\n      //\n      switch (kind) {\n        case 'major': voicings = misc.allRotations(['P1', 'M3', 'P5']); break;\n        case 'minor': voicings = misc.allRotations(['P1', 'm3', 'P5']); break;\n        case 'augmented': voicings = misc.allRotations(['P1', 'M3', 'A5']); break;\n        case 'diminished': voicings = misc.allRotations(['P1', 'm3', 'd5']); break;\n        case 'dominant': voicings = misc.allRotations(['P1', 'M3', 'P5', 'm7']); break;\n        case 'major-seventh': voicings = misc.allRotations(['P1', 'M3', 'P5', 'M7']); break;\n        case 'minor-seventh': voicings = misc.allRotations(['P1', 'm3', 'P5', 'm7']); break;\n        case 'diminished-seventh': voicings = misc.allRotations(['P1', 'm3', 'd5', 'd7']); break;\n        case 'augmented-seventh': voicings = misc.allRotations(['P1', 'M3', 'A5', 'm7']); break;\n        case 'half-diminished': voicings = misc.allRotations(['P1', 'm3', 'd5', 'm7']); break;\n        case 'major-minor': voicings = misc.allRotations(['P1', 'm3', 'P5', 'M7']); break;\n        case 'dominant-suspended-fourth': voicings = misc.allRotations(['P1', 'P4', 'P5', 'm7']); break;\n        case 'major-sixth': voicings = misc.allRotations(['P1', 'M3', 'P5', 'M6']); break;\n        case 'minor-sixth': voicings = misc.allRotations(['P1', 'm3', 'P5', 'M6']); break;\n        case 'dominant-ninth': voicings = [['P1', 'M3', 'm7', 'M2'],\n                                           ['m7', 'M2', 'M3'],\n                                           ['M2', 'M3', 'm7'],\n                                           ['M2', 'M3', 'P5', 'm7'],\n                                           ['M3', 'm7', 'M2']]; break;\n        case 'major-ninth': voicings = [['P1', 'M3', 'M7', 'M2'],\n                                        ['M7', 'M2', 'M3'],\n                                        ['M2', 'M3', 'M7'],\n                                        ['M2', 'M3', 'P5', 'M7'],\n                                        ['M3', 'M7', 'M2']]; break;\n        case 'minor-ninth': voicings = [['P1', 'm3', 'm7', 'M2'],\n                                        ['m7', 'M2', 'm3'],\n                                        ['m7', 'M2', 'm3', 'P5'],\n                                        ['M2', 'm3', 'm7'],\n                                        ['M2', 'm3', 'P5', 'm7'],\n                                        ['m3', 'm7', 'M2']]; break;\n        case 'dominant-11th': voicings = misc.allRotations(['m7', 'M2', 'P4']); break;\n        case 'minor-11th': voicings = misc.allRotations(['m7', 'm3', 'P4']); break;\n        case 'dominant-13th': voicings = [['m7', 'M2', 'M3', 'M6']]; break; // 9th is removed below if not present\n        case 'minor-13th': voicings = misc.allRotations(['m7', 'M2', 'm3', 'M6']); break; // same here\n        case 'suspended-second': voicings = [['P1', 'M2', 'P5'], ['P5', 'P1', 'M2']]; break;\n        case 'suspended-fourth': voicings = misc.allRotations(['P1', 'P4', 'P5']); break;\n        case 'power': voicings = [['P1', 'P5'], ['P5', 'P1']]; break;\n      }\n    }\n\n    if (!voicings) return [];\n\n    // Filter out notes that aren't present as degrees\n    // and alter notes according to the degrees\n    // KNOWN ISSUE: cannot handle more than one existance of each degree, e.g. M3 m10\n    for (let v = 0; v < voicings.length; v++) {\n      voicings[v] = voicings[v].filter(interval => {\n        return (interval === 'P1' || degrees[interval[1]]);\n      }).map(interval => {\n        if (interval === 'P1') return interval;\n        return degrees[interval[1]] + interval[1];\n      });\n    }\n\n    // Add missing degrees\n    for (let d = 2; d <= 7; d++) {\n      if (!degrees[d]) continue;\n      for (let v = 0; v < voicings.length; v++) {\n        if (voicings[v].map(i => { return +i[1]; }).indexOf(d) >= 0) continue;\n        // The degree d is missing from this voicing. Find out where to insert it.\n        // console.log('Missing interval: ', d, degrees[d]);\n        let pos = 0;\n        for (let p = 0; p < voicings[v].length - 1; p++) {\n          let x = voicings[v][p][1];\n          let y = voicings[v][p + 1][1];\n          if (y < x) y += 7;\n          if (x < d && d < y) {\n            pos = p + 1;\n            break;\n          }\n        }\n        // The new degree is to be inserted at position pos (which defaults to 0)\n        let interval = degrees[d] + d;\n        // console.log('Inserting ' + interval + ' at position ' + pos + ' in array ' + voicings[v]);\n        voicings[v].splice(pos, 0, interval);\n      }\n    }\n\n    return voicings;\n  }\n}\n\nHarmony.coerce = function(source, parent, copy) {\n  if (source instanceof Harmony) {\n    if (copy) {\n      return new Harmony(source, parent);\n    } else {\n      return source;\n    }\n  }\n  if (typeof source === 'string') { return Harmony.fromString(source, parent); }\n  if (_.isObject(source) && source.isChord) { return new Harmony(source.harmony, parent); }\n  throw new Error('Cannot coerce ' + source + ' to a harmony!');\n};\n\n// Helper\nfunction find(elem, array) {\n  return array.indexOf(elem) >= 0;\n}\n\n// Helper\nfunction addInterval(step, acc) {\n  var defaultAddAlter = 'xPMMPPMmPMMPPM';\n  var interval = Interval.fromString(defaultAddAlter[step] + step); // concatenation\n  interval.coord[1] += acc;\n  return interval;\n}\n\nHarmony.fromString = function(str, parent) {\n  // N.C.\n  if (str.match(/^\\\\s*N\\\\.?\\\\s*C\\\\.?\\\\s*$/i) || str.match(/^\\\\s*no\\\\s*harmony/i)) {\n    return new Harmony({}, parent);\n  }\n\n  // Normal harmonies\n  var matches = str.match(/^\\(?([A-Ga-gHh](?:[x𝄪𝄫]|[#♯]+|[b♭]+)?)\\s*(\\(?(.*?)((?:(?:add|no|omit)[#b𝄪♯♭𝄫]*\\d+|[#b𝄪♯♭𝄫]+\\d+)*)\\)?)(?:\\/([A-Ga-gHh](?:[x𝄪𝄫]|[#♯]+|[b♭]+)?))?$/i);\n  if (matches) {\n    var root = Pitch.fromString(matches[1], parent);\n    root.text = matches[1];\n    var rest = matches[2].trim();\n    const delta = String.fromCharCode(8710);  // ∆\n    var main = matches[3].trim().replace(/\\(/g, '').replace(/\\^/g, delta);\n    var extra = matches[4].trim().replace(/\\^/g, delta);\n    main = main.replace(/\\^/g, delta);\n    rest = rest.replace(/\\^/g, delta);\n    main = main.replace(String.fromCharCode(916), delta);  // there are two identical-looking deltas,\n    rest = rest.replace(String.fromCharCode(916), delta);  // coerce to one of them\n    var bass = matches[5] ? Pitch.fromString(matches[5], parent) : null;\n    if (bass) bass.text = matches[5];\n\n    var kind;\n    var override = {};\n    // console.log(root, 'rest: ' + rest, 'main: ' + main, 'extra: ' + extra, bass);\n\n    // Triads (excluding diminished, which is tested for below)\n    if (!main) kind = 'major';\n    else if (find(main, ['-', 'm', 'mi', 'min'])) kind = 'minor';\n    else if (find(main, ['aug', '+', '+5', '#5'])) kind = 'augmented';\n    // Sevenths\n    else if (main === '7') kind = 'dominant';\n    else if (find(main, ['ø', 'ø7', 'Ø', 'Ø7', '0', '07']) ||\n      find(rest.replace(/\\\\\\(/g, ''), ['-7b5', 'm7b5', 'm7-5', 'mi7b5'])) kind = 'half-diminished';\n    else if (find(main, ['aug7', '7#5', '+7', '7+', '7+5'])) kind = 'augmented-seventh';\n    else if (find(main, ['maj', 'maj7', delta, `${delta}7`, 'M', 'M7'])) kind = 'major-seventh';\n    else if (find(main, ['-7', 'm7', 'mi7'])) kind = 'minor-seventh';\n    else if (find(main, ['dim', 'dim7', 'o', '°', 'o7', '°7'])) kind = 'diminished-seventh';\n    else if (find(main, ['7sus', '7sus4', 'sus7'])) kind = 'dominant-suspended-fourth'; // XXX\n    else if (rest.match(/^(\\-|m|mi|min)[\\/\\(]?(M9|\\u22069|maj9)/)) {  // \\u2206 = 8710 = delta\n      kind = 'major-minor';\n      override[9] = 'M';\n    } else if (rest.match(/^(\\-|m|mi|min)[\\/\\(]?(\\\\+7|maj(?!9)|M7?|\\u2206|\\u22067|maj7)/)) {\n      kind = 'major-minor';\n    } else if (rest.match(/(\\+5?|aug)?[\\/\\(]?(\\\\+7|M7|\\u2206|\\u22067|maj7)/)) {\n      kind = 'major-seventh';\n      override[5] = 'A';\n    } else if (find(main, ['6', 'M6', 'maj6'])) {\n      // Sixths\n      kind = 'major-sixth';\n    } else if (find(main, ['-6', 'm6', 'mi6'])) kind = 'minor-sixth';\n    else if (find(main, ['6/9', '69', '9/6'])) {\n      kind = 'major-sixth';\n      override[9] = 'M';\n    } else if (main === '9') {\n      // Ninths\n      kind = 'dominant-ninth';\n    } else if (find(main, ['M9', 'maj9', '\\u22069'])) kind = 'major-ninth';\n    else if (find(main, ['-9', 'm9', 'mi9'])) kind = 'minor-ninth';\n    else if (main === 'm2') { // synonym for madd9\n      kind = 'minor';\n      override[9] = 'M';\n    } else if (find(main, ['11', '9sus', '9sus4'])) {\n      // 11ths\n      kind = 'dominant-11th';\n    } else if (find(main, ['M11', 'maj11', 'Δ11'])) kind = 'major-11th';\n    else if (find(main, ['-11', 'm11', 'mi11'])) kind = 'minor-11th';\n    // 13ths\n    else if (main === '13') kind = 'dominant-13th';\n    else if (find(main, ['M13', 'maj13', 'Δ13'])) kind = 'major-13th';\n    else if (find(main, ['-13', 'm13', 'mi13'])) kind = 'minor-13th';\n    // Suspended\n    else if (main === 'sus2') kind = 'suspended-second';\n    else if (find(main, ['sus', 'sus4'])) kind = 'suspended-fourth';\n    // Other\n    else if (find(main, ['5', 'no3'])) kind = 'power';\n\n    var intervals = {};\n    var defaultIntervals = knowledge.chordDegrees[kind];\n    var x;\n    for (x in defaultIntervals) intervals[x] = defaultIntervals[x];\n    for (x in override) intervals[x] = override[x];\n\n    extra.split(/(\\D+\\d+)/).forEach(function(x) {\n      if (x) {\n        var matches = x.match(/^[ \\(\\)]*(add|no|omit)?([#b]?)(\\d+)/);\n        if (matches) {\n          var acc = knowledge.accidentals.indexOf(matches[2]) - 2;\n          if (acc < -2) acc = 0;\n          var step = matches[3];\n          if (step >= 2 && step <= 13) {\n            // console.log(matches[1], acc, step);\n            if (matches[1] === 'add') {\n              if (acc === 0) intervals[step] = 'xxMMPPMmPMMPPM'[step];\n              else if (acc === 1) intervals[step] = 'xxAAAAAAAAAAAA'[step];\n              else if (acc === -1) intervals[step] = 'xxmmddmmdmmddm'[step];\n            } else if (find(matches[1], ['no', 'omit'])) {\n              delete intervals[step];\n            } else if (acc !== 0) {\n              if (acc === 1) intervals[step] = 'xxAAAAAAAAAAAA'[step];\n              else if (acc === -1) intervals[step] = 'xxmmddmmdmmddm'[step];\n            }\n          }\n        }\n      }\n    });\n\n    var intervalList = [];\n    for (var i in intervals) intervalList.push(Interval.fromString(intervals[i] + i, parent));\n\n    return new Harmony({root: root, intervals: intervalList, bass: bass, kindText: rest}, parent);\n  }\n};\n\nHarmony.fromXML = function(xml) {\n  var parser = xml2js.Parser({\n    tagNameProcessors: [misc.dashToCamel],\n    explicitArray: false,\n    mergeAttrs: true,\n    explicitCharkey: true});\n  var result;\n  parser.parseString(xml, function(err, obj) {\n    if (err) { console.error(err); return; }\n\n    // console.log(get(obj, 'harmony.root[0].rootStep[0]'));\n    var root = Pitch.fromString(get(obj, 'harmony.root.rootStep._'));\n    root.coord[1] += parseFloat(get(obj, 'harmony.root.rootAlter._', 0));\n    var bass = get(obj, 'harmony.bass.bassStep._');\n    if (bass) {\n      bass = Pitch.fromString(bass);\n      bass.coord[1] += parseFloat(get(obj, 'harmony.bass.bassAlter._', 0));\n    }\n    var kind = get(obj, 'harmony.kind._');\n    // var text = get(obj, 'harmony.kind.text');\n\n    // TODO: follow the spec regarding degree-alter:\n    // The degree-type element can be add, alter, or\n    // subtract. If the degree-type is alter or subtract, the\n    // degree-alter is relative to the degree already in the\n    // harmony based on its kind element. If the degree-type is\n    // add, the degree-alter is relative to a dominant harmony\n    // (major and perfect intervals except for a minor\n    // seventh).\n    // [http://www.musicxml.com/for-developers/musicxml-dtd/direction-elements/]\n\n    var degrees = [];\n    var ds = get(obj, 'harmony.degree');\n    if (!(ds instanceof Array)) ds = [ds];\n    ds.forEach(function(d) {\n      var step = get(d, 'degreeValue._');\n      var acc = parseInt(get(d, 'degreeAlter._', 0));\n      var text = get(d, 'degreeType.text');\n      if (step) {\n        switch (d.degreeType._) {\n          case 'add': degrees.push({type: 'add', step: step, interval: addInterval(step, acc), text: text}); break;\n          case 'subtract': degrees.push({type: 'subtract', step: step, text: text}); break;\n          case 'alter': degrees.push({type: 'alter', step: step, semitones: acc, text: text}); break;\n        }\n      }\n    });\n\n    result = new Harmony({root: root, intervals: degrees, bass: bass, kindText: kind}); // TODO\n  });\n  return result;\n};\n\nHarmony.itemType = 'Harmony';\n\nimport ItemHandler from '../item-handler.js';\nItemHandler.registerItem(Harmony);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/harmony.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 268,
    "kind": "variable",
    "name": "get",
    "memberof": "lib/classes/harmony.js",
    "static": true,
    "longname": "lib/classes/harmony.js~get",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/harmony.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "simpleInterval",
    "memberof": "lib/classes/harmony.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/harmony.js~simpleInterval",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/harmony.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "i",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 270,
    "kind": "class",
    "name": "Harmony",
    "memberof": "lib/classes/harmony.js",
    "static": true,
    "longname": "lib/classes/harmony.js~Harmony",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/harmony.js",
    "importStyle": "Harmony",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/classes/item.js~Item"
    ]
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/harmony.js~Harmony.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#init",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "member",
    "name": "root",
    "memberof": "lib/classes/harmony.js~Harmony",
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#root",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Pitch"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 275,
    "kind": "member",
    "name": "bass",
    "memberof": "lib/classes/harmony.js~Harmony",
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#bass",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "Pitch?"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 276,
    "kind": "member",
    "name": "intervals",
    "memberof": "lib/classes/harmony.js~Harmony",
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#intervals",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Interval[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "pitches",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#pitches",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "simple",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#simple",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "isMajor",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#isMajor",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "isMinor",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#isMinor",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "isDominant",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#isDominant",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "dominant",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#dominant",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [
      {
        "name": "additional",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "subdominant",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#subdominant",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "params": [
      {
        "name": "additional",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "parallel",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#parallel",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "quality",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#quality",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "kind",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#kind",
    "access": "public",
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "harmonyType",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#harmonyType",
    "access": "public",
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "getDegree",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#getDegree",
    "access": "public",
    "description": null,
    "lineNumber": 291,
    "undocument": true,
    "params": [
      {
        "name": "interval",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "interval",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#interval",
    "access": "public",
    "description": null,
    "lineNumber": 328,
    "undocument": true,
    "params": [
      {
        "name": "interval",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "transpose",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#transpose",
    "access": "public",
    "description": null,
    "lineNumber": 334,
    "undocument": true,
    "params": [
      {
        "name": "interval",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "toXML",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#toXML",
    "access": "public",
    "description": null,
    "lineNumber": 340,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#toString",
    "access": "public",
    "description": null,
    "lineNumber": 407,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#toJSON",
    "access": "public",
    "description": "",
    "lineNumber": 419,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "defaultVoicings",
    "memberof": "lib/classes/harmony.js~Harmony",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/harmony.js~Harmony#defaultVoicings",
    "access": "public",
    "description": null,
    "lineNumber": 429,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/harmony.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/harmony.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/harmony.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 544,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 296,
    "kind": "function",
    "name": "find",
    "memberof": "lib/classes/harmony.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/harmony.js~find",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/harmony.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 558,
    "undocument": true,
    "params": [
      {
        "name": "elem",
        "types": [
          "*"
        ]
      },
      {
        "name": "array",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "addInterval",
    "memberof": "lib/classes/harmony.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/harmony.js~addInterval",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/harmony.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 563,
    "undocument": true,
    "params": [
      {
        "name": "step",
        "types": [
          "*"
        ]
      },
      {
        "name": "acc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "fromString",
    "memberof": "lib/classes/harmony.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/harmony.js~fromString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/harmony.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 570,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "fromXML",
    "memberof": "lib/classes/harmony.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/harmony.js~fromXML",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/harmony.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 684,
    "undocument": true,
    "params": [
      {
        "name": "xml",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 300,
    "kind": "file",
    "name": "lib/classes/interval.js",
    "content": "\nimport Item from './item.js';\nimport knowledge from '../knowledge.js';\nimport vector from '../vector.js';\nimport toCoord from 'interval-coords';\nimport misc from '../misc.js';\n\n// import chalk from 'chalk';\n\nfunction negativeCoord(coord) {\n  return [-coord[0], coord[1] ? -coord[1] : coord[1]]; // NOTE: works for both 0 and null\n}\n\n/**\n * Musical intervals.\n */\nexport default class Interval extends Item {\n  /** @ignore */\n  static getSlots() {\n    return super.getSlots().concat(['coord']);\n  }\n\n  /** @ignore */\n  inspect() {\n    // return chalk.red('<') + chalk.red.bold(this.toString()) + chalk.red('>');\n  }\n\n  /**\n   * Display name (\"unison\", \"second\", \"third\", etc)\n   * @return {String}\n   */\n  name() {\n    return knowledge.intervalsIndex[Math.abs(this.coord[0])];\n  }\n\n  /**\n   * Number of semitones, positive for all intervals except P1\n   * @return {Number?}\n   */\n  semitones() {\n    return this.coord[1] === null ? null : Math.abs(this.coord[1]);\n  }\n\n  /**\n   * The displayed number, always positive (all seconds return 2, thirds 3, decimas 10, etc)\n   * @return {Number}\n   */\n  number() {\n    return Math.abs(this.value());\n  }\n\n  /**\n   * The interval number, positive or negative (2 means second up, -2 second down)\n   * @return {Number}\n   */\n  value() {\n    return this.coord[0] < 0 ? this.coord[0] - 1 : this.coord[0] + 1;\n  }\n\n  // Internal: can the interval be perfect, or is it a minor/major interval?\n  /** @ignore */\n  kind() {\n    return [0, 3, 4, 7].indexOf(Math.abs(this.coord[0]) % 7) >= 0 ? 'perfect' : 'minor';\n  }\n\n  /**\n   * Returns the \"simple part\", e.g. \"third\" for M10 and \"second\" for m9\n   * The global Interval.octaveIsSimple determines if octave is treated as\n   * a base interval or not (so P15 can be \"octave\" + 1 octave, or \"unison\" + 2 octaves)\n   * @return {String}\n   */\n  base() {\n    if (Interval.octaveIsSimple) {\n      return knowledge.intervalsIndex[this.isCompound() ? (this.number() - 2) % 7 + 1 : (this.number() - 1)];\n    } else {\n      return knowledge.intervalsIndex[(this.number() - 1) % 7];\n    }\n  }\n\n  /**\n   * Returns number of octaves for compound intervals.\n   * Note that if Interval.octaveIsSimple is set, a perfect octave would return 0!\n   * @return {Number}\n   */\n  octaves() {\n    if (Interval.octaveIsSimple) {\n      return this.isCompound() ? Math.floor((this.number() - 2) / 7) : 0;\n    } else {\n      return Math.floor((this.number() - 1) / 7);\n    }\n  }\n\n  /**\n   * Returns \"up\" or \"down\"\n   * @return {String}\n   */\n  direction(newDirection) {\n    if (newDirection) {\n      var dir = this.value() >= 1 ? 'up' : 'down';\n      if (dir !== newDirection) {\n        this.coord = negativeCoord(this.coord);\n      }\n\n      return this;\n    } else {\n      return this.value() >= 1 ? 'up' : 'down';\n    }\n  }\n\n  simple(ignore) {\n    // Get the (upwards) base interval (with quality)\n    var octaves = this.octaves();\n    var simple = [\n      Math.abs(this.coord[0]) - octaves * 7,\n      this.coord[1] !== null ? Math.abs(this.coord[1]) - octaves * 12 : null\n    ];\n\n    // Turn it around if necessary\n    if (!ignore) {\n      if (this.direction() === 'down') simple = negativeCoord(simple);\n    }\n\n    return new Interval({coord: simple});\n  }\n\n  /** @return {boolean} */\n  isCompound() {\n    return this.number() > (Interval.octaveIsSimple ? 8 : 7);\n  }\n\n  /** @return {boolean} */\n  isSimple() {\n    return !this.isCompound();\n  }\n\n  /** @return {Interval} */\n  invert() {\n    var simple = this.simple();\n    // Special: even when octaveIsSimple is false, we want unisons to\n    // invert to octaves\n    if (this.coord[0] % 7 === 0 && this.coord[0]) {\n      if (this.direction() === 'up') {\n        return new Interval({coord: [0, simple.coord[1] ? -simple.coord[1] : simple.coord[1]]});\n      } else {\n        return new Interval({coord: [0, simple.coord[1]]});\n      }\n    }\n\n    if (this.direction() === 'up') {\n      return new Interval({coord: [7 - simple.coord[0], simple.coord[1] ? 12 - simple.coord[1] : simple.coord[1]]});\n    } else {\n      return new Interval({coord: [-7 - simple.coord[0], simple.coord[1] ? -12 - simple.coord[1] : simple.coord[1]]});\n    }\n  }\n\n  /** @return {String} */\n  quality(long) {\n    if (this.coord[1] === null) return null;\n    var quality = knowledge.alterations[this.kind()][this.qualityValue() + 2];\n    return long ? knowledge.qualityLong[quality] : quality;\n  }\n\n  /** @return {Number} */\n  qualityValue() {\n    if (this.coord[1] === null) return null;\n    if (this.direction() === 'down') {\n      return (-this.coord[1] % 12) - knowledge.intervals[knowledge.intervalsIndex[(this.number() - 1) % 7]][1];\n    } else {\n      return (this.coord[1] % 12) - knowledge.intervals[knowledge.intervalsIndex[(this.number() - 1) % 7]][1];\n    }\n  }\n\n  /**\n   * @param {Interval} interval\n   * @return {boolean}\n   */\n  equal(interval) {\n    return this.coord[0] === interval.coord[0] && this.coord[1] === interval.coord[1];\n  }\n\n  /**\n   * @param {Interval} interval\n   * @return {boolean}\n   */\n  greater(interval) {\n    var semi = this.semitones();\n    var isemi = interval.semitones();\n\n    // If equal in absolute size, measure which interval is bigger\n    // For example P4 is bigger than A3\n    return (semi === isemi) ? (this.number() > interval.number()) : (semi > isemi);\n  }\n\n  /**\n   * @param {Interval} interval\n   * @return {boolean}\n   */\n  smaller(interval) {\n    return !this.equal(interval) && !this.greater(interval);\n  }\n\n  add(interval) {\n    if (this.coord[1] === null || interval.coord[1] === null) {\n      return new Interval({coord: [this.coord[0] + interval.coord[0]]});\n    } else {\n      return new Interval({coord: vector.add(this.coord, interval.coord)});\n    }\n  }\n\n  /** @ignore */\n  toString(ignore) {\n    // If given true, return the positive value\n    var number = ignore ? this.number() : this.value();\n\n    return this.coord[1] === null ? '' + number : this.quality() + number;\n  }\n}\n\nInterval.fromString = function(simple, parent) {\n  var coord = toCoord(simple);\n  if (!coord) {\n    throw new Error('Invalid simple format interval');\n  }\n\n  return new Interval({coord: coord}, parent);\n};\n\nInterval.coerce = function(source, parent, copy) {\n  if (source instanceof Interval) {\n    if (copy) {\n      return new Interval(source, parent);\n    } else {\n      return source;\n    }\n  }\n  // TODO: What makes most sense: 3 meaning \"3\" => [2, null] (unspecified third), or 3 meaning [3, null] (unsp. fourth)??\n  if (misc.isInteger(source)) { return new Interval({coord: [source, null]}); }\n  if (typeof source === 'string') { return Interval.fromString(source, parent); }\n  if (source instanceof Array && source.length === 2) { return new Interval({coord: source}, parent); }\n  throw new Error('Cannot coerce ' + source + ' to an interval!');\n};\n\nInterval.from = function(from, to) {   // ???\n  return from.interval(to);\n};\n\nInterval.between = function(from, to) { // TODO: parameter for explicit key\n  return new Interval({coord: vector.sub(to.toCoord(), from.toCoord())});\n};\n\n// Interval.invert = function(sInterval) {\n//   return Interval.fromString(sInterval).invert().toString();\n// };\n\nInterval.octaveIsSimple = false;\nInterval.itemType = 'Interval';\n\nimport ItemHandler from '../item-handler.js';\nItemHandler.registerItem(Interval);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/interval.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "negativeCoord",
    "memberof": "lib/classes/interval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/interval.js~negativeCoord",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/interval.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "coord",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 302,
    "kind": "class",
    "name": "Interval",
    "memberof": "lib/classes/interval.js",
    "static": true,
    "longname": "lib/classes/interval.js~Interval",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/interval.js",
    "importStyle": "Interval",
    "description": "Musical intervals.",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "lib/classes/item.js~Item"
    ]
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/interval.js~Interval.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "name",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#name",
    "access": "public",
    "description": "Display name (\"unison\", \"second\", \"third\", etc)",
    "lineNumber": 32,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "semitones",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#semitones",
    "access": "public",
    "description": "Number of semitones, positive for all intervals except P1",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "Number?"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "number",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#number",
    "access": "public",
    "description": "The displayed number, always positive (all seconds return 2, thirds 3, decimas 10, etc)",
    "lineNumber": 48,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "value",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#value",
    "access": "public",
    "description": "The interval number, positive or negative (2 means second up, -2 second down)",
    "lineNumber": 56,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "kind",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#kind",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "base",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#base",
    "access": "public",
    "description": "Returns the \"simple part\", e.g. \"third\" for M10 and \"second\" for m9\nThe global Interval.octaveIsSimple determines if octave is treated as\na base interval or not (so P15 can be \"octave\" + 1 octave, or \"unison\" + 2 octaves)",
    "lineNumber": 72,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "octaves",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#octaves",
    "access": "public",
    "description": "Returns number of octaves for compound intervals.\nNote that if Interval.octaveIsSimple is set, a perfect octave would return 0!",
    "lineNumber": 85,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "direction",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#direction",
    "access": "public",
    "description": "Returns \"up\" or \"down\"",
    "lineNumber": 97,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "newDirection",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 313,
    "kind": "member",
    "name": "coord",
    "memberof": "lib/classes/interval.js~Interval",
    "static": false,
    "longname": "lib/classes/interval.js~Interval#coord",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "simple",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#simple",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "ignore",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "isCompound",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#isCompound",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "isSimple",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#isSimple",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "invert",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#invert",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "return": {
      "nullable": null,
      "types": [
        "Interval"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "quality",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#quality",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "long",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "qualityValue",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#qualityValue",
    "access": "public",
    "description": null,
    "lineNumber": 164,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "equal",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#equal",
    "access": "public",
    "description": "",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "Interval"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "greater",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#greater",
    "access": "public",
    "description": "",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "Interval"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "smaller",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#smaller",
    "access": "public",
    "description": "",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "Interval"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "add",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#add",
    "access": "public",
    "description": null,
    "lineNumber": 202,
    "undocument": true,
    "params": [
      {
        "name": "interval",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/interval.js~Interval",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/interval.js~Interval#toString",
    "access": "public",
    "description": null,
    "lineNumber": 211,
    "ignore": true,
    "params": [
      {
        "name": "ignore",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "function",
    "name": "fromString",
    "memberof": "lib/classes/interval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/interval.js~fromString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/interval.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [
      {
        "name": "simple",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/interval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/interval.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/interval.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "from",
    "memberof": "lib/classes/interval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/interval.js~from",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/interval.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 243,
    "undocument": true,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 328,
    "kind": "function",
    "name": "between",
    "memberof": "lib/classes/interval.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/interval.js~between",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/interval.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 329,
    "kind": "file",
    "name": "lib/classes/item.js",
    "content": "import _ from 'underscore';\nimport Env from '../env.js';\nimport misc from '../misc.js';\nimport Validator from '../validator.js';\n// import Fraction from 'fraction.js';\n\n/**\n * Item is the base class for all remus objects (\"items\").\n */\nexport default class Item {\n  constructor(properties, parent) {\n    var slots = {};\n    if (!properties) properties = {};\n\n    _.each(_.unique(this.constructor.getSlots()), (key) => {\n      slots[key] = properties[key];\n\n      Object.defineProperty(this, key, {\n        get: () => { return slots[key]; },\n        set: (v) => {\n          slots[key] = v;\n          this.shouldResolve = true;\n          this.triggerOnChange(key, v);\n        }\n      });\n    });\n\n    // For debugging: warn for unknown keys\n    if (!(properties instanceof Item)) {      // ... but not when using a \"live\" object as input\n      let s = this.constructor.getSlots().concat('type', 'env', 'metas', 'events'); // TODO: don't hardcode metas and events\n      for (let key in properties) {                                     // (why aren't they slots in the first place??)\n        if (properties.hasOwnProperty(key) && key !== 'cache' && s.indexOf(key) < 0) {  // explicitly ignore cache\n          console.warn('Unknown slot ' + key + ' in item ', properties);                // TODO: Fix the actual problem\n        }\n      }\n    }\n\n    this.shouldResolve = true;\n    /** @type {Env} */\n    this.env = new Env(properties.env);\n    this.env.setParent(parent ? parent.env : null);\n    this.env.set('currentItem', this);\n\n    this.init();\n  }\n\n  /** @type {?Item} */\n  get parent() {\n    var parentEnv = this.env.getParent();\n    if (parentEnv) {\n      return parentEnv.get('currentItem');\n    }\n  }\n\n  /** @type {?Item} */\n  set parent(parent) {\n    if (parent instanceof Item) {\n      this.env.setParent(parent.env);\n    } else if (!parent) {\n      this.env.setParent(null);\n    } else {\n      throw new Error('Parent must be an instance of the Item class');\n    }\n  }\n\n  /** @type {string} */\n  get type() {\n    return this.constructor.name;\n  }\n\n  /** @protected */\n  triggerOnChange(name, value) {\n    _.each(this.changeListeners, (listener) => {\n      listener(name, value);\n    });\n  }\n\n  /**\n   * Add a change handler\n   * @param {function} f\n   */\n  onChange(f) {\n    this.changeListeners.push(f);\n\n    return () => {\n      this.removeOnChange(f);\n    };\n  }\n\n  /**\n   * Remove a change handler\n   * @param {function} f\n   */\n  removeOnChange(f) {\n    this.changeListeners = _.filter(this.changeListeners, (listener) => {\n      return listener !== f;\n    });\n  }\n\n  /**\n   * Deep-copy the object\n   */\n  clone() {\n    var obj = new this.constructor({}, this.parent);\n    _.each(_.unique(this.constructor.getSlots()), (key) => {\n      if (key !== 'env') {\n        obj[key] = misc.clone(this[key]);\n      }\n    });\n    return obj;\n  }\n\n  /**\n   * @protected\n   * @return {string[]}\n   */\n  static getSlots() {\n    return ['id', 'env', 'enabled', 'className'];\n  }\n\n  /**\n   * @protected\n   * @return {Item}\n   */\n  init() {\n    if (this.enabled === undefined) this.enabled = true;\n\n    this.cache = {};\n    this.changeListeners = [];\n\n    return this;\n  }\n\n  /**\n   * @protected\n   * @param obj\n   * @param {?Item} [DefaultClass]\n   * @param [def]\n   * @return {Item}\n   */\n  initSubObject(obj, DefaultClass, def) {\n    return misc.initSubObject(this, obj, DefaultClass, def);\n  }\n\n  /**\n   * @protected\n   * @param obj\n   * @param {?Item} [DefaultClass]\n   * @param [def]\n   * @return {Item}\n   */\n  initSubObjects(obj, DefaultClass, def) {\n    return misc.initSubObjects(this, obj, DefaultClass, def);\n  }\n\n  /** @ignore */\n  toJSON() {\n    var obj = _.pick(this, this.constructor.getSlots().concat(['type']));\n    obj.env = null;\n    if (obj.enabled === true) obj.enabled = undefined;\n\n    _.each(obj, (val, key) => {\n      if (val === undefined || val === null) {\n        delete obj[key];\n      }\n    });\n\n    if (this.cache && !_.isEmpty(Item.serializeCache)) {\n      obj.cache = _.pick(this.cache, Item.serializeCache);\n    }\n\n    obj = _.mapObject(obj, (value, key) => {\n      if (_.isObject(value) && value.toJSON) {\n        return value.toJSON();\n      } else {\n        return value;\n      }\n    });\n\n    return obj;\n  }\n\n  /**\n   * Perform validation. Override in subclasses to add additional checks.\n   *\n   * **Note:** Must return a Validator object!\n   * @protected\n   * @return {Validator}\n   * @example\n   * // In an Item subclass\n   * doValidate() {\n   *   var validator = super.doValidate();\n   *   validator.isNumber(this, 'someNumericSlot')\n   *   validator.isArrayOfIntegers(this, 'beats');\n   *   validator.isOneOf(this, 'denom', [1, 2, 4, 8, 16, 32, 64, 128, 256]);\n   *   return validator;\n   * }\n   */\n  doValidate() {\n    var validator = new Validator();\n    validator.isDefined(this, 'type');\n    validator.hasType(this, 'env', Env);\n    return validator;\n  }\n\n  /**\n   * Check for data consistency\n   * @param {?boolean} log - Write validation errors to the console\n   * @return {boolean}\n   */\n  validate(log = true) {\n    var validator = this.doValidate();\n    if (log) validator.log();\n    return validator.errors.length === 0;\n  }\n\n  enableAutoResolver() {\n    if (!this.autoResolveChangeListener) {\n      this.autoResolveChangeListener = this.onChange(() => {\n        this.resolve();\n      });\n\n      this.resolve();\n    }\n  }\n\n  disableAutoResolver() {\n    if (this.autoResolveChangeListener) {\n      this.autoResolveChangeListener();\n    }\n  }\n\n  /** @ignore */\n  resolve(force = false) {\n    this.localResolve();\n    return false;\n  }\n\n  /** @ignore */\n  localResolve() {\n  }\n}\n\nItem.prototype.inheritExplitDuration = true;\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 330,
    "kind": "class",
    "name": "Item",
    "memberof": "lib/classes/item.js",
    "static": true,
    "longname": "lib/classes/item.js~Item",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/item.js",
    "importStyle": "Item",
    "description": "Item is the base class for all remus objects (\"items\").",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 331,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "shouldResolve",
    "memberof": "lib/classes/item.js~Item",
    "static": false,
    "longname": "lib/classes/item.js~Item#shouldResolve",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "member",
    "name": "env",
    "memberof": "lib/classes/item.js~Item",
    "static": false,
    "longname": "lib/classes/item.js~Item#env",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Env"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 335,
    "kind": "get",
    "name": "parent",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#parent",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "type": {
      "nullable": true,
      "types": [
        "Item"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 336,
    "kind": "set",
    "name": "parent",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#parent",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "type": {
      "nullable": true,
      "types": [
        "Item"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 337,
    "kind": "get",
    "name": "type",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#type",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "triggerOnChange",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#triggerOnChange",
    "access": "protected",
    "description": null,
    "lineNumber": 72,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "onChange",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#onChange",
    "access": "public",
    "description": "Add a change handler",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "removeOnChange",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#removeOnChange",
    "access": "public",
    "description": "Remove a change handler",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 341,
    "kind": "member",
    "name": "changeListeners",
    "memberof": "lib/classes/item.js~Item",
    "static": false,
    "longname": "lib/classes/item.js~Item#changeListeners",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "clone",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#clone",
    "access": "public",
    "description": "Deep-copy the object",
    "lineNumber": 103,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/item.js~Item.getSlots",
    "access": "protected",
    "description": "",
    "lineNumber": 117,
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#init",
    "access": "protected",
    "description": "",
    "lineNumber": 125,
    "return": {
      "nullable": null,
      "types": [
        "Item"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 345,
    "kind": "member",
    "name": "enabled",
    "memberof": "lib/classes/item.js~Item",
    "static": false,
    "longname": "lib/classes/item.js~Item#enabled",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "member",
    "name": "cache",
    "memberof": "lib/classes/item.js~Item",
    "static": false,
    "longname": "lib/classes/item.js~Item#cache",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "initSubObject",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#initSubObject",
    "access": "protected",
    "description": "",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Item"
        ],
        "spread": false,
        "optional": true,
        "name": "DefaultClass",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "def",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Item"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "initSubObjects",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#initSubObjects",
    "access": "protected",
    "description": "",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Item"
        ],
        "spread": false,
        "optional": true,
        "name": "DefaultClass",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "def",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Item"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#toJSON",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#doValidate",
    "access": "protected",
    "description": "Perform validation. Override in subclasses to add additional checks.\n\n**Note:** Must return a Validator object!",
    "examples": [
      "// In an Item subclass\ndoValidate() {\n  var validator = super.doValidate();\n  validator.isNumber(this, 'someNumericSlot')\n  validator.isArrayOfIntegers(this, 'beats');\n  validator.isOneOf(this, 'denom', [1, 2, 4, 8, 16, 32, 64, 128, 256]);\n  return validator;\n}"
    ],
    "lineNumber": 199,
    "return": {
      "nullable": null,
      "types": [
        "Validator"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 352,
    "kind": "method",
    "name": "validate",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#validate",
    "access": "public",
    "description": "Check for data consistency",
    "lineNumber": 211,
    "params": [
      {
        "nullable": true,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "log",
        "description": "Write validation errors to the console"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "enableAutoResolver",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#enableAutoResolver",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 354,
    "kind": "member",
    "name": "autoResolveChangeListener",
    "memberof": "lib/classes/item.js~Item",
    "static": false,
    "longname": "lib/classes/item.js~Item#autoResolveChangeListener",
    "access": "public",
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "disableAutoResolver",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#disableAutoResolver",
    "access": "public",
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "resolve",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#resolve",
    "access": "public",
    "description": null,
    "lineNumber": 234,
    "ignore": true,
    "params": [
      {
        "name": "force",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "localResolve",
    "memberof": "lib/classes/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/item.js~Item#localResolve",
    "access": "public",
    "description": null,
    "lineNumber": 240,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 358,
    "kind": "file",
    "name": "lib/classes/meta/clef.js",
    "content": "\nimport Meta from './meta.js';\n// import chalk from 'chalk';\nimport _ from 'underscore';\nvar isString = _.isString;\nvar isObject = _.isObject;\n\n/**\n * Clef change meta-event.\n *\n */\nexport default class Clef extends Meta {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots().concat(['kind', 'octave']);\n  }\n\n  /**\n   * @ignore\n   */\n  inspect() {\n  }\n\n  /**\n   * @ignore\n   */\n  init() {\n    super.init();\n\n    /** @type {String} */\n    this.kind = this.kind || 'g';\n    /** @type {Integer} */\n    this.octave = this.octave || 0;\n\n    return this;\n  }\n\n  /**\n   * @ignore\n   */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.isOneOf(this, 'kind', ['g', 'c', 'f']);\n    validator.isInteger(this, 'octave', -2, 2);\n    // validator.isOneOf(this, 'beat', [1, 2, 4, 8, 16, 32, 64, 128, 256]);\n    return validator;\n  }\n\n  /**\n   * @ignore\n   */\n  toString() {\n    let o = '';\n    if (this.octave < 0) o += (this.octave * 7 + 1);\n    if (this.octave > 0) o += '+' + (this.octave * 7 + 1);\n    return o;\n  }\n}\n\nClef.coerce = function(source, parent, copy) {\n  if (source instanceof Clef) {\n    if (copy) return new Clef(source, parent);\n    else return source;\n  }\n  if (isString(source)) return Clef.fromString(source, parent);\n  if (isObject(source)) return new Clef(source, parent);\n  throw new Error('Cannot coerce ' + source + ' to a clef!');\n};\n\nClef.fromString = function(str, parent) {\n  let match = str.match(/^(\\w+)([\\+\\-]\\d+)?$/);\n  if (match) {\n    let octave = {'+8': 1, '+15': 2, '-8': -1, '-15': -2}[match[2]];\n    if (match[2] && !octave) {\n      throw new Error('Unknown clef transposition: ' + match[2]);\n    }\n    return new Clef({kind: match[1], octave: octave || 0});\n  }\n  throw new Error('Cannot create a clef from the string ' + str);\n};\n\nClef.itemType = 'Clef';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Clef);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/meta/clef.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 359,
    "kind": "variable",
    "name": "isString",
    "memberof": "lib/classes/meta/clef.js",
    "static": true,
    "longname": "lib/classes/meta/clef.js~isString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/clef.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 360,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/meta/clef.js",
    "static": true,
    "longname": "lib/classes/meta/clef.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/clef.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 361,
    "kind": "class",
    "name": "Clef",
    "memberof": "lib/classes/meta/clef.js",
    "static": true,
    "longname": "lib/classes/meta/clef.js~Clef",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/meta/clef.js",
    "importStyle": "Clef",
    "description": "Clef change meta-event.",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "lib/classes/meta/meta.js~Meta"
    ]
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/meta/clef.js~Clef",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/clef.js~Clef.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/meta/clef.js~Clef",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/clef.js~Clef#inspect",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 364,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/meta/clef.js~Clef",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/clef.js~Clef#init",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "member",
    "name": "kind",
    "memberof": "lib/classes/meta/clef.js~Clef",
    "static": false,
    "longname": "lib/classes/meta/clef.js~Clef#kind",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 366,
    "kind": "member",
    "name": "octave",
    "memberof": "lib/classes/meta/clef.js~Clef",
    "static": false,
    "longname": "lib/classes/meta/clef.js~Clef#octave",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/meta/clef.js~Clef",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/clef.js~Clef#doValidate",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/meta/clef.js~Clef",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/clef.js~Clef#toString",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/meta/clef.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/clef.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/clef.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 370,
    "kind": "function",
    "name": "fromString",
    "memberof": "lib/classes/meta/clef.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/clef.js~fromString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/clef.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "file",
    "name": "lib/classes/meta/key.js",
    "content": "\nimport Pitch from '../pitch.js';\nimport Mode from '../mode.js';\nimport Meta from './meta.js';\nimport Interval from '../interval.js';\n// import chalk from 'chalk';\nimport _ from 'underscore';\nvar isObject = _.isObject;\nvar isString = _.isString;\n\n/**\n * Represent a musical key, such as A major, G mixolydian or D hijaz\n */\nexport default class Key extends Meta {\n  /** @ignore */\n  static getSlots() {\n    return super.getSlots().concat(['root', 'mode', 'level', 'profile']);\n  }\n\n  /** @ignore */\n  inspect() {\n    // var color = chalk.green;\n    // if (this.beats.every(function(x) { return x === 1 })) {\n    //  return color('<') + color.bold(this.beats.length + '/' + this.denom) + color('>');\n    // } else {\n    // return color('<') + color.bold(this.root.join('+') + this.mode) + color('>');\n    // }\n  }\n\n  /** @ignore */\n  init() {\n    super.init();\n    /** @type {Pitch} */\n    this.root = this.initSubObject(this.root || 'C', Pitch);\n    /** @type {Mode} */\n    this.mode = this.initSubObject(this.mode || 'major', Mode);\n    /** @type {number} */\n    this.level = this.level || 0;\n    /** @type {number[]} */\n    this.profile = this.profile || null;\n    return this;\n  }\n\n  /** @ignore */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.hasType(this, 'root', Pitch);\n    validator.hasTypeOrNull(this, 'mode', Mode);\n    validator.isInteger(this, 'level', 0);\n    validator.isArrayOfIntegers(this, 'profile', true);\n    return validator;\n  }\n\n  /**\n   * Given a diatonic step, return a corresponding pitch\n   * NOTE that step is \"zero-based\" (a unison is 0, a fourth is 3 etc)\n   * @return {Pitch}\n   */\n  step(step) {\n    return this.root.interval(this.mode.stepInterval(step));\n  }\n\n  /**\n   * Given a pitch, return a list of corresponding step and alteration\n   * NOTE that step is \"zero-based\" (a unison is 0, a fourth is 3 etc)\n   * Example: Key.fromString('G major').pitchStep(Pitch.fromString('Eb')) => [5, -1]\n   * @return {Array}\n   */\n  pitchStep(pitch, simple = true) {\n    // TODO: More efficient implementation\n    //       Maybe improve Interval.simple() so that it can return upwards intervals only\n    let interval = Interval.between(this.root, pitch).simple();\n    if (interval.direction() === 'down') interval = interval.add(Interval.fromString('P8'));\n    let diff = Interval.between(this.step(interval.coord[0]), pitch).simple();\n    if (diff.direction() === 'down') diff = diff.add(Interval.fromString('P8'));\n    return [interval.coord[0], diff.qualityValue()];\n  }\n\n  /** @ignore */\n  toString() {\n    return '<' + this.root.name().toUpperCase() + this.root.accidental() + ' ' + this.mode.getName() + '>';\n  }\n\n  /** @ignore */\n  localResolve() {\n    super.localResolve();\n    this.cache.key = this;\n    this.cache.modeName = this.mode.getName();\n    this.cache.simpleMode = this.simpleMode();\n  }\n\n  /**\n   * Return \"minor\" or \"major\" based on the identified mode\n   * and the key profile. Note that this function always returns\n   * a string, so if no mode is identified, \"major\" is returned.\n   * @return {string}\n   */\n  simpleMode() {\n    let simpleModeName = this.mode.simple();\n    // console.log(simpleModeName);\n    if (simpleModeName) return simpleModeName;\n    let rootChroma = this.root.chroma() + 3;  // key profile has A=0 instead of C=0\n    let minor = (rootChroma + 3) % 12;\n    let major = (rootChroma + 4) % 12;\n    // console.log(rootChroma, minor, major, this.profile);\n    if (this.profile) {\n      return (this.profile[minor] > this.profile[major]) ? 'minor' : 'major';\n    }\n    return 'major';\n  }\n}\n\nKey.coerce = function(source, parent, copy) {\n  if (source instanceof Key) {\n    if (copy) return new Key(source, parent);\n    else return source;\n  }\n  if (isString(source)) { return Key.fromString(source, parent); }\n  if (source instanceof Array && source.length === 2) {\n    return new Key({root: source[0], mode: source[1]}, parent);\n  }\n  if (isObject(source)) return new Key(source, parent);\n  throw new Error('Cannot coerce ' + source + ' to a key!');\n};\n\nKey.fromString = function(str, parent) {\n  var match = str.match(/^(\\S+)\\s+(\\S.*)$/);\n  if (match) return new Key({root: match[1], mode: match[2]}, parent);\n  throw new Error('Cannot coerce ' + str + ' to a key');\n};\n\nKey.itemType = 'Key';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Key);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/meta/key.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 372,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/meta/key.js",
    "static": true,
    "longname": "lib/classes/meta/key.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/key.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "variable",
    "name": "isString",
    "memberof": "lib/classes/meta/key.js",
    "static": true,
    "longname": "lib/classes/meta/key.js~isString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/key.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 374,
    "kind": "class",
    "name": "Key",
    "memberof": "lib/classes/meta/key.js",
    "static": true,
    "longname": "lib/classes/meta/key.js~Key",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/meta/key.js",
    "importStyle": "Key",
    "description": "Represent a musical key, such as A major, G mixolydian or D hijaz",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "lib/classes/meta/meta.js~Meta"
    ]
  },
  {
    "__docId__": 375,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/meta/key.js~Key",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/key.js~Key.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/meta/key.js~Key",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 377,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/meta/key.js~Key",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#init",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "root",
    "memberof": "lib/classes/meta/key.js~Key",
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#root",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Pitch"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 379,
    "kind": "member",
    "name": "mode",
    "memberof": "lib/classes/meta/key.js~Key",
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#mode",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Mode"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 380,
    "kind": "member",
    "name": "level",
    "memberof": "lib/classes/meta/key.js~Key",
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#level",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 381,
    "kind": "member",
    "name": "profile",
    "memberof": "lib/classes/meta/key.js~Key",
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#profile",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/meta/key.js~Key",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#doValidate",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "step",
    "memberof": "lib/classes/meta/key.js~Key",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#step",
    "access": "public",
    "description": "Given a diatonic step, return a corresponding pitch\nNOTE that step is \"zero-based\" (a unison is 0, a fourth is 3 etc)",
    "lineNumber": 59,
    "return": {
      "nullable": null,
      "types": [
        "Pitch"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "step",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "pitchStep",
    "memberof": "lib/classes/meta/key.js~Key",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#pitchStep",
    "access": "public",
    "description": "Given a pitch, return a list of corresponding step and alteration\nNOTE that step is \"zero-based\" (a unison is 0, a fourth is 3 etc)\nExample: Key.fromString('G major').pitchStep(Pitch.fromString('Eb')) => [5, -1]",
    "lineNumber": 69,
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "pitch",
        "types": [
          "*"
        ]
      },
      {
        "name": "simple",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ]
  },
  {
    "__docId__": 385,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/meta/key.js~Key",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#toString",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "method",
    "name": "localResolve",
    "memberof": "lib/classes/meta/key.js~Key",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#localResolve",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "simpleMode",
    "memberof": "lib/classes/meta/key.js~Key",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/key.js~Key#simpleMode",
    "access": "public",
    "description": "Return \"minor\" or \"major\" based on the identified mode\nand the key profile. Note that this function always returns\na string, so if no mode is identified, \"major\" is returned.",
    "lineNumber": 98,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 388,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/meta/key.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/key.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/key.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 389,
    "kind": "function",
    "name": "fromString",
    "memberof": "lib/classes/meta/key.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/key.js~fromString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/key.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 390,
    "kind": "file",
    "name": "lib/classes/meta/meta.js",
    "content": "\nimport Event from '../event/event.js';\n// import Duration from '../duration';\n// import _ from 'underscore';\n// import Fraction from 'fraction.js';\n\n/**\n * Base class for all Metas.\n */\nexport default class Meta extends Event {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots();\n  }\n\n  /**\n   * @ignore\n   */\n  init() {\n    super.init();\n    return this;\n  }\n\n  /**\n   * @ignore\n   */\n  doValidate() {\n    var validator = super.doValidate();\n    return validator;\n  }\n}\n\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/meta/meta.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 391,
    "kind": "class",
    "name": "Meta",
    "memberof": "lib/classes/meta/meta.js",
    "static": true,
    "longname": "lib/classes/meta/meta.js~Meta",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/meta/meta.js",
    "importStyle": "Meta",
    "description": "Base class for all Metas.",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "lib/classes/event/event.js~Event"
    ]
  },
  {
    "__docId__": 392,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/meta/meta.js~Meta",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/meta.js~Meta.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/meta/meta.js~Meta",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/meta.js~Meta#init",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/meta/meta.js~Meta",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/meta.js~Meta#doValidate",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "file",
    "name": "lib/classes/meta/tempo.js",
    "content": "\nimport Meta from './meta.js';\n// import chalk from 'chalk';\nimport _ from 'underscore';\nvar isNumber = _.isNumber;\nvar isObject = _.isObject;\nimport Fraction from 'fraction.js';\n\n/**\n * Tempo change meta-event.\n *\n * Tempo is expressed in `bpm` and `beat`, where `bpm` is a number\n * and `beat` is a wn Fraction. `beat` is coerced to a Fraction when\n * the item is created, but not if the slot is assigned at a later point.\n */\nexport default class Tempo extends Meta {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots().concat(['bpm', 'beat']);\n  }\n\n  /**\n   * @ignore\n   */\n  inspect() {\n    // var color = chalk.green;\n    // return color('<') + color.bold(this.bpm.toString()) + color(' bpm>');\n  }\n\n  /**\n   * @ignore\n   */\n  init() {\n    super.init();\n\n    /** @type {Fraction} */\n    this.bpm = this.bpm || new Fraction(120);\n    /** @type {Fraction} */\n    this.beat = this.beat ? new Fraction(this.beat) : new Fraction(1, 4);\n\n    // Temporary fix to prevent invalid remus output from JSON.stringify\n    this.beat.toJSON = function() { return this.toFraction(); };\n    return this;\n  }\n\n  /**\n   * Return number of seconds per whole note for this tempo.\n   * @return {Fraction}\n   */\n  sPerWn() {\n    // return 60 / (this.bpm * this.beat);\n    return (new Fraction(60)).div(this.beat.mul(this.bpm));\n  }\n\n  /**\n   * @ignore\n   */\n  doValidate() {\n    var validator = super.doValidate();\n    // validator.isOneOf(this, 'beat', [1, 2, 4, 8, 16, 32, 64, 128, 256]);\n    return validator;\n  }\n\n  /**\n   * @ignore\n   */\n  toString() {\n    return '<' + this.bpm.toString() + 'bpm>';\n  }\n}\n\nTempo.coerce = function(source, parent, copy) {\n  if (source instanceof Tempo) {\n    if (copy) return new Tempo(source, parent);\n    else return source;\n  }\n  if (isNumber(source)) return new Tempo({bpm: source}, parent);\n  if (isObject(source)) return new Tempo(source, parent);\n  throw new Error('Cannot coerce ' + source + ' to a tempo!');\n};\n\nTempo.itemType = 'Tempo';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Tempo);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/meta/tempo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 396,
    "kind": "variable",
    "name": "isNumber",
    "memberof": "lib/classes/meta/tempo.js",
    "static": true,
    "longname": "lib/classes/meta/tempo.js~isNumber",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/tempo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 397,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/meta/tempo.js",
    "static": true,
    "longname": "lib/classes/meta/tempo.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/tempo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 398,
    "kind": "class",
    "name": "Tempo",
    "memberof": "lib/classes/meta/tempo.js",
    "static": true,
    "longname": "lib/classes/meta/tempo.js~Tempo",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/meta/tempo.js",
    "importStyle": "Tempo",
    "description": "Tempo change meta-event.\n\nTempo is expressed in `bpm` and `beat`, where `bpm` is a number\nand `beat` is a wn Fraction. `beat` is coerced to a Fraction when\nthe item is created, but not if the slot is assigned at a later point.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "lib/classes/meta/meta.js~Meta"
    ]
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/meta/tempo.js~Tempo",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/tempo.js~Tempo.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/meta/tempo.js~Tempo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/tempo.js~Tempo#inspect",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 401,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/meta/tempo.js~Tempo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/tempo.js~Tempo#init",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 402,
    "kind": "member",
    "name": "bpm",
    "memberof": "lib/classes/meta/tempo.js~Tempo",
    "static": false,
    "longname": "lib/classes/meta/tempo.js~Tempo#bpm",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Fraction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 403,
    "kind": "member",
    "name": "beat",
    "memberof": "lib/classes/meta/tempo.js~Tempo",
    "static": false,
    "longname": "lib/classes/meta/tempo.js~Tempo#beat",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Fraction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "sPerWn",
    "memberof": "lib/classes/meta/tempo.js~Tempo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/tempo.js~Tempo#sPerWn",
    "access": "public",
    "description": "Return number of seconds per whole note for this tempo.",
    "lineNumber": 52,
    "return": {
      "nullable": null,
      "types": [
        "Fraction"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 405,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/meta/tempo.js~Tempo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/tempo.js~Tempo#doValidate",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/meta/tempo.js~Tempo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/tempo.js~Tempo#toString",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/meta/tempo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/tempo.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/tempo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 408,
    "kind": "file",
    "name": "lib/classes/meta/time.js",
    "content": "\nimport Meta from './meta.js';\nimport misc from '../../misc.js';\nimport Fraction from 'fraction.js';\n// import chalk from 'chalk';\nimport _ from 'underscore';\nvar isObject = _.isObject;\n\n/**\n * Time signature meta-event.\n *\n * Time signature Tempo is expressed in `bpm` and `beat`, where `bpm` is a number\n * and `beat` is a wn Fraction. `beat` is coerced to a Fraction when\n * the item is created, but not if the slot is assigned at a later point.\n */\nexport default class Time extends Meta {\n  /** @ignore */\n  static getSlots() {\n    return super.getSlots().concat(['beats', 'denom', 'abbreviate']);\n  }\n\n  /** @ignore */\n  inspect() {\n    // var color = chalk.green;\n    // if (this.beats.every(function(x) { return x === 1 })) {\n    //  return color('<') + color.bold(this.beats.length + '/' + this.denom) + color('>');\n    // } else {\n    // return color('<') + color.bold(this.beats.join('+') + '/' + this.denom) + color('>');\n    // }\n  }\n\n  /** @ignore */\n  init() {\n    super.init();\n\n    /** @type {number[]} */\n    this.beats = this.beats || [1, 1, 1, 1];\n    /** @type {number} */\n    this.denom = this.denom || 4;\n    /** @type {boolean} */\n    this.abbreviate = !!this.abbreviate;\n\n    if (_.isNumber(this.beats) && this.beats % 1 === 0 && this.beats > 0) {\n      this.beats = Time.defaultBeatPattern(this.beats, this.denom);\n      if (!this.beats) throw new Error('Could not find default beat pattern for ' + this.beats);\n    } else if (!_.isArray(this.beats)) {\n      throw new Error('Time.beats must be an array of integers');\n    }\n\n    return this;\n  }\n\n  getMeasureWn() {\n    return new Fraction(this.num, this.denom);\n  }\n\n  /** @ignore */\n  doValidate() {\n    var validator = super.doValidate();\n    validator.isArrayOfIntegers(this, 'beats');\n    validator.isOneOf(this, 'denom', [1, 2, 4, 8, 16, 32, 64, 128, 256]);\n    return validator;\n  }\n\n  /** @type {number} */\n  get num() {\n    return misc.sumArray(this.beats);\n  }\n\n  /** @ignore */\n  toString() {\n    return '<' + this.num + '/' + this.denom + '>';\n  }\n\n  /** @ignore */\n  toVexFlow() {\n    let str;\n    if (this.abbreviate && this.num === 4 && this.denom === 4) {\n      str = new String('C'); // eslint-disable-line no-new-wrappers\n    } else if (this.abbreviate && this.num === 2 && this.denom === 2) {\n      str = new String('C|'); // eslint-disable-line no-new-wrappers\n    } else {\n      str = new String(this.num + '/' + this.denom); // eslint-disable-line no-new-wrappers\n    }\n    str.id = this.id;\n    return str;\n  }\n\n  /**\n   * Get default beat pattern for a given numerator and denominator.\n   * @param {number} num\n   * @param {number} denom\n   * @return {number[]}\n   *\n   * @example\n   * Time.defaultBeatPattern(4, 4)  => [1, 1, 1, 1]\n   * Time.defaultBeatPattern(6, 8)  => [3, 3]\n   */\n  static defaultBeatPattern(num, denom) {\n    if (denom >= 8 && num >= 6 && num % 3 === 0) {\n      let beats = Array(num / 3);\n      for (let i = 0; i < beats.length; i++) beats[i] = 3;\n      return beats;\n    } else {\n      let beats = Array(num);\n      for (let i = 0; i < beats.length; i++) beats[i] = 1;\n      return beats;\n    }\n  }\n}\n\nTime.coerce = function(source, parent, copy) {\n  if (source instanceof Time) {\n    if (copy) return new Time(source, parent);\n    else return source;\n  }\n  if (isObject(source)) return new Time(source, parent);\n  throw new Error('Cannot coerce ' + source + ' to a time!');\n};\n\nTime.itemType = 'Time';\n\nimport ItemHandler from '../../item-handler.js';\nItemHandler.registerItem(Time);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/meta/time.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 409,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/meta/time.js",
    "static": true,
    "longname": "lib/classes/meta/time.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/time.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 410,
    "kind": "class",
    "name": "Time",
    "memberof": "lib/classes/meta/time.js",
    "static": true,
    "longname": "lib/classes/meta/time.js~Time",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/meta/time.js",
    "importStyle": "Time",
    "description": "Time signature meta-event.\n\nTime signature Tempo is expressed in `bpm` and `beat`, where `bpm` is a number\nand `beat` is a wn Fraction. `beat` is coerced to a Fraction when\nthe item is created, but not if the slot is assigned at a later point.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "lib/classes/meta/meta.js~Meta"
    ]
  },
  {
    "__docId__": 411,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/meta/time.js~Time",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/time.js~Time.getSlots",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/meta/time.js~Time",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 413,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/meta/time.js~Time",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#init",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "member",
    "name": "beats",
    "memberof": "lib/classes/meta/time.js~Time",
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#beats",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 415,
    "kind": "member",
    "name": "denom",
    "memberof": "lib/classes/meta/time.js~Time",
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#denom",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 416,
    "kind": "member",
    "name": "abbreviate",
    "memberof": "lib/classes/meta/time.js~Time",
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#abbreviate",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 418,
    "kind": "method",
    "name": "getMeasureWn",
    "memberof": "lib/classes/meta/time.js~Time",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#getMeasureWn",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 419,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/meta/time.js~Time",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#doValidate",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "get",
    "name": "num",
    "memberof": "lib/classes/meta/time.js~Time",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#num",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 421,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/meta/time.js~Time",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#toString",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "method",
    "name": "toVexFlow",
    "memberof": "lib/classes/meta/time.js~Time",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/meta/time.js~Time#toVexFlow",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 423,
    "kind": "method",
    "name": "defaultBeatPattern",
    "memberof": "lib/classes/meta/time.js~Time",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/time.js~Time.defaultBeatPattern",
    "access": "public",
    "description": "Get default beat pattern for a given numerator and denominator.",
    "examples": [
      "Time.defaultBeatPattern(4, 4)  => [1, 1, 1, 1]\nTime.defaultBeatPattern(6, 8)  => [3, 3]"
    ],
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "denom",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 424,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/meta/time.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/meta/time.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/meta/time.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 425,
    "kind": "file",
    "name": "lib/classes/mode.js",
    "content": "\nimport _ from 'underscore';\n\nimport Item from './item.js';\nimport defaults from '../defaults.js';\nimport knowledge from '../knowledge.js';\nimport Interval from './interval.js';\n// import misc from '../misc';\n// import chalk from 'chalk';\n\n/**\n * Musical modes.\n *\n */\nexport default class Mode extends Item {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots().concat(['name', 'scale', 'stepsPerOctave', 'tcuPerOctave']);\n  }\n\n  /** @ignore */\n  init() {\n    super.init();\n    /** @type {string} */\n    this.name = this.name || null;\n    /** @type {integer} */\n    this.stepsPerOctave = this.stepsPerOctave || defaults.stepsPerOctave;\n    /** @type {integer} */\n    this.tcuPerOctave = this.tcuPerOctave || defaults.tcuPerOctave;\n    return this;\n  }\n\n  /**\n   * The name of the mode\n   * @return {string}\n   */\n  getName() {\n    if (this.name) return this.name;\n    for (let scale in knowledge.scales) {\n      if (_.isEqual(knowledge.scales[scale], this.scale)) return scale;\n    }\n    return ''; // TODO\n  }\n\n  /**\n   * Simple mode, i.e. \"major\" or \"minor\" or null if unknown\n   * @return {string?}\n   */\n  simple() {\n    let scale = this.scale || knowledge.scales[this.name];\n    if (scale) {\n      if (scale[2] === 3) return 'minor';\n      if (scale[2] === 4) return 'major';\n    }\n    return null;\n  }\n\n  /**\n   * Given a diatonic step, return a corresponding qualified interval\n   * NOTE that step is \"zero-based\" (a unison is 0, a fourth is 3 etc)\n   * @return {Interval}\n   */\n  stepInterval(step) {\n    let spo = this.stepsPerOctave;\n    let tpo = this.tcuPerOctave;\n    let simpleStep = ((step % spo) + spo) % spo; // Positive remainder\n    let octaves = Math.floor(step / spo);\n    return new Interval({coord: [step, octaves * tpo + this.scale[simpleStep]]});\n  }\n\n  /**\n   * Returns a string representation of the mode.\n   * @return {string}\n   *\n   * **NOTE:** This is currently *not* the inverse of {@link Mode.fromString}, it is just for\n   * creating a human-readable string.\n   */\n  toString() {\n    return '<' + this.getName() + '>';\n  }\n\n  /**\n   * @ignore\n   */\n  // toXML(rootName) {\n  //   return misc.buildXML(this.toXMLObject(), {rootName: rootName || 'mode'});\n  // }\n\n  /**\n   * @ignore\n   */\n  // toXMLObject() {\n  //   return { step: this.name().toUpperCase(), alter: this.accidentalValue(), octave: this.octave() };\n  // }\n\n  /**\n   * @ignore\n   */\n  doValidate() {\n    var validator = super.doValidate();\n    return validator;\n  }\n}\n\nMode.coerce = function(source, parent, copy) {\n  if (source instanceof Mode) {\n    if (copy || (source.parent !== parent)) return new Mode(source, parent);\n    else return source;\n  }\n  if (_.isString(source)) { return Mode.fromString(source, parent); }\n  if (source instanceof Array) {\n    return new Mode({scale: source}, parent);\n  }\n  if (_.isObject(source)) { return new Mode(source, parent); }\n\n  throw new Error('Cannot coerce ' + source + ' to a mode!');\n};\n\nMode.fromString = function(name, parent) {\n  let scale = knowledge.scales[name];\n  // if (scale) {\n  return new Mode({name: name, scale: scale}, parent);\n  // }\n  // throw new Error(name + ' is not a known mode');\n};\n\n// Mode.fromXML = function(xml, parent) {\n//   var obj = misc.parseXML(xml, {explicitArray: false, mergeAttrs: true, explicitCharkey: false}, parent);\n//   return Mode.fromXMLObject(obj, parent);\n// };\n\n// Mode.fromXMLObject = function(obj, parent) {\n//   return new Mode({coord: coord}, parent);\n// };\n\nMode.itemType = 'Mode';\n\nimport ItemHandler from '../item-handler.js';\nItemHandler.registerItem(Mode);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/mode.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 426,
    "kind": "class",
    "name": "Mode",
    "memberof": "lib/classes/mode.js",
    "static": true,
    "longname": "lib/classes/mode.js~Mode",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/mode.js",
    "importStyle": "Mode",
    "description": "Musical modes.",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "lib/classes/item.js~Item"
    ]
  },
  {
    "__docId__": 427,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/mode.js~Mode",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/mode.js~Mode.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 428,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/mode.js~Mode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/mode.js~Mode#init",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 429,
    "kind": "member",
    "name": "name",
    "memberof": "lib/classes/mode.js~Mode",
    "static": false,
    "longname": "lib/classes/mode.js~Mode#name",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 430,
    "kind": "member",
    "name": "stepsPerOctave",
    "memberof": "lib/classes/mode.js~Mode",
    "static": false,
    "longname": "lib/classes/mode.js~Mode#stepsPerOctave",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 431,
    "kind": "member",
    "name": "tcuPerOctave",
    "memberof": "lib/classes/mode.js~Mode",
    "static": false,
    "longname": "lib/classes/mode.js~Mode#tcuPerOctave",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 432,
    "kind": "method",
    "name": "getName",
    "memberof": "lib/classes/mode.js~Mode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/mode.js~Mode#getName",
    "access": "public",
    "description": "The name of the mode",
    "lineNumber": 39,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 433,
    "kind": "method",
    "name": "simple",
    "memberof": "lib/classes/mode.js~Mode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/mode.js~Mode#simple",
    "access": "public",
    "description": "Simple mode, i.e. \"major\" or \"minor\" or null if unknown",
    "lineNumber": 51,
    "return": {
      "nullable": null,
      "types": [
        "string?"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 434,
    "kind": "method",
    "name": "stepInterval",
    "memberof": "lib/classes/mode.js~Mode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/mode.js~Mode#stepInterval",
    "access": "public",
    "description": "Given a diatonic step, return a corresponding qualified interval\nNOTE that step is \"zero-based\" (a unison is 0, a fourth is 3 etc)",
    "lineNumber": 65,
    "return": {
      "nullable": null,
      "types": [
        "Interval"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "step",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 435,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/mode.js~Mode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/mode.js~Mode#toString",
    "access": "public",
    "description": "Returns a string representation of the mode.",
    "lineNumber": 80,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "**NOTE:** This is currently *not* the inverse of {@link Mode.fromString}, it is just for\ncreating a human-readable string."
    },
    "params": []
  },
  {
    "__docId__": 436,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/mode.js~Mode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/mode.js~Mode#doValidate",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 437,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/mode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/mode.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/mode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 438,
    "kind": "function",
    "name": "fromString",
    "memberof": "lib/classes/mode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/mode.js~fromString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/mode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 439,
    "kind": "file",
    "name": "lib/classes/pitch.js",
    "content": "\nimport Item from './item.js';\nimport scientific from 'scientific-notation';\nimport helmholtz from 'helmholtz';\nimport defaults from '../defaults.js';\nimport knowledge from '../knowledge.js';\nimport notecoord from 'notecoord';\nimport vector from '../vector.js';\nimport Interval from './interval.js';\nimport misc from '../misc.js';\n// import chalk from 'chalk.js';\nimport _ from 'underscore';\nvar isNumber = _.isNumber;\nvar isObject = _.isObject;\nvar isString = _.isString;\n\nfunction pad(str, ch, len) {\n  for (; len > 0; len--) {\n    str += ch;\n  }\n\n  return str;\n}\n\n/**\n * Pitch representation.\n *\n * Three types of pitches are supported:\n *\n * * Exact tone-height (in *mmel* units, see below)\n * * Tone-height category (in *tcu* above C0)\n * * Structural pitch category, i.e. tones including “spelling” (F# ≠ Gb)\n *\n * Exact tone-height is measured in *mmel*, which is a floating-point number corresponding to MIDI note numbers.\n * Examples (at concert pitch 440 Hz): 0.0 = C-1 = 8.18 Hz, 69.0 = A4 = 440 Hz.\n *\n * Tone-height category is measured in *tcu* (Tone-height Category Units), which defaults to 12 per octave (semitones),\n * but that may be overridden per song or even locally in e.g. a specific voice, setting `tcuPerOctave` in `env`.\n * Note that tone-height category must be an integer. If higher resolution is needed, the pitch resolution should\n * be changed, globally or locally.\n *\n * **Note** that more than one of the pitch types can be simultaneously present in the same Pitch object.\n * For example, an imported MIDI file will only have tone-heights set, while structural pitch categories may\n * be added later by some analysis process.\n *\n * #### Additional data\n *\n * The tone-height and tonal representations can be complemented by a value for *pitch deviation* in cents.\n * This is stored in the property `pitchDeviation`.\n *\n * ## Coercing\n *\n * In places where a pitch is expected, the following inputs can be coerced to a pitch (using Pitch.coerce):\n *\n * * Strings of structural pitch categories in scientific notation (e.g. \"Ab4\" or \"C3\")\n * * Strings of frequencies (e.g. `\"440 Hz\"`), converted to *mmel*\n * * Strings of exact pitches in tcu (e.g. `\"69 mmel\"`)\n * * Strings of tone-height categories (e.g. `\"136 tcu\"`)\n * * Integers, interpreted as tone-height category in *tcu*\n * * Floating point numbers, interpreted as exact tone-height in *mmel*\n * * An {@link Interval} object, interpreted as relative to C0\n * * A list of a number and a string, which is interpreted as `[value, unit]`. Valid units are `Hz`, `mmel` and `tcu`.\n * * A list of two numbers, which is first coerced to an {@link Interval}\n *\n */\nexport default class Pitch extends Item {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots().concat(['mmel', 'tcu', 'coord', 'pitchDeviation']);\n  }\n\n  /**\n   * @ignore\n   */\n  inspect() {\n    // var repr = [];\n    // var color = chalk.green;\n    // if (this.coord) {\n    //   var text = color.bold(this.scientific());\n    //   if (this.pitchDeviation) {\n    //     text += color(' ' + (this.pitchDeviation > 0 ? '+' : '') + this.pitchDeviation + 'c');\n    //   }\n    //   repr.push(text);\n    // }\n    // if (this.tcu) {\n    //   repr.push(color.bold(this.tcu) + ' ' +\n    //   (this.env.get('tcuPerOctave') === defaults.tcuPerOctave ? color('tcu') : color('tcu[' + this.env.get('tcuPerOctave') + ']')));\n    // }\n    // if (this.mmel) { repr.push(color.bold(this.mmel.toFixed(2)) + ' ' + color('mmel')); }\n\n    // return color('<') + repr.join(', ') + color('>');\n  }\n\n  /**\n   * The octave of the pitch, according to Scientific Pitch Notation.\n   *\n   * *Note* that the reference pitch 0 mmel = 0 tcu = notecoord [0, 0],\n   * so Pitch.fromMIDI(0).octave() will return -1 rather than 0.\n   *\n   * *Note* that for structural pitch categories (coords), this is the\n   * \"nominal\" octave, i.e. the octave of `Cb5` is 5, even though it sounds like `B4`\n   * @return {number}\n   */\n  octave() {\n    if (this.coord) { return Math.floor(this.coord[0] / (this.env.get('stepsPerOctave') || defaults.stepsPerOctave)) - 1; }\n    if (isNumber(this.mmel)) { return Math.floor(this.mmel / 12) - 1; }\n    if (isNumber(this.tcu)) { return Math.floor(this.tcu / (this.env.get('tcuPerOctave') || defaults.tcuPerOctave)) - 1; }\n  }\n\n  /**\n   * The name of the pitch class, i.e. without accidentals and octave, 'A', 'B', 'C' etc.\n   * Currently only valid for 7 steps per octave (the normal case).\n   * @return {string}\n   */\n  name() {\n    let spo = this.env.get('stepsPerOctave') || defaults.stepsPerOctave;\n    if (spo % 7 !== 0) {\n      throw new Error('Cannot give a name for pitches when stepsPerOctave isn\\'t a multiple of 7');\n    }\n    let coord = this.toCoord();\n    if (!coord) {\n      throw new Error('Cannot give a name for undefined pitch');\n    }\n    return knowledge.tones[misc.mod(coord[0], spo) / (spo / 7)];\n  }\n\n  /**\n   * The numeric value of the pitch's accidental, in tcu units.\n   * For the normal case of 12 tcu per octave, this means # = 1, b = -1, bb = -2 etc.\n   * @return {number}\n   */\n  accidentalValue() {\n    let spo = this.env.get('stepsPerOctave') || defaults.stepsPerOctave;\n    let tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n    let coord = this.toCoord();\n    if (coord && spo % 7 === 0 && tpo % 12 === 0) {\n      let octave = Math.floor(coord[0] / spo); // Don't use this.octave(), as it returns the \"scientific\" octave\n      let name = knowledge.tones[misc.mod(coord[0], spo) / (spo / 7)];\n      return coord[1] - (octave * tpo + knowledge.pitches[name][1] * (tpo / 12));\n    }\n    return null;\n  }\n\n  /**\n   * A string representation of the accidenal.\n   * Only supported for 12 or 24 tcu per octave.\n   * Returns '!' for unknown accidentals.\n   * @return {string}\n   */\n  accidental() {\n    let accVal = this.accidentalValue();\n    if (!accVal) return ''; // Both for 0 and null\n    let tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n    if (tpo === 12) {\n      return knowledge.quarterToneAccidentals[accVal * 2 + 4] || '!';\n    } else if (tpo % 24 === 0) {\n      accVal /= (tpo / 24);\n      return knowledge.quarterToneAccidentals[accVal + 4] || '!';\n    } else {\n      return '!';\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  fifths() {\n    let spo = this.env.get('stepsPerOctave') || defaults.stepsPerOctave;\n    if (spo % 7 !== 0) {\n      throw new Error('Cannot get fifths for pitches when stepsPerOctave isn\\'t a multiple of 7');\n    }\n    let coord = this.toCoord();\n    if (!coord) {\n      throw new Error('Cannot get fifths for an undefined pitch');\n    }\n    let fifths = [0, 2, 4, -1, 1, 3, 5][misc.mod(coord[0], spo) / (spo / 7)];\n    let accVal = this.accidentalValue();\n    if (accVal % 1 !== 0) {\n      throw new Error('Cannot get fifths value for non-semitone pitch');\n    }\n    return fifths + accVal * 7;\n  }\n\n  /**\n   * Returns the piano key number of the pitch\n   * @param {boolean} [white] Count white keys only\n   * @return {number}\n   */\n  pianoKey(white) {\n    if (white) {\n      return this.coord[0] - 4; // TODO: fix\n    } else {\n      return this.toMIDI() - 8;\n    }\n  }\n\n  /**\n  * Returns an integer ranging from 0-127 representing a MIDI pitch value\n  * @return {number}\n  */\n  toMIDI() {\n    let tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n    if (isNumber(this.tcu)) { return Math.round(this.tcu / (tpo / 12)); }\n    if (this.coord) { return Math.round(this.coord[1] / (tpo / 12)); }\n    if (isNumber(this.mmel)) { return Math.round(this.mmel); }\n  }\n\n  /**\n   * Calculates and returns the frequency of the pitch.\n   * @param {number} [concertPitch=440]\n   * @return {number}\n   */\n  toFrequency(concertPitch = 440) {\n    if (this.mmel) {\n      return concertPitch * Math.pow(2, (this.mmel - knowledge.A4[1]) / 12);\n    }\n    var tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n    if (isNumber(this.tcu)) {\n      return concertPitch * Math.pow(2, ((this.tcu / (tpo / 12)) - knowledge.A4[1]) / tpo);\n    }\n\n    if (this.coord) {\n      return concertPitch * Math.pow(2, ((this.coord[1] / (tpo / 12)) - knowledge.A4[1]) / tpo);\n    }\n  }\n\n  /**\n   * The pitch class index (chroma) of the pitch\n   * @return {number}\n   */\n  chroma() {\n    let tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n    if (this.coord) { return ((this.coord[1] % tpo) + tpo) % tpo; }  // works with negatvive numbers\n    if (this.tcu) { return ((this.tcu % tpo) + tpo) % tpo; }\n    return ((this.toTcu() % tpo) + tpo) % tpo;\n  }\n\n  /**\n   * Get the pitch as a *mmel* value.\n   * @return {number}\n   */\n  toMmel() {\n    if (isNumber(this.mmel)) { return this.mmel; }\n    let tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n    if (isNumber(this.tcu)) { return this.tcu / (tpo / 12); }\n    if (this.coord) { return this.coord[1] / (tpo / 12); }\n  }\n\n  /**\n   * Get the pitch as a *tcu* value.\n   * @return {number}\n   */\n  toTcu() {\n    if (isNumber(this.tcu)) { return this.tcu; }\n    let tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n    if (isNumber(this.mmel)) { return Math.round(this.mmel * (tpo / 12)); }\n    if (this.coord) { return this.coord[1]; }\n  }\n\n  /**\n   * Get the pitch as a *coord* value.\n   * @return {number}\n   */\n  toCoord() {\n    if (this.coord) { return this.coord; }\n    var tcu = this.toTcu();\n    if (isNumber(tcu)) {\n      let tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n      let spo = this.env.get('stepsPerOctave') || defaults.stepsPerOctave;\n      var steps = Math.round(tcu / (tpo / spo)); // TODO: better algorithm\n      return [steps, tcu];\n    }\n  }\n\n  /**\n   * ? Transpose the pitch by an interval. Returns a new Pitch value, the current object is not changed.\n   * ? The parameter can be anything that can be coerced to an {@link Interval}.\n   * @todo What exactly does this function do??\n   * @param interval\n   * @return {Pitch}\n   */\n  interval(interval) {\n    if (isString(interval)) { interval = Interval.fromString(interval); }\n\n    if (interval instanceof Interval) {\n      return new Pitch({coord: vector.add(this.coord, interval.coord)});\n    } else if (interval instanceof Pitch) {\n      return new Interval({coord: vector.sub(interval.coord, this.coord)}); // ?\n    }\n  }\n\n  /**\n   * Destructively transpose the pitch by a given qualified interval.\n   * @param {Interval} interval\n   * @return {Pitch}\n   *\n   * @todo\n   * Currently only supports structural pitch categories\n   */\n  transpose(interval) {\n    this.coord = vector.add(this.coord, interval.coord);\n    return this;\n  }\n\n  /**\n   * Destructively transpose the pitch by a given interval, following the given key.\n   * @param interval (integer or Interval object)\n   * @param {Key} [key]\n   * @return {Pitch}\n   *\n   * @todo\n   * Move to some better place and refactor!\n   * Don't assume 7/12\n   */\n  diatonicTranspose(interval, key) {\n    let steps = interval instanceof Interval ? interval.coord[0] : interval;\n\n    if (!key) {\n      var song = this.env.get('song');\n      key = song.findMeta('Key');\n    }\n\n    if (!key) throw new Error('No key given explicitly or in env');\n    let thisStep = Interval.between(key.root, this);\n    let stepsFromRoot = steps + thisStep.coord[0];\n    let newPitch = key.step(stepsFromRoot);\n    if (this.coord) this.coord = newPitch.coord; // Ugly!\n    if (this.tcu) this.tcu = newPitch.toTcu();\n    return this;\n  }\n\n  /**\n   * Returns the Helmholtz notation form of the pitch (`C,,`, `d'`, `F#` `g#''` etc.)\n   * @return {string}\n   */\n  helmholtz() {\n    var octave = this.octave();\n    var name = this.name();\n    name = octave < 3 ? name.toUpperCase() : name.toLowerCase();\n    var padchar = octave < 3 ? ',' : '\\'';\n    var padcount = octave < 2 ? 2 - octave : octave - 3;\n\n    return pad(name + this.accidental(), padchar, padcount);\n  }\n\n  /**\n   * Returns the scientific notation form of the pitch (`E4`, `Bb3`, `C#7` etc.)\n   * @return {string}\n   */\n  scientific() {\n    return this.name().toUpperCase() + this.accidental() + this.octave();\n  }\n\n  // /**\n  //  * Returns pitches that are enharmonic with this pitch.\n  //  */\n  // enharmonics(oneaccidental) {\n  //   var key = this.key(), limit = oneaccidental ? 2 : 3;\n  //\n  //   return ['m3', 'm2', 'm-2', 'm-3']\n  //     .map(this.interval.bind(this))\n  //     .filter(function(pitch) {\n  //     var acc = pitch.accidentalValue();\n  //     var diff = key - (pitch.key() - acc);\n  //\n  //     if (diff < limit && diff > -limit) {\n  //       pitch.coord = vector.add(pitch.coord, vector.mul(knowledge.sharp, diff - acc));\n  //       return true;\n  //     }\n  //   });\n  // },\n  //\n  // solfege(scale, showOctaves) {\n  //   var interval = scale.tonic.interval(this), solfege, stroke, count;\n  //   if (interval.direction() === 'down')\n  //     interval = interval.invert();\n  //\n  //   if (showOctaves) {\n  //     count = (this.key(true) - scale.tonic.key(true)) / 7;\n  //     count = (count >= 0) ? Math.floor(count) : -(Math.ceil(-count));\n  //     stroke = (count >= 0) ? '\\'' : ',';\n  //   }\n  //\n  //   solfege = knowledge.intervalSolfege[interval.simple(true).toString()];\n  //   return (showOctaves) ? pad(solfege, stroke, Math.abs(count)) : solfege;\n  // },\n  //\n  // scaleDegree(scale) {\n  //   var inter = scale.tonic.interval(this);\n  //\n  //   // If the direction is down, or we're dealing with an octave - invert it\n  //   if (inter.direction() === 'down' ||\n  //      (inter.coord[1] === 0 && inter.coord[0] !== 0)) {\n  //     inter = inter.invert();\n  //   }\n  //\n  //   inter = inter.simple(true).coord;\n  //\n  //   return scale.scale.reduce(function(index, current, i) {\n  //     var coord = Interval.fromString(current).coord;\n  //     return coord[0] === inter[0] && coord[1] === inter[1] ? i + 1 : index;\n  //   }, 0);\n  // }\n\n  /**\n   * Returns a string representation of the pitch.\n   * @return {string}\n   *\n   * **NOTE:** This is currently *not* the inverse of {@link Pitch.fromString}, it is just for\n   * creating a human-readable string.\n   */\n  toString() {\n    var repr = [];\n    if (this.coord) {\n      var text = this.scientific();\n      if (this.pitchDeviation) {\n        text += ' ' + (this.pitchDeviation > 0 ? '+' : '') + this.pitchDeviation + 'c';\n      }\n      repr.push(text);\n    }\n    if (this.tcu) {\n      let tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n      repr.push(this.tcu + ' ' +\n      (tpo === defaults.tcuPerOctave ? 'tcu' : 'tcu[' + this.env.get('tcuPerOctave') + ']'));\n    }\n\n    if (this.mmel) { repr.push(this.mmel.toFixed(2) + ' ' + 'mmel'); }\n\n    return '<' + repr.join(', ') + '>';\n  }\n\n  /**\n   * Returns a string representation of the pitch suitable for display\n   * as a chord root, i.e. with an uppercase tone name and no octave.\n   * Example: \"Bb\", \"C\", \"D#\"\n   * @return {string}\n   */\n  toTonic() {\n    return this.name().toUpperCase() + this.accidental();\n  }\n\n  /**\n    * @ignore\n    */\n  toJSON() {\n    // Only mmel\n    if (isNumber(this.mmel) && !this.coord && !isNumber(this.tcu)) {\n      return [this.mmel, 'mmel'];\n    }\n    // Only tcu\n    if (isNumber(this.tcu) && !this.coord && !isNumber(this.mmel)) {\n      return this.tcu;\n    }\n    // Only coord\n    if (this.coord && !isNumber(this.tcu) && !isNumber(this.mmel) && !this.pitchDeviation) {\n      if (this.env.get('stepsPerOctave') === 7 &&\n        (this.env.get('tcuPerOctave') === 12 || this.env.get('tcuPerOctave') % 24 === 0) &&\n        this.coord[1] % 1 === 0 && this.accidental() !== '!') {\n        return this.scientific();\n      } else {\n        return this.coord;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @ignore\n   */\n  toXML(rootName) {\n    return misc.buildXML(this.toXMLObject(), {rootName: rootName || 'pitch'});\n  }\n\n  /**\n   * @ignore\n   */\n  toXMLObject() {\n    return { step: this.name().toUpperCase(), alter: this.accidentalValue(), octave: this.octave() };\n  }\n\n  /**\n   * @ignore\n   */\n  toVexFlow() {\n    return this.name() + '/' + this.octave();\n  }\n\n  vexFlowAccidental() {\n    if (this.coord) {\n      var accVal = this.accidentalValue();\n      if (accVal === undefined) return undefined;\n      let tpo = this.env.get('tcuPerOctave') || defaults.tcuPerOctave;\n      if (tpo === 12) {\n        return knowledge.vexFlowAccidentals[accVal * 2 + 4] || '!';\n      } else if (tpo % 24 === 0) {\n        accVal /= (tpo / 24);\n        return knowledge.vexFlowAccidentals[accVal + 4] || '?';\n      } else {\n        return 'r';\n      }\n    }\n    return 'u';\n  }\n\n  /**\n   * @ignore\n   */\n  doValidate() {\n    var validator = super.doValidate();\n    return validator;\n  }\n}\n\nPitch.coerce = function(source, parent, copy) {\n  if (source instanceof Pitch) {\n    if (copy || (source.parent !== parent)) return new Pitch(source, parent);\n    else return source;\n  }\n  if (isString(source)) { return Pitch.fromString(source, parent); }\n  if (source instanceof Array && source.length === 2 && isString(source[1])) {\n    return Pitch.fromUnit(source[0], source[1], parent);\n  }\n  if (source instanceof Array && source.length === 2 && isNumber(source[1])) {\n    return new Pitch({coord: source}, parent);\n  }\n  if (isNumber(source)) { return new Pitch({tcu: source}, parent); }\n  if (isObject(source) && (isNumber(source.mmel) || isNumber(source.tcu) || source.coord)) {\n    return new Pitch(source, parent);\n  }\n\n  throw new Error('Cannot coerce ' + source + ' to a pitch!');\n};\n\nPitch.fromString = function(name, parent) {\n  if (name && name.replace) name = name.replace('♭', 'b').replace('𝄫', 'bb').replace('♯', '#').replace('𝄪', 'x').replace('##', 'x');\n  var match = name.match(/^(\\d+(?:\\.\\d+)?)\\s*([a-zA-Z]+)$/);\n  if (match) { return Pitch.fromUnit(match[1], match[2]); }\n  var coord = scientific(name);\n  if (!coord) { coord = helmholtz(name); }\n  if (!coord) { throw new Error('Cannot coerce ' + name + ' to a pitch!'); }\n  // Hackish: since we use C-1 as reference point, adjust by one octave\n  coord[0] += 7;\n  coord[1] += 12;\n\n  var spo = (parent ? parent.env.get('stepsPerOctave') : null) || defaults.stepsPerOctave;\n  var tpo = (parent ? parent.env.get('tcuPerOctave') : null) || defaults.tcuPerOctave;\n  if (spo % 7 === 0 && tpo % 12 === 0) {\n    coord[0] *= (spo / 7);\n    coord[1] *= (tpo / 12);\n    return new Pitch({coord: coord}, parent);\n  }\n  throw new Error('Cannot use fromString unless tcuPerOctave is a multiple of 12 and stepsPerOctave is a multiple of 7');\n};\n\nPitch.fromUnit = function(value, unit, parent) {\n  switch (unit) {\n    case 'Hz': return Pitch.fromFrequency(value, parent);\n    case 'mmel': return new Pitch({mmel: parseFloat(value)}, parent);\n    case 'tcu': return new Pitch({tcu: parseInt(value)}, parent);\n    case 'MIDI': return Pitch.fromMIDI(value, parent);\n    default: throw new Error('Invalid pitch unit: ' + unit);\n  }\n};\n\n// Pitch.fromKey = function(key) {\n//   var semitones = key - knowledge.A4[1] + 8;\n//   var steps = Math.round(semitones * 7/12)\n//   return new Pitch([steps, semitones]);\n// }\n\nPitch.fromFrequency = function(fq, parent) {\n  var concertPitch = (parent ? parent.env.get('concertPitch') : null) || 440;\n  var key = knowledge.A4[1] + (12 * ((Math.log(fq) - Math.log(concertPitch)) / Math.log(2)));\n  // key = Math.round(key);\n  // originalFq = concertPitch * Math.pow(2, (key - 49) / 12);\n  // cents = 1200 * (Math.log(fq / originalFq) / Math.log(2));\n\n  return new Pitch({mmel: key}, parent); // , pitchDeviation: cents};\n};\n\nPitch.fromMIDI = function(pitch, parent) {\n  var tpo = (parent ? parent.env.get('tcuPerOctave') : null) || defaults.tcuPerOctave;\n  if (tpo % 12 === 0) {\n    return new Pitch({tcu: pitch * (tpo / 12)}, parent);\n  }\n\n  throw new Error('Cannot use fromMIDI unless tcuPerOctave is a multiple of 12');\n};\n\nPitch.fromXML = function(xml, parent) {\n  var obj = misc.parseXML(xml, {explicitArray: false, mergeAttrs: true, explicitCharkey: false}, parent);\n  return Pitch.fromXMLObject(obj, parent);\n};\n\nPitch.fromXMLObject = function(obj, parent) {\n  var coord = notecoord.notes[obj.step.toLowerCase()].slice();\n  coord[1] += parseInt(obj.alter) || 0;\n  var octave = parseInt(obj.octave);\n  coord = vector.add(coord, octave.octaves); // TODO: verify that this is the correct octave!\n  return new Pitch({coord: coord}, parent);\n};\n\nPitch.itemType = 'Pitch';\n\nimport ItemHandler from '../item-handler.js';\nItemHandler.registerItem(Pitch);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/pitch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 440,
    "kind": "variable",
    "name": "isNumber",
    "memberof": "lib/classes/pitch.js",
    "static": true,
    "longname": "lib/classes/pitch.js~isNumber",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 441,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/pitch.js",
    "static": true,
    "longname": "lib/classes/pitch.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 442,
    "kind": "variable",
    "name": "isString",
    "memberof": "lib/classes/pitch.js",
    "static": true,
    "longname": "lib/classes/pitch.js~isString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 443,
    "kind": "function",
    "name": "pad",
    "memberof": "lib/classes/pitch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/pitch.js~pad",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      },
      {
        "name": "ch",
        "types": [
          "*"
        ]
      },
      {
        "name": "len",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 444,
    "kind": "class",
    "name": "Pitch",
    "memberof": "lib/classes/pitch.js",
    "static": true,
    "longname": "lib/classes/pitch.js~Pitch",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": "Pitch",
    "description": "Pitch representation.\n\nThree types of pitches are supported:\n\n* Exact tone-height (in *mmel* units, see below)\n* Tone-height category (in *tcu* above C0)\n* Structural pitch category, i.e. tones including “spelling” (F# ≠ Gb)\n\nExact tone-height is measured in *mmel*, which is a floating-point number corresponding to MIDI note numbers.\nExamples (at concert pitch 440 Hz): 0.0 = C-1 = 8.18 Hz, 69.0 = A4 = 440 Hz.\n\nTone-height category is measured in *tcu* (Tone-height Category Units), which defaults to 12 per octave (semitones),\nbut that may be overridden per song or even locally in e.g. a specific voice, setting `tcuPerOctave` in `env`.\nNote that tone-height category must be an integer. If higher resolution is needed, the pitch resolution should\nbe changed, globally or locally.\n\n**Note** that more than one of the pitch types can be simultaneously present in the same Pitch object.\nFor example, an imported MIDI file will only have tone-heights set, while structural pitch categories may\nbe added later by some analysis process.\n\n#### Additional data\n\nThe tone-height and tonal representations can be complemented by a value for *pitch deviation* in cents.\nThis is stored in the property `pitchDeviation`.\n\n## Coercing\n\nIn places where a pitch is expected, the following inputs can be coerced to a pitch (using Pitch.coerce):\n\n* Strings of structural pitch categories in scientific notation (e.g. \"Ab4\" or \"C3\")\n* Strings of frequencies (e.g. `\"440 Hz\"`), converted to *mmel*\n* Strings of exact pitches in tcu (e.g. `\"69 mmel\"`)\n* Strings of tone-height categories (e.g. `\"136 tcu\"`)\n* Integers, interpreted as tone-height category in *tcu*\n* Floating point numbers, interpreted as exact tone-height in *mmel*\n* An {@link Interval} object, interpreted as relative to C0\n* A list of a number and a string, which is interpreted as `[value, unit]`. Valid units are `Hz`, `mmel` and `tcu`.\n* A list of two numbers, which is first coerced to an {@link Interval}",
    "lineNumber": 66,
    "interface": false,
    "extends": [
      "lib/classes/item.js~Item"
    ]
  },
  {
    "__docId__": 445,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/pitch.js~Pitch.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 446,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#inspect",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 447,
    "kind": "method",
    "name": "octave",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#octave",
    "access": "public",
    "description": "The octave of the pitch, according to Scientific Pitch Notation.\n\n*Note* that the reference pitch 0 mmel = 0 tcu = notecoord [0, 0],\nso Pitch.fromMIDI(0).octave() will return -1 rather than 0.\n\n*Note* that for structural pitch categories (coords), this is the\n\"nominal\" octave, i.e. the octave of `Cb5` is 5, even though it sounds like `B4`",
    "lineNumber": 106,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 448,
    "kind": "method",
    "name": "name",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#name",
    "access": "public",
    "description": "The name of the pitch class, i.e. without accidentals and octave, 'A', 'B', 'C' etc.\nCurrently only valid for 7 steps per octave (the normal case).",
    "lineNumber": 117,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 449,
    "kind": "method",
    "name": "accidentalValue",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#accidentalValue",
    "access": "public",
    "description": "The numeric value of the pitch's accidental, in tcu units.\nFor the normal case of 12 tcu per octave, this means # = 1, b = -1, bb = -2 etc.",
    "lineNumber": 134,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 450,
    "kind": "method",
    "name": "accidental",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#accidental",
    "access": "public",
    "description": "A string representation of the accidenal.\nOnly supported for 12 or 24 tcu per octave.\nReturns '!' for unknown accidentals.",
    "lineNumber": 152,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 451,
    "kind": "method",
    "name": "fifths",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#fifths",
    "access": "public",
    "description": "",
    "lineNumber": 169,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 452,
    "kind": "method",
    "name": "pianoKey",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#pianoKey",
    "access": "public",
    "description": "Returns the piano key number of the pitch",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "white",
        "description": "Count white keys only"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 453,
    "kind": "method",
    "name": "toMIDI",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toMIDI",
    "access": "public",
    "description": "Returns an integer ranging from 0-127 representing a MIDI pitch value",
    "lineNumber": 203,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 454,
    "kind": "method",
    "name": "toFrequency",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toFrequency",
    "access": "public",
    "description": "Calculates and returns the frequency of the pitch.",
    "lineNumber": 215,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "440",
        "defaultRaw": 440,
        "name": "concertPitch",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 455,
    "kind": "method",
    "name": "chroma",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#chroma",
    "access": "public",
    "description": "The pitch class index (chroma) of the pitch",
    "lineNumber": 233,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 456,
    "kind": "method",
    "name": "toMmel",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toMmel",
    "access": "public",
    "description": "Get the pitch as a *mmel* value.",
    "lineNumber": 244,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 457,
    "kind": "method",
    "name": "toTcu",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toTcu",
    "access": "public",
    "description": "Get the pitch as a *tcu* value.",
    "lineNumber": 255,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 458,
    "kind": "method",
    "name": "toCoord",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toCoord",
    "access": "public",
    "description": "Get the pitch as a *coord* value.",
    "lineNumber": 266,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 459,
    "kind": "method",
    "name": "interval",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#interval",
    "access": "public",
    "description": "? Transpose the pitch by an interval. Returns a new Pitch value, the current object is not changed.\n? The parameter can be anything that can be coerced to an {@link Interval}.",
    "lineNumber": 284,
    "todo": [
      "What exactly does this function do??"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pitch"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 460,
    "kind": "method",
    "name": "transpose",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#transpose",
    "access": "public",
    "description": "Destructively transpose the pitch by a given qualified interval.",
    "lineNumber": 302,
    "todo": [
      "Currently only supports structural pitch categories"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Interval"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pitch"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 461,
    "kind": "member",
    "name": "coord",
    "memberof": "lib/classes/pitch.js~Pitch",
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#coord",
    "access": "public",
    "description": null,
    "lineNumber": 303,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 462,
    "kind": "method",
    "name": "diatonicTranspose",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#diatonicTranspose",
    "access": "public",
    "description": "Destructively transpose the pitch by a given interval, following the given key.",
    "lineNumber": 317,
    "todo": [
      "Move to some better place and refactor!\nDon't assume 7/12"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": "(integer or Interval object)"
      },
      {
        "nullable": null,
        "types": [
          "Key"
        ],
        "spread": false,
        "optional": true,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pitch"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 464,
    "kind": "member",
    "name": "tcu",
    "memberof": "lib/classes/pitch.js~Pitch",
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#tcu",
    "access": "public",
    "description": null,
    "lineNumber": 330,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "method",
    "name": "helmholtz",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#helmholtz",
    "access": "public",
    "description": "Returns the Helmholtz notation form of the pitch (`C,,`, `d'`, `F#` `g#''` etc.)",
    "lineNumber": 338,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 466,
    "kind": "method",
    "name": "scientific",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#scientific",
    "access": "public",
    "description": "Returns the scientific notation form of the pitch (`E4`, `Bb3`, `C#7` etc.)",
    "lineNumber": 352,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 467,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toString",
    "access": "public",
    "description": "Returns a string representation of the pitch.",
    "lineNumber": 414,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "**NOTE:** This is currently *not* the inverse of {@link Pitch.fromString}, it is just for\ncreating a human-readable string."
    },
    "params": []
  },
  {
    "__docId__": 468,
    "kind": "method",
    "name": "toTonic",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toTonic",
    "access": "public",
    "description": "Returns a string representation of the pitch suitable for display\nas a chord root, i.e. with an uppercase tone name and no octave.\nExample: \"Bb\", \"C\", \"D#\"",
    "lineNumber": 440,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 469,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toJSON",
    "access": "public",
    "description": "",
    "lineNumber": 447,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 470,
    "kind": "method",
    "name": "toXML",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toXML",
    "access": "public",
    "description": "",
    "lineNumber": 473,
    "ignore": true,
    "params": [
      {
        "name": "rootName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 471,
    "kind": "method",
    "name": "toXMLObject",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toXMLObject",
    "access": "public",
    "description": "",
    "lineNumber": 480,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "{\"step\": *, \"alter\": *, \"octave\": *}"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "method",
    "name": "toVexFlow",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#toVexFlow",
    "access": "public",
    "description": "",
    "lineNumber": 487,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 473,
    "kind": "method",
    "name": "vexFlowAccidental",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#vexFlowAccidental",
    "access": "public",
    "description": null,
    "lineNumber": 491,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 474,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/pitch.js~Pitch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/pitch.js~Pitch#doValidate",
    "access": "public",
    "description": "",
    "lineNumber": 511,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 475,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/pitch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/pitch.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 517,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 476,
    "kind": "function",
    "name": "fromString",
    "memberof": "lib/classes/pitch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/pitch.js~fromString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 537,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 477,
    "kind": "function",
    "name": "fromUnit",
    "memberof": "lib/classes/pitch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/pitch.js~fromUnit",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 558,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "unit",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 478,
    "kind": "function",
    "name": "fromFrequency",
    "memberof": "lib/classes/pitch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/pitch.js~fromFrequency",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 574,
    "undocument": true,
    "params": [
      {
        "name": "fq",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 479,
    "kind": "function",
    "name": "fromMIDI",
    "memberof": "lib/classes/pitch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/pitch.js~fromMIDI",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 584,
    "undocument": true,
    "params": [
      {
        "name": "pitch",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 480,
    "kind": "function",
    "name": "fromXML",
    "memberof": "lib/classes/pitch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/pitch.js~fromXML",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 593,
    "undocument": true,
    "params": [
      {
        "name": "xml",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 481,
    "kind": "function",
    "name": "fromXMLObject",
    "memberof": "lib/classes/pitch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/pitch.js~fromXMLObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/pitch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 598,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 482,
    "kind": "file",
    "name": "lib/classes/syllable.js",
    "content": "\nimport Item from './item.js';\nimport misc from '../misc.js';\n// import chalk from 'chalk.js';\nimport _ from 'underscore';\nvar isObject = _.isObject;\nvar isString = _.isString;\n\nexport default class Syllable extends Item {\n  /**\n   * @ignore\n   */\n  static getSlots() {\n    return super.getSlots().concat(['text', 'hyphen', 'extender']);\n  }\n\n  /**\n   * @ignore\n   */\n  init() {\n    super.init();\n\n    /** @type {string} */\n    this.text = this.text || '';\n    /** @type {boolean} */\n    this.hyphen = this.hyphen || false;\n    /** @type {boolean} */\n    this.extender = this.extender || false;\n    return this;\n  }\n\n  /**\n   * @ignore\n   */\n  toString() {\n    let text = this.text;\n    if (this.hyphen) text += '-';\n    return 'Syllable: ' + text;\n  }\n\n  /**\n   * @ignore\n   */\n  toXML(rootName) {\n    return misc.buildXML(this.toXMLObject(), {rootName: rootName || 'syllable'});\n  }\n\n  /**\n   * @ignore\n   */\n  toXMLObject() {\n    let obj = {text: this.text};\n    if (this.hyphen) obj.hyphen = this.hyphen;\n    if (this.extender) obj.extender = this.extender;\n    return obj;\n  }\n\n  /**\n   * @ignore\n   */\n  doValidate() {\n    var validator = super.doValidate();\n    // validator.isString(this, 'text')\n    validator.isBoolean(this, 'hyphen');\n    validator.isBoolean(this, 'extender');\n    return validator;\n  }\n\n  /**\n  * @ignore\n  */\n  toJSON() {\n    var obj = super.toJSON();\n    if (!obj.hyphen) delete obj.hyphen;\n    if (!obj.extender) delete obj.extender;\n    return obj;\n  }\n}\n\nSyllable.fromString = function(text, parent) {\n  let hyphen = false;\n  if (text.substr(-1) === '-') {\n    text = text.slice(0, -1);\n    hyphen = true;\n  }\n  return new Syllable({text: text, hyphen: hyphen}, parent);\n};\n\nSyllable.coerce = function(source, parent, copy) {\n  if (source instanceof Syllable) {\n    if (copy) {\n      return new Syllable(source, parent);\n    } else {\n      return source;\n    }\n  }\n  if (isString(source)) {\n    return Syllable.fromString(source, parent);\n  }\n  if (isObject(source)) { return new Syllable(source, parent); }\n  throw new Error('Cannot coerce ' + source + ' to a syllable!');\n};\n\nSyllable.itemType = 'Syllable';\n\nimport ItemHandler from '../item-handler.js';\nItemHandler.registerItem(Syllable);\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/classes/syllable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 483,
    "kind": "variable",
    "name": "isObject",
    "memberof": "lib/classes/syllable.js",
    "static": true,
    "longname": "lib/classes/syllable.js~isObject",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/syllable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 484,
    "kind": "variable",
    "name": "isString",
    "memberof": "lib/classes/syllable.js",
    "static": true,
    "longname": "lib/classes/syllable.js~isString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/syllable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 485,
    "kind": "class",
    "name": "Syllable",
    "memberof": "lib/classes/syllable.js",
    "static": true,
    "longname": "lib/classes/syllable.js~Syllable",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/classes/syllable.js",
    "importStyle": "Syllable",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/classes/item.js~Item"
    ]
  },
  {
    "__docId__": 486,
    "kind": "method",
    "name": "getSlots",
    "memberof": "lib/classes/syllable.js~Syllable",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/syllable.js~Syllable.getSlots",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 487,
    "kind": "method",
    "name": "init",
    "memberof": "lib/classes/syllable.js~Syllable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/syllable.js~Syllable#init",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 488,
    "kind": "member",
    "name": "text",
    "memberof": "lib/classes/syllable.js~Syllable",
    "static": false,
    "longname": "lib/classes/syllable.js~Syllable#text",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 489,
    "kind": "member",
    "name": "hyphen",
    "memberof": "lib/classes/syllable.js~Syllable",
    "static": false,
    "longname": "lib/classes/syllable.js~Syllable#hyphen",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 490,
    "kind": "member",
    "name": "extender",
    "memberof": "lib/classes/syllable.js~Syllable",
    "static": false,
    "longname": "lib/classes/syllable.js~Syllable#extender",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 491,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/classes/syllable.js~Syllable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/syllable.js~Syllable#toString",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "method",
    "name": "toXML",
    "memberof": "lib/classes/syllable.js~Syllable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/syllable.js~Syllable#toXML",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "ignore": true,
    "params": [
      {
        "name": "rootName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 493,
    "kind": "method",
    "name": "toXMLObject",
    "memberof": "lib/classes/syllable.js~Syllable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/syllable.js~Syllable#toXMLObject",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 494,
    "kind": "method",
    "name": "doValidate",
    "memberof": "lib/classes/syllable.js~Syllable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/syllable.js~Syllable#doValidate",
    "access": "public",
    "description": "",
    "lineNumber": 61,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 495,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/classes/syllable.js~Syllable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/classes/syllable.js~Syllable#toJSON",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 496,
    "kind": "function",
    "name": "fromString",
    "memberof": "lib/classes/syllable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/syllable.js~fromString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/syllable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 497,
    "kind": "function",
    "name": "coerce",
    "memberof": "lib/classes/syllable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/classes/syllable.js~coerce",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/classes/syllable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "copy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 498,
    "kind": "file",
    "name": "lib/defaults.js",
    "content": "\nexport default {\n  stepsPerOctave: 7,\n  tcuPerOctave: 12\n};\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/defaults.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 499,
    "kind": "file",
    "name": "lib/env.js",
    "content": "\nimport _ from 'underscore';\n\n/** @ignore */\nexport default class Env {\n  constructor(defaultValues, parent) {\n    this.setParent(parent);\n    this._values = _.extend({}, defaultValues);\n  }\n\n  getParent() {\n    return this._parentEnv;\n  }\n\n  setParent(parent) {\n    if (parent && !(parent instanceof Env)) {\n      throw new Error('Parent env must be an instance of the Env class');\n    }\n    this._parentEnv = parent;\n  }\n\n  getValues() {\n    return this._values;\n  }\n\n  getAllValues() {\n    var p = this.getParent();\n\n    if (p) {\n      return _.extend({}, this.getValues(), p.getAllValues());\n    } else {\n      return _.extend({}, this.getValues());\n    }\n  }\n\n  get(name) {\n    if (this.getValues()[name] !== undefined) {\n      return this.getValues()[name];\n    } else if (this.getParent()) {\n      return this.getParent().get(name);\n    }\n  }\n\n  set(name, value) {\n    this._values[name] = value;\n  }\n\n  toJSON() {\n    return _.mapObject(this._values, (value) => {\n      if (_.isObject(value) && value.toJSON) {\n        return value.toJSON();\n      } else {\n        return value;\n      }\n    });\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/env.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 500,
    "kind": "class",
    "name": "Env",
    "memberof": "lib/env.js",
    "static": true,
    "longname": "lib/env.js~Env",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/env.js",
    "importStyle": "Env",
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 501,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/env.js~Env",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/env.js~Env#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 502,
    "kind": "member",
    "name": "_values",
    "memberof": "lib/env.js~Env",
    "static": false,
    "longname": "lib/env.js~Env#_values",
    "access": "private",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 503,
    "kind": "method",
    "name": "getParent",
    "memberof": "lib/env.js~Env",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/env.js~Env#getParent",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 504,
    "kind": "method",
    "name": "setParent",
    "memberof": "lib/env.js~Env",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/env.js~Env#setParent",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 505,
    "kind": "member",
    "name": "_parentEnv",
    "memberof": "lib/env.js~Env",
    "static": false,
    "longname": "lib/env.js~Env#_parentEnv",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 506,
    "kind": "method",
    "name": "getValues",
    "memberof": "lib/env.js~Env",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/env.js~Env#getValues",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 507,
    "kind": "method",
    "name": "getAllValues",
    "memberof": "lib/env.js~Env",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/env.js~Env#getAllValues",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 508,
    "kind": "method",
    "name": "get",
    "memberof": "lib/env.js~Env",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/env.js~Env#get",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 509,
    "kind": "method",
    "name": "set",
    "memberof": "lib/env.js~Env",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/env.js~Env#set",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 510,
    "kind": "method",
    "name": "toJSON",
    "memberof": "lib/env.js~Env",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/env.js~Env#toJSON",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 511,
    "kind": "file",
    "name": "lib/item-handler.js",
    "content": "\nvar items = {};\n\n/** @ignore */\nexport function registerItem(Item) {\n  var name = Item.itemType;\n\n  if (!name) {\n    throw new Error('Item to register must have an itemType value on the constructor.');\n  } else if (items[name]) {\n    throw new Error('\"' + name + '\" is already a registered item name.');\n  }\n\n  items[name] = Item;\n}\n\n/** @ignore */\nexport function getConstructor(name) {\n  var C = items[name];\n\n  if (!C) {\n    throw new Error('\"' + name + '\" isn\\'t a registered item type');\n  }\n\n  return C;\n}\n\n/** @ignore */\nexport function createItem(name, properties, parent) {\n  var C = getConstructor(name);\n  return new C(properties, parent);\n}\n\nexport default { registerItem, getConstructor, createItem };\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/item-handler.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 512,
    "kind": "variable",
    "name": "items",
    "memberof": "lib/item-handler.js",
    "static": true,
    "longname": "lib/item-handler.js~items",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/item-handler.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 513,
    "kind": "function",
    "name": "registerItem",
    "memberof": "lib/item-handler.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/item-handler.js~registerItem",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/item-handler.js",
    "importStyle": "{registerItem}",
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "params": [
      {
        "name": "Item",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 514,
    "kind": "function",
    "name": "getConstructor",
    "memberof": "lib/item-handler.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/item-handler.js~getConstructor",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/item-handler.js",
    "importStyle": "{getConstructor}",
    "description": null,
    "lineNumber": 18,
    "ignore": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 515,
    "kind": "function",
    "name": "createItem",
    "memberof": "lib/item-handler.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/item-handler.js~createItem",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/item-handler.js",
    "importStyle": "{createItem}",
    "description": null,
    "lineNumber": 29,
    "ignore": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "properties",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 516,
    "kind": "file",
    "name": "lib/knowledge.js",
    "content": "\nimport notecoord from 'notecoord';\n\n// Pitch coordinates [octave, fifth] relative to C\nexport default {\n  pitches: notecoord.notes,\n\n  intervals: {\n    unison: [0, 0],\n    second: [1, 1],\n    third: [2, 3],\n    fourth: [3, 5],\n    fifth: [4, 7],\n    sixth: [5, 8],\n    seventh: [6, 10],\n    octave: [7, 12]\n  },\n\n  intervalFromFifth: ['second', 'sixth', 'third', 'seventh', 'fourth',\n                         'unison', 'fifth'],\n\n  intervalsIndex: ['unison', 'second', 'third', 'fourth', 'fifth',\n                      'sixth', 'seventh', 'octave', 'ninth', 'tenth',\n                      'eleventh', 'twelfth', 'thirteenth', 'fourteenth',\n                      'fifteenth'],\n\n// linaer index to fifth = (2 * index + 1) % 7\n  fifths: ['f', 'c', 'g', 'd', 'a', 'e', 'b'],\n  tones: ['c', 'd', 'e', 'f', 'g', 'a', 'b'],\n  accidentals: ['bb', 'b', '', '#', 'x'],\n  quarterToneAccidentals: ['bb', '¾b', 'b', '¼b', '', '¼#', '#', '¾#', 'x'],\n  vexFlowAccidentals: ['bb', 'bbs', 'b', 'd', 'n', '+', '#', '++', '##'],\n\n  sharp: notecoord.sharp,\n  A4: [notecoord.A4[0] + 7, notecoord.A4[1] + 12], // Use C-1 as reference\n\n  durations: {\n    '0.25': 'longa',\n    '0.5': 'breve',\n    '1': 'whole',\n    '2': 'half',\n    '4': 'quarter',\n    '8': 'eighth',\n    '16': 'sixteenth',\n    '32': 'thirty-second',\n    '64': 'sixty-fourth',\n    '128': 'hundred-twenty-eighth'\n  },\n\n  qualityLong: {\n    P: 'perfect',\n    M: 'major',\n    m: 'minor',\n    A: 'augmented',\n    AA: 'doubly augmented',\n    d: 'diminished',\n    dd: 'doubly diminished'\n  },\n\n  alterations: {\n    perfect: ['dd', 'd', 'P', 'A', 'AA'],\n    minor: ['dd', 'd', 'm', 'M', 'A', 'AA']\n  },\n\n  symbols: {\n    'min': ['m3', 'P5'],\n    'm': ['m3', 'P5'],\n    '-': ['m3', 'P5'],\n\n    'M': ['M3', 'P5'],\n    '': ['M3', 'P5'],\n\n    '+': ['M3', 'A5'],\n    'aug': ['M3', 'A5'],\n\n    'dim': ['m3', 'd5'],\n    'o': ['m3', 'd5'],\n\n    'maj': ['M3', 'P5', 'M7'],\n    'dom': ['M3', 'P5', 'm7'],\n    'ø': ['m3', 'd5', 'm7'],\n\n    '5': ['P5']\n  },\n\n  chordShort: {\n    'major': '',\n    'minor': 'm',\n    'augmented': '+',\n    'diminished': 'o',\n    'dominant': '7',\n    'major-seventh': 'M7',\n    'minor-seventh': 'm7',\n    'diminished-seventh': 'o7',\n    'augmented-seventh': '+7',\n    'half-diminished': 'ø',\n    'major-minor': 'mM',\n    'dominant-suspended-fourth': '7sus4',\n    'major-sixth': '6',\n    'minor-sixth': 'm6',\n    'dominant-ninth': '9',\n    'major-ninth': 'M9',\n    'minor-ninth': 'm9',\n    'dominant-11th': '11',\n    'major-11th': 'M11',\n    'minor-11th': 'm11',\n    'dominant-13th': '13',\n    'major-13th': 'M13',\n    'minor-13th': 'm13',\n    'suspended-second': 'sus2',\n    'suspended-fourth': 'sus4',\n    'Neapolitan': 'N',\n    // 'Italian'\n    // 'French'\n    // 'German'\n    // 'pedal'\n    'power': '5',\n    'Tristan': 'tristan'\n  },\n\n  // chordDegrees: {\n  //   'major': ['M3', 'P5'],\n  //   'minor': ['m3', 'P5'],\n  //   'augmented': ['M3', 'A5'],\n  //   'diminished': ['m3', 'd5'],\n  //   'dominant': ['M3', 'P5', 'm7'],\n  //   'major-seventh': ['M3', 'P5', 'M7'],\n  //   'minor-seventh': ['m3', 'P5', 'm7'],\n  //   'diminished-seventh': ['m3', 'd5', 'd7'],\n  //   'augmented-seventh': ['M3', 'A5', 'm7'],\n  //   'half-diminished': ['m3', 'd5', 'm7'],\n  //   'major-minor': ['m3', 'P5', 'M7'],\n  //   'dominant-suspended-fourth': ['P4', 'P5', 'm7'], // not present in MusicXML\n  //   'major-sixth': ['M3', 'P5', 'M6'],\n  //   'minor-sixth': ['m3', 'P5', 'M6'],\n  //   'dominant-ninth': ['M3', 'P5', 'm7', 'M9'],\n  //   'major-ninth': ['M3', 'P5', 'M7', 'M9'],\n  //   'minor-ninth': ['m3', 'P5', 'm7', 'M9'],\n  //   'dominant-11th': ['M3', 'P5', 'm7', 'M9', 'P11'],\n  //   'major-11th': ['M3', 'P5', 'M7', 'M9', 'P11'],\n  //   'minor-11th': ['m3', 'P5', 'm7', 'M9', 'P11'],\n  //   'dominant-13th': ['M3', 'P5', 'm7', 'M9', 'P11'],\n  //   'major-13th': ['M3', 'P5', 'M7', 'M9', 'P11', 'M13'],\n  //   'minor-13th': ['m3', 'P5', 'm7', 'M9', 'P11', 'M13'],\n  //   'suspended-second': ['M2', 'P5'],\n  //   'suspended-fourth': ['P4', 'P5'],\n  //   'Neapolitan': ['M3', 'm6'],\n  //   // 'Italian'\n  //   // 'French'\n  //   // 'German'\n  //   // 'pedal'\n  //   'power': ['P5'],\n  //   'Tristan': ['A4', 'A6', 'A9']\n  // },\n\n  chordDegrees: {\n    'major': {3: 'M', 5: 'P'},\n    'minor': {3: 'm', 5: 'P'},\n    'augmented': {3: 'M', 5: 'A'},\n    'diminished': {3: 'm', 5: 'd'},\n    'dominant': {3: 'M', 5: 'P', 7: 'm'},\n    'major-seventh': {3: 'M', 5: 'P', 7: 'M'},\n    'minor-seventh': {3: 'm', 5: 'P', 7: 'm'},\n    'diminished-seventh': {3: 'm', 5: 'd', 7: 'd'},\n    'augmented-seventh': {3: 'M', 5: 'A', 7: 'm'},\n    'half-diminished': {3: 'm', 5: 'd', 7: 'm'},\n    'major-minor': {3: 'm', 5: 'P', 7: 'M'},\n    'dominant-suspended-fourth': {4: 'P', 5: 'P', 7: 'm'}, // not present in MusicXML\n    'major-sixth': {3: 'M', 5: 'P', 6: 'M'},\n    'minor-sixth': {3: 'm', 5: 'P', 6: 'M'},\n    'dominant-ninth': {3: 'M', 5: 'P', 7: 'm', 9: 'M'},\n    'major-ninth': {3: 'M', 5: 'P', 7: 'M', 9: 'M'},\n    'minor-ninth': {3: 'm', 5: 'P', 7: 'm', 9: 'M'},\n    'dominant-11th': {3: 'M', 5: 'P', 7: 'm', 9: 'M', 11: 'P'},\n    'major-11th': {3: 'M', 5: 'P', 7: 'M', 9: 'M', 11: 'P'},\n    'minor-11th': {3: 'm', 5: 'P', 7: 'm', 9: 'M', 11: 'P'},\n    'dominant-13th': {3: 'M', 5: 'P', 7: 'm', 9: 'M', 11: 'P', 13: 'M'},\n    'major-13th': {3: 'M', 5: 'P', 7: 'M', 9: 'M', 11: 'P', 13: 'M'},\n    'minor-13th': {3: 'm', 5: 'P', 7: 'm', 9: 'M', 11: 'P', 13: 'M'},\n    'suspended-second': {2: 'M', 5: 'P'},\n    'suspended-fourth': {4: 'P', 5: 'P'},\n    'Neapolitan': {3: 'M', 6: 'm'},\n    // 'Italian'\n    // 'French'\n    // 'German'\n    // 'pedal'\n    'power': {5: 'P'},\n    'Tristan': {4: 'A', 6: 'A', 9: 'A'}\n  },\n\n  stepNumber: {\n    'unison': 1,\n    'first': 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'octave': 8,\n    'ninth': 9,\n    'eleventh': 11,\n    'thirteenth': 13\n  },\n\n  // Adjusted Shearer syllables - Chromatic solfege system\n  // Some intervals are not provided for. These include:\n  // dd2 - Doubly diminished second\n  // dd3 - Doubly diminished third\n  // AA3 - Doubly augmented third\n  // dd6 - Doubly diminished sixth\n  // dd7 - Doubly diminished seventh\n  // AA7 - Doubly augmented seventh\n  intervalSolfege: {\n    'dd1': 'daw',\n    'd1': 'de',\n    'P1': 'do',\n    'A1': 'di',\n    'AA1': 'dai',\n    'd2': 'raw',\n    'm2': 'ra',\n    'M2': 're',\n    'A2': 'ri',\n    'AA2': 'rai',\n    'd3': 'maw',\n    'm3': 'me',\n    'M3': 'mi',\n    'A3': 'mai',\n    'dd4': 'faw',\n    'd4': 'fe',\n    'P4': 'fa',\n    'A4': 'fi',\n    'AA4': 'fai',\n    'dd5': 'saw',\n    'd5': 'se',\n    'P5': 'so',\n    'A5': 'si',\n    'AA5': 'sai',\n    'd6': 'law',\n    'm6': 'le',\n    'M6': 'la',\n    'A6': 'li',\n    'AA6': 'lai',\n    'd7': 'taw',\n    'm7': 'te',\n    'M7': 'ti',\n    'A7': 'tai',\n    'dd8': 'daw',\n    'd8': 'de',\n    'P8': 'do',\n    'A8': 'di',\n    'AA8': 'dai'\n  },\n\n  // Default scales (assuming 7 steps, 12 tcu per octave)\n  // scales: {\n  //   'major': ['P', 'M', 'M', 'P', 'P', 'M', 'M'],\n  //   'minor': ['P', 'M', 'm', 'P', 'P', 'm', 'm'],\n  //   'mixolydian': ['P', 'M', 'M', 'P', 'P', 'M', 'm'],\n  //   'dorian': ['P', 'M', 'm', 'P', 'P', 'M', 'm'],\n  //   'harmonic-minor': ['P', 'M', 'm', 'P', 'P', 'm', 'M']\n  // }\n\n  scales: {\n    'major': [0, 2, 4, 5, 7, 9, 11],\n    'minor': [0, 2, 3, 5, 7, 8, 10],\n    'mixolydian': [0, 2, 4, 5, 7, 9, 10],\n    'dorian': [0, 2, 3, 5, 7, 9, 10],\n    'harmonic-minor': [0, 2, 3, 5, 7, 8, 11],\n    'phrygian': [0, 1, 3, 5, 7, 8, 10],\n    'lydian': [0, 2, 4, 6, 7, 9, 11],\n    'aeolian': [0, 2, 3, 5, 7, 8, 10],\n    // The following scales are not correct but still useful for reducing to simple mode\n    // This format will change in the future\n    'diminished': [0, 2, 3, 5, 6, 9, 10],\n    'minor-blues': [0, 2, 3, 5, 7, 8, 10],\n    'minor-penta': [0, 2, 3, 5, 7, 8, 10],\n    'major-blues': [0, 2, 4, 5, 7, 9, 11],\n    'major-penta': [0, 2, 4, 5, 7, 9, 11]\n  }\n};\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/knowledge.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 517,
    "kind": "file",
    "name": "lib/misc.js",
    "content": "\nimport _ from 'underscore';\nimport xml2js from 'xml2js';\nimport ItemHandler from './item-handler.js';\nimport Item from './classes/item.js';\nimport Fraction from 'fraction.js';\n\nexport default {\n  dashToCamel: function(str) {\n    return str.replace(/-([a-z])/gi, function(s, group1) {\n      return group1.toUpperCase();\n    });\n  },\n\n  parseXML: function(xml, settings) {\n    settings = settings || {};\n    if (!settings.hasOwnProperty('tagNameProcessors')) settings.tagNameProcessors = [this.dashToCamel];\n    if (!settings.hasOwnProperty('explicitRoot')) settings.explicitRoot = false;\n    settings.async = false;\n    var parser = xml2js.Parser(settings);\n    var result, error;\n    parser.parseString(xml, function(err, res) {\n      result = res;\n      error = err;\n    });\n    if (error) throw new Error(error);\n    return result;\n  },\n\n  buildXML: function(obj, settings) {\n    settings = settings || {};\n    if (!settings.hasOwnProperty('headless')) settings.headless = true;\n    var builder = new xml2js.Builder(settings);\n    return builder.buildObject(obj);\n  },\n\n  extendObject: function(proto, obj) {\n    var o = Object.create(proto);\n    if (obj) {\n      Object.keys(obj).forEach(function(p) {\n        o[p] = obj[p];\n      });\n    }\n    return o;\n  },\n\n  parseIntOr: function(value, def) {\n    let i = parseInt(value);\n    return isNaN(i) ? def : value;\n  },\n\n  parseFloatOr: function(value, def) {\n    let f = parseFloat(value);\n    return isNaN(f) ? def : value;\n  },\n\n  // extendClass: function(subClass, baseClass, slots, properties) {\n  //   subClass.prototype = this.extendObject(baseClass.prototype, properties);\n  //   subClass.prototype.constructor = subClass;\n  //   //subClass.prototype.super = baseClass.prototype;\n  //   subClass.prototype.className = subClass.name;\n  //   Object.defineProperty(subClass.prototype, 'slots', {\n  //     value: baseClass.prototype.slots.concat(slots),\n  //     enumerable: false,\n  //     configurable: false\n  //   });\n  // },\n\n  initSubObject: function(parent, obj, DefaultClass, def) {\n    if (!parent) {\n      throw new Error('parent is undefined in initSubObject');\n    }\n\n    // Undefined => use given default\n    if (obj === undefined) return def;\n\n    // Keep null\n    if (obj === null) return null;\n\n    // Already an Item\n    if (obj instanceof Item) {\n      obj.parent = parent;\n      return obj;\n    }\n\n    // Explicit Item, just not yet initialized\n    if (_.isObject(obj) && obj.type) {\n      return ItemHandler.createItem(obj.type, obj, parent);\n    }\n\n    // If DefaultClass is a name of the object type, like \"Pitch\", find\n    // the constructor before using it below.\n    if (_.isString(DefaultClass)) {\n      DefaultClass = ItemHandler.getConstructor(DefaultClass);\n    }\n\n    // Other object, and there is a default class\n    if (DefaultClass && !(obj instanceof DefaultClass)) {\n      if (obj === undefined) {\n        obj = def;\n      }\n      return DefaultClass.coerce(obj, parent);\n    }\n\n    // Other cases, just return the object unchanged\n    return obj;\n  },\n\n  initSubObjects: function(parent, objArray, DefaultClass, def) {\n    if (!parent) {\n      throw new Error('parent is undefined in initSubObjects');\n    }\n\n    if (objArray && !_.isArray(objArray)) {\n      throw new Error('initSubObjects called with non-array');\n    }\n\n    return _.filter(_.map(objArray, (item) => {\n      return this.initSubObject(parent, item, DefaultClass, def); // TODO: clone def?\n    }), _.identity);\n  },\n\n  mod: function(num, mod) {\n    var remain = num % mod;\n    return Math.floor(remain >= 0 ? remain : remain + mod);\n  },\n\n  sumArray: function(arr) {\n    var total = 0;\n    for (var i = 0, n = arr.length; i < n; ++i) {\n      total += arr[i];\n    }\n    return total;\n  },\n\n  clone: function clone(obj) {\n    var copy;\n\n    // Handle the 3 simple types, and null or undefined\n    if (obj == null || typeof obj !== 'object') return obj;\n\n    // Handle Item\n    if (obj instanceof Item) {\n      return obj.clone();\n    }\n\n    // Fractions\n    if (obj instanceof Fraction) {\n      return new Fraction(obj);\n    }\n\n    // Handle Date\n    if (obj instanceof Date) {\n      copy = new Date();\n      copy.setTime(obj.getTime());\n      return copy;\n    }\n\n    // Handle Array\n    if (obj instanceof Array) {\n      copy = [];\n      for (var i = 0, len = obj.length; i < len; i++) {\n        copy[i] = clone(obj[i]);\n      }\n      return copy;\n    }\n\n    // Handle generic objects\n    if (obj instanceof Object) {\n      if (Object.getPrototypeOf(obj).constructor.name !== 'Object') {\n        console.warn('Don\\'t know how to clone ' + Object.getPrototypeOf(obj).constructor.name + ' objects');\n      }\n      copy = {};\n      for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n      }\n      return copy;\n    }\n\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n  },\n\n  allRotations: function(array) {\n    let result = [array.slice()];\n    let count = array.length;\n    for (let i = 1; i < count; i++) {\n      result.push(array.slice(i - count).concat(array.slice(0, i)));\n    }\n    return result;\n  },\n\n  isInteger: function(x) {\n    return _.isNumber(x) && ((x % 1) === 0);\n  }\n};\n\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/misc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 518,
    "kind": "file",
    "name": "lib/music-ptr.js",
    "content": "\n// import _ from 'underscore';\n// import Item from './item.js';\n// import chalk from 'chalk';\n\nimport Fraction from 'fraction.js';\nimport EventContainer from './classes/event/event-container.js';\n\n/** @ignore */\nexport default class MusicPtr {\n  constructor(container) {\n    if (!(container instanceof EventContainer)) throw new Error('MusicPtr must be initialized with an event container');\n    // container.resolve(); // or is it caller's responsibility?\n    this.container = container;\n    this.reset();\n  }\n\n  reset() {\n    this.eventStatus = 'head';\n    this.metaStatus = 'head';\n    this.absWn = new Fraction(0);\n    this.prevBar = new Fraction(0);\n    this.globals = this.container.cache.globals;\n    this.setTime(this.container.cache.time);\n    this.tempo = this.container.cache.tempo;\n    this.nextTime = this.getNextGlobal('Time');\n    this.nextTempo = this.getNextGlobal('Tempo');\n    this.currentBeat = 1;\n  }\n\n  setTime(time) {\n    if (!time) throw new Error('No Time event present in container (or the container is not resolved)');\n    this.time = time;\n    this.measureLength = time.getMeasureWn();\n    this.beatOffsets = Array(time.beats.length);\n    let totalAtoms = 0;\n    for (let i = 0; i < time.beats.length; i++) {\n      let atoms = time.beats[i];\n      totalAtoms += atoms;\n      this.beatOffsets[i] = new Fraction(totalAtoms, time.denom);\n    }\n    this.updateOffsets();\n  }\n\n  updateOffsets() {\n    this.barOffset = this.absWn.sub(this.time.cache.absWn).mod(this.measureLength);\n    this.prevBar = this.absWn.sub(this.barOffset);\n    let lastBeat = 0;\n    for (let i = 0; i < this.beatOffsets.length; i++) {\n      if (this.barOffset < this.beatOffsets[i]) {\n        this.beatOffset = this.barOffset.sub(lastBeat);\n        this.currentBeat = i + 1;\n        break;\n      }\n      lastBeat = this.beatOffsets[i];\n    }\n  }\n\n  atHead() {\n    return this.eventStatus === 'head' && this.metaStatus === 'head';\n  }\n\n  atTail() {\n    return this.eventStatus === 'tail' && this.metaStatus === 'tail';\n  }\n\n  atBar() {\n    return this.barOffset.n === 0;\n  }\n\n  atBeat() {\n    return this.beatOffset.n === 0;\n  }\n\n  atEvent() {\n    return this.event;\n  }\n\n  atMeta() {\n    return this.meta;\n  }\n\n  get offset() {\n    return this.absWn;\n  }\n\n  get eventOffset() {\n    return this.event ? this.absWn.sub(this.event.cache.absWn) : null;\n  }\n\n  stepBeat() {\n    let step = this.currentBeatLength.sub(this.beatOffset);\n    this.absWn = this.absWn.add(step);\n    this.updateOffsets();\n    this.updateCurrentEvent(this.eventIndex);\n    return step;\n  }\n\n  stepEvent() {\n    if (this.eventStatus === 'head') {\n      this.eventIndex = 0;\n      this.eventStatus = 'event';\n    } else if (this.eventStatus === 'tail') {\n      console.warn('stepEvent: Cannot step past event tail');\n      return null;\n    } else {\n      this.eventIndex++;\n    }\n    if (this.eventIndex < this.container.events.length) {\n      this.event = this.container.events[this.eventIndex];\n      this.absWn = this.event.cache.absWn;\n      this.updateOffsets();\n    } else {\n      if (this.event) {\n        this.absWn = this.event.cache.endWn;\n        this.updateOffsets();\n      }\n      this.eventStatus = 'tail';\n      this.eventIndex = null;\n      this.event = null;\n    }\n  }\n\n  stepWn(wn) {\n    this.absWn = this.absWn.add(wn);\n    this.updateOffsets();\n    this.updateCurrentEvent(this.eventIndex);\n    return wn;\n  }\n\n  get currentBeatLength() {\n    let i = this.currentBeat;\n    return this.beatOffsets[i - 1].sub(this.beatOffsets[i - 2] || 0);\n  }\n\n  updateCurrentEvent(fromIndex) {\n    let index = this.getEventIndexAtWn(this.absWn, fromIndex);\n    this.eventIndex = index;\n    this.event = index ? this.container.events[index] : null;\n  }\n\n  getEventIndexAtWn(wn, fromIndex) {\n    let events = this.container.events;\n    let eventCount = events.length;\n    for (let i = fromIndex || 0; i < eventCount; i++) {\n      if (events[i].cache.absWn <= wn && events[i].cache.endWn > wn) {\n        return i;\n      }\n    }\n    console.log('Could not find any event at ' + wn.toFraction());\n  }\n\n  copy() {\n    throw new Error('Not implemented');\n  }\n\n  getNextGlobal(type) {\n    var pos = 0;\n    while (this.globals[pos] && ((this.globals[pos].cache.absWn <= this.absWn) || (type && !(this.globals[pos].type === type)))) pos++;\n    return this.globals[pos];\n  }\n\n  getPrevGlobal(type) {\n    var pos = this.globals.length - 1;\n    while (this.globals[pos] && ((this.globals[pos].cache.absWn >= this.absWn) || (type && !(this.globals[pos].type === type)))) pos--;\n    return this.globals[pos];\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/music-ptr.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 519,
    "kind": "class",
    "name": "MusicPtr",
    "memberof": "lib/music-ptr.js",
    "static": true,
    "longname": "lib/music-ptr.js~MusicPtr",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/music-ptr.js",
    "importStyle": "MusicPtr",
    "description": null,
    "lineNumber": 10,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 520,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 521,
    "kind": "member",
    "name": "container",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#container",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 522,
    "kind": "method",
    "name": "reset",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#reset",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 523,
    "kind": "member",
    "name": "eventStatus",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#eventStatus",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 524,
    "kind": "member",
    "name": "metaStatus",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#metaStatus",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 525,
    "kind": "member",
    "name": "absWn",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#absWn",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 526,
    "kind": "member",
    "name": "prevBar",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#prevBar",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 527,
    "kind": "member",
    "name": "globals",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#globals",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 528,
    "kind": "member",
    "name": "tempo",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#tempo",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 529,
    "kind": "member",
    "name": "nextTime",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#nextTime",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 530,
    "kind": "member",
    "name": "nextTempo",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#nextTempo",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 531,
    "kind": "member",
    "name": "currentBeat",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#currentBeat",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 532,
    "kind": "method",
    "name": "setTime",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#setTime",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "time",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 533,
    "kind": "member",
    "name": "time",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#time",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 534,
    "kind": "member",
    "name": "measureLength",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#measureLength",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 535,
    "kind": "member",
    "name": "beatOffsets",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#beatOffsets",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 536,
    "kind": "method",
    "name": "updateOffsets",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#updateOffsets",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 537,
    "kind": "member",
    "name": "barOffset",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#barOffset",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 539,
    "kind": "member",
    "name": "beatOffset",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#beatOffset",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 541,
    "kind": "method",
    "name": "atHead",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#atHead",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 542,
    "kind": "method",
    "name": "atTail",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#atTail",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 543,
    "kind": "method",
    "name": "atBar",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#atBar",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 544,
    "kind": "method",
    "name": "atBeat",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#atBeat",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 545,
    "kind": "method",
    "name": "atEvent",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#atEvent",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 546,
    "kind": "method",
    "name": "atMeta",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#atMeta",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 547,
    "kind": "get",
    "name": "offset",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#offset",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 548,
    "kind": "get",
    "name": "eventOffset",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#eventOffset",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 549,
    "kind": "method",
    "name": "stepBeat",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#stepBeat",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 551,
    "kind": "method",
    "name": "stepEvent",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#stepEvent",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 552,
    "kind": "member",
    "name": "eventIndex",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#eventIndex",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 554,
    "kind": "member",
    "name": "event",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#event",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 560,
    "kind": "method",
    "name": "stepWn",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#stepWn",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "wn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 562,
    "kind": "get",
    "name": "currentBeatLength",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#currentBeatLength",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 563,
    "kind": "method",
    "name": "updateCurrentEvent",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#updateCurrentEvent",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "params": [
      {
        "name": "fromIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 566,
    "kind": "method",
    "name": "getEventIndexAtWn",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#getEventIndexAtWn",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "params": [
      {
        "name": "wn",
        "types": [
          "*"
        ]
      },
      {
        "name": "fromIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 567,
    "kind": "method",
    "name": "copy",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#copy",
    "access": "public",
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 568,
    "kind": "method",
    "name": "getNextGlobal",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#getNextGlobal",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 569,
    "kind": "method",
    "name": "getPrevGlobal",
    "memberof": "lib/music-ptr.js~MusicPtr",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/music-ptr.js~MusicPtr#getPrevGlobal",
    "access": "public",
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 570,
    "kind": "file",
    "name": "lib/render.js",
    "content": "\nimport $ from 'jquery';\n\nfunction createTitle(title) {\n  var wrapper = document.createElement('h1');\n  var textNode = document.createTextNode(title);\n  wrapper.appendChild(textNode);\n  return wrapper;\n}\n\nfunction updateInfoField(obj) {\n  $('#info h1').text(obj.type);\n  $('#info pre').text(objToString(obj));\n  document.getElementById('info').style.display = 'block';\n}\n\nfunction objToString(obj, type) {\n  var s = [];\n  if (type) s.push(obj.type);\n  s.push('Position: ' + (obj.position ? (obj.position[0] + ' ' + obj.position[1]) : '--'));\n  s.push('Duration: ' + (obj.duration ? (obj.duration[0] + ' ' + obj.duration[1]) : '--'));\n  var ignore = ['type', 'contents', 'duration', 'pos', 'parent'];\n  for (var p in obj) {\n    if (obj.hasOwnProperty(p) && (ignore.indexOf(p) < 0)) s.push(p + ': ' + obj[p]);\n  }\n  return s.join('\\n');\n}\n\nvar hovered;\nvar selected;\n\nfunction render(obj) {\n  var node = document.createElement('div');\n  node.appendChild(createTitle(obj.type));\n  node.className = 'object ' + obj.type.toLowerCase();\n  node.style.left = (obj.startTime / 10) + 'px';\n  node.style.width = ((obj.endTime - obj.startTime) / 10) + 'px';\n  node.style.top = (obj.row ? obj.row * 40 : 0) + 'px';\n  node.dataset.row = obj.row;\n  node.obj = obj;\n  node.title = objToString(obj); // JSON.stringify(obj, null, 4);\n\n  node.onclick = function(e) {\n    updateInfoField(node.obj);\n    if (selected) $(selected).removeClass('selected');\n    selected = node;\n    $(node).addClass('selected');\n    e.stopPropagation();\n  };\n\n  node.onmouseover = function(e) {\n    if (hovered && (hovered !== node)) $(hovered).removeClass('hovered');\n    $(node).addClass('hovered');\n    hovered = node;\n    e.stopPropagation();\n  };\n\n  node.onmouseout = function(e) {\n    if (node === hovered) $(node).removeClass('hovered');\n    hovered = null;\n  };\n\n  var height = 0;\n  if (obj.events) {\n    var container = document.createElement('div');\n    container.className = 'container';\n    for (var i = 0; i < obj.events.length; i++) {\n      var child = obj.events[i];\n      var childNode = this.render(child);\n      container.appendChild(childNode);\n      var h = parseInt(childNode.style.top) + parseInt(childNode.style.height) + 5;\n      if (h > height) height = h;\n    }\n    height += 25;\n    if (height < 30) height = 30;\n    container.style.height = height + 'px';\n    node.appendChild(container);\n    node.style.height = container.style.height;\n  } else {\n    node.style.height = '20px';\n  }\n\n  return node;\n}\n\nexport default {\n  render: render\n};\n\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/render.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 571,
    "kind": "function",
    "name": "createTitle",
    "memberof": "lib/render.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/render.js~createTitle",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/render.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "title",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 572,
    "kind": "function",
    "name": "updateInfoField",
    "memberof": "lib/render.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/render.js~updateInfoField",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/render.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 573,
    "kind": "function",
    "name": "objToString",
    "memberof": "lib/render.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/render.js~objToString",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/render.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 574,
    "kind": "function",
    "name": "render",
    "memberof": "lib/render.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/render.js~render",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/render.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 575,
    "kind": "file",
    "name": "lib/resolver.js",
    "content": "// import Tempo from './classes/tempo.js';\n\nimport misc from './misc.js';\nimport Duration from './classes/duration.js';\nimport Fraction from 'fraction.js';\n\n/** @ignore */\nexport function createState(item, globals) {\n  var state = {\n    tempo: item.cache.tempo || getPrevGlobal(item.cache.absTime, globals, 'Tempo', true),\n    time: item.cache.time || getPrevGlobal(item.cache.absTime, globals, 'Time', true), // || {beats: [1, 1, 1, 1], denom: 4},\n    key: item.cache.key || getPrevGlobal(item.cache.absTime, globals, 'Key', true),\n    scale: item.parent ? item.parent.cache.scale : new Fraction(1),\n    absWn: item.cache.absWn,\n    absTime: item.cache.absTime,\n    item: item // for debugging\n  };\n  if (!state.tempo) {\n    if (state.parent) console.warn('createState could not find tempo for ', item, globals);\n    // console.warn(\"... \", getNextGlobal(0, globals, \"Tempo\", false));\n    // console.warn(\"... \", getNextGlobal(0, globals, \"Tempo\", true));\n  }\n  state.sPerWn = state.tempo ? state.tempo.sPerWn() : null;\n  return state;\n}\n\n// function copyState(state, except) {\n//   var copy = {};\n//   Object.keys(state).forEach(function(key) {\n//     if (!except || except.indexOf(key) < 0) copy[key] = state[key];\n//   });\n//   return copy;\n// }\n\nfunction getNextGlobal(absTime, globals, type, inclusive) {\n  var pos = 0;\n  if (inclusive) {\n    while (globals[pos] && ((globals[pos].cache.absTime < absTime) || (type && !(globals[pos].type === type)))) pos++;\n  } else {\n    while (globals[pos] && ((globals[pos].cache.absTime <= absTime) || (type && !(globals[pos].type === type)))) pos++;\n  }\n  return globals[pos];\n}\n\nfunction getPrevGlobal(absTime, globals, type, inclusive) {\n  var pos = globals.length - 1;\n  if (inclusive) {\n    while (globals[pos] && ((globals[pos].cache.absTime > absTime) || (type && !(globals[pos].type === type)))) pos--;\n  } else {\n    while (globals[pos] && ((globals[pos].cache.absTime >= absTime) || (type && !(globals[pos].type === type)))) pos--;\n  }\n  return globals[pos];\n}\n\n/** @ignore */\nexport function updateState(state, meta) {\n  // console.log(\"UpdateState! \", state, meta);\n  switch (meta.type) {\n    case 'Tempo':\n      state.tempo = meta;\n      state.sPerWn = meta.sPerWn();\n      // console.log(\"At \" + state.absWn + \" Tempo is now \" + meta.bpm + \"BPM, sPerWn = \" + state.sPerWn);\n      break;\n    case 'Time':\n      state.time = meta;\n      break;\n    case 'Key':\n      state.key = meta;\n      break;\n  }\n}\n\n// Update state with globals found at the current position\n// TODO: make more efficient\n/** @ignore */\nexport function maybeUpdateState(state, globals) {\n  for (var i = 0; i < globals.length; i++) {\n    var g = globals[i];\n    if (g.cache.absTime.equals(state.absTime)) {\n      updateState(state, g);\n    }\n  }\n}\n\n/** @ignore */\nexport function stepState(state, duration, globals) {\n  if (!duration) return;\n  if (duration.isZero()) return;\n  if (!state.tempo) {\n    // console.warn(\"CANNOT STEP: duration: \", duration, \"state: \", state);\n    throw Error('Cannot step without a tempo!');\n  }\n  if (duration.value < 0) return stepStateBw(state, duration, globals);\n  return stepStateFw(state, duration, globals);\n}\n\nfunction stepStateFw(state, duration, globals) {\n  var s;\n  var rest;\n  var step;\n\n  if (!duration.isTime) console.log('Duration is ', duration, ' in stepStateFw'); // if duration is not a Duration object\n  if (duration.isTime()) {\n    s = state.scale.mul(duration.toSeconds());\n    var nextTempo = getNextGlobal(state.absTime, globals, 'Tempo');\n    if (!nextTempo || (nextTempo.cache.absTime > (state.absTime + s))) {\n      // Simple step\n      state.absTime = state.absTime.add(s);\n      state.absWn = state.absWn.add(new Fraction(s, state.sPerWn));\n    } else {\n      // Step to next tempo change\n      step = nextTempo.cache.absTime.sub(state.absTime);\n      state.absTime = nextTempo.cache.absTime; // avoid precision error\n      state.absWn = state.absWn.add(new Fraction(step, state.sPerWn));\n      maybeUpdateState(state, globals);\n      // Call recursively with resting duration\n      rest = s.sub(step);\n      if (rest > 0) {\n        stepState(state, Duration.coerce({value: rest, unit: 's'}), globals);\n      }\n    }\n  } else {\n    var wn;\n    switch (duration.unit) {\n      case 'wn': wn = duration.value; break;\n      case 'beats': wn = wnPerBeat(state).mul(duration.value); break;\n      case 'measures': wn = wnPerMeasure(state).mul(duration.value); break;\n      default:\n        console.log('Bad duration unit: ', duration.unit);\n        throw Error('Bad duration unit: ' + duration.unit);\n    }\n    wn = state.scale.mul(wn);\n\n    var nextGlobal = getNextGlobal(state.absTime, globals);\n    s = wn.mul(state.sPerWn);\n    // if (nextGlobal) console.log('nextGlobal: ', nextGlobal.type, nextGlobal.cache.absTime, 'state.absTime: ', state.absTime, 's: ', s);\n    if (!nextGlobal || (nextGlobal.cache.absTime > (state.absTime.add(s)))) {\n      // Simple step\n      // console.log('simple step', wn);\n      state.absTime = state.absTime.add(wn.mul(state.sPerWn));\n      state.absWn = state.absWn.add(wn);\n    } else {\n      // Step to next global\n      step = nextGlobal.cache.absWn.sub(state.absWn);\n      // console.log('split step', wn.valueOf(), step.valueOf(), state.absWn.valueOf(), nextGlobal.cache.absWn.valueOf());\n      state.absTime = state.absTime.add(step.mul(state.sPerWn));\n      state.absWn = nextGlobal.cache.absWn; // avoid precision error\n      maybeUpdateState(state, globals);\n      // Call recursively with resting duration\n      rest = wn.sub(step);\n      // console.log(\"rest is \" + rest.valueOf());\n      if (rest > 0) {\n        stepState(state, Duration.coerce({value: rest, unit: 'wn'}), globals);\n      }\n    }\n  }\n}\n\nfunction stepStateBw(state, duration, globals) {\n  var rest;\n  var step;\n  var s;\n\n  if (!duration.isTime) console.log('Duration is ', duration, ' in stepStateBw'); // if duration is not a Duration object\n  if (duration.isTime()) {\n    s = state.mul.scale(duration.toSeconds());\n    var prevTempo = getPrevGlobal(state.absTime, globals, 'Tempo');\n    if (!prevTempo || (prevTempo.cache.absTime < (state.absTime.add(s)))) {\n      // Simple step\n      state.absTime = state.absTime.add(s); // duration is negative\n      state.absWn = state.absWn.add(s.div(state.sPerWn));\n    } else {\n      // Step to next tempo change\n      step = prevTempo.cache.absTime.sub(state.absTime);\n      state.absTime = prevTempo.cache.absTime; // avoid precision error\n      state.absWn = state.absWn.add(step.div(state.sPerWn));\n      maybeUpdateState(state, globals); // TODO!!\n      // Call recursively with resting duration\n      rest = s.sub(step);\n      if (rest < 0) {\n        stepState(state, Duration.coerce({value: rest, unit: 's'}), globals);\n      }\n    }\n  } else {\n    var a;\n    switch (duration.unit) {\n      case 'wn': a = duration.value; break;\n      case 'beats': a = wnPerBeat(state).mul(duration.value); break;\n      case 'measures': a = wnPerMeasure(state).mul(duration.value); break;\n      default:\n        console.log('Bad duration unit: ' + duration.unit);\n        throw Error('Bad duration unit: ' + duration.unit);\n    }\n    a = state.scale.mul(a);\n\n    var prevGlobal = getPrevGlobal(state.absTime, globals);\n    s = a.mul(state.sPerWn);\n    // if (prevGlobal) console.log('prevGlobal: ', prevGlobal.type, prevGlobal.cache.absTime, 'state.absTime: ', state.absTime, 's: ', s);\n    if (!prevGlobal || (prevGlobal.cache.absTime < (state.absTime.add(s)))) {\n      // Simple step\n      // console.log('simple step', a);\n      state.absTime = state.absTime.add((new Fraction(a)).mul(state.sPerWn));\n      state.absWn = state.absWn.add(a);\n    } else {\n      // Step to next global\n      step = prevGlobal.cache.absWn.sub(state.absWn);\n      console.log('split step', a, step, state.absWn, prevGlobal.cache.absWn);\n      state.absTime = state.absTime.add(step.mul(state.sPerWn));\n      state.absWn = prevGlobal.cache.absWn; // avoid precision error\n      maybeUpdateState(state, globals); // TODO!\n      // Call recursively with resting duration\n      rest = a.sub(step);\n      if (rest < 0) {\n        stepState(state, Duration.coerce({value: rest, unit: 'wn'}), globals);\n      }\n    }\n  }\n}\n\n// temp\nfunction wnPerBeat(state) {\n  return new Fraction(state.time.beats[0], state.time.denom);\n}\n\nfunction wnPerMeasure(state) {\n  return new Fraction(misc.sumArray(state.time.beats), state.time.denom);\n}\n\n// import misc from './misc.js';\n// import _ from 'underscore';\n// import Duration from './classes/duration.js';\n// import VerticalContainer from './classes/vertical-container.js';\n// import Song from './classes/song.js';\n// import Voice from './classes/voice.js';\n// import Tempo from './classes/tempo.js';\n// import Fraction from 'fraction.js';\n\n// function setParents(item) {\n//   var children = item.events ? item.events.slice(0) : [];\n//   if (!item.cache) item.cache = {};\n//   // Make sure master objects come first\n//   // TODO: Sorting in Chrome (and Opera) is not stable,\n//   // so we can't do sorting this way\n// //   children.sort(function(a, b) {\n// //     if (a.master) return -1;\n// //     if (b.master) return 1;\n// //     return 0;\n// //   });\n//   item.cache.children = children;\n//   item.cache.enabled = item.parent ? !!(item.parent.cache.enabled && item.enabled) : !!item.enabled;\n//   item.cache.amp = _.isNumber(item.amp) ? item.amp : (item.parent ? item.parent.cache.amp : 1.0);\n//   var no = 0;\n//   children.forEach(function(child) {\n//     // child.parent = item;\n//     setParents(child);\n//     child.cache.no = no++;\n//   });\n// }\n\n// function copyState(state, except) {\n//   var copy = {};\n//   Object.keys(state).forEach(function(key) {\n//     if (!except || except.indexOf(key) < 0) copy[key] = state[key];\n//   });\n//   return copy;\n// }\n\n// function getNextGlobal(absTime, globals, type) {\n//   var pos = 0;\n//   while (globals[pos] && ((globals[pos].cache.absTime <= absTime) || (type && !(globals[pos].type === type)))) pos++;\n//   return globals[pos];\n// }\n\n// function getPrevGlobal(absTime, globals, type) {\n//   var pos = globals.length - 1;\n//   while (globals[pos] && ((globals[pos].cache.absTime >= absTime) || (type && !(globals[pos].type === type)))) pos--;\n//   return globals[pos];\n// }\n\n// // Update state with globals found at the current position\n// // TODO: make more efficient\n// function updateState(state, globals) {\n//   for (var i = 0; i < globals.length; i++) {\n//     var g = globals[i];\n//     if (g.cache.absTime === state.absTime) {\n//       switch (g.type) {\n//         case 'Tempo':\n//           state.tempo = g;\n//           state.sPerWn = g.sPerWn();\n//           break;\n//         case 'Time':\n//           state.time = g;\n//           break;\n//       }\n//     }\n//   }\n// }\n\n// function stepState(state, duration, globals) {\n//   // console.log('stepState: ' + duration);\n//   if (!duration) return;\n//   if (duration.absolute) { // duration may actually be a Position\n//     // Absolute position\n//     throw Error('TODO: Absolute position');\n//   } else {\n//     // Relative position\n//     if (duration.isZero()) return;\n//     if (duration.value < 0) return stepStateBw(state, duration, globals);\n//     return stepStateFw(state, duration, globals);\n//   }\n// }\n\n// function stepStateFw(state, duration, globals) {\n//   var s;\n//   var rest;\n//   var step;\n\n//   if (!duration.isTime) console.log('Duration is ', duration, ' in stepStateFw'); // if duration is not a Duration object\n//   if (duration.isTime()) {\n//     s = duration.toFloatSeconds();\n//     var nextTempo = getNextGlobal(state.absTime, globals, 'Tempo');\n//     if (!nextTempo || (nextTempo.cache.absTime > (state.absTime + s))) {\n//       // Simple step\n//       state.absTime += s;\n//       state.absWn += s / state.sPerWn;\n//     } else {\n//       // Step to next tempo change\n//       step = nextTempo.cache.absTime - state.absTime;\n//       state.absTime = nextTempo.cache.absTime; // avoid precision error\n//       state.absWn += step / state.sPerWn;\n//       updateState(state, globals);\n//       // Call recursively with resting duration\n//       rest = s - step;\n//       if (rest > 0) {\n//         stepState(state, Duration.coerce({num: rest, unit: 's'}), globals);\n//       }\n//     }\n//   } else {\n//     var a;\n//     switch (duration.unit) {\n//       case 'wn': a = duration.toFloat(); break;\n//       case 'beats': a = wnPerBeat(state) * duration.toFloat(); break;\n//       case 'measures': a = wnPerMeasure(state) * duration.toFloat(); break;\n//       default:\n//         console.log('Bad duration unit: ' + duration.unit);\n//         throw Error('Bad duration unit: ' + duration.unit);\n//     }\n\n//     var nextGlobal = getNextGlobal(state.absTime, globals);\n//     s = a * state.sPerWn;\n//     if (nextGlobal) console.log('nextGlobal: ', nextGlobal.type, nextGlobal.cache.absTime, 'state.absTime: ', state.absTime, 's: ', s);\n//     if (!nextGlobal || (nextGlobal.cache.absTime > (state.absTime + s))) {\n//       // Simple step\n//       // console.log('simple step', a);\n//       state.absTime += a * state.sPerWn;\n//       state.absWn += a;\n//     } else {\n//       // Step to next global\n//       step = nextGlobal.cache.absWn - state.absWn;\n//       console.log('split step', a, step, state.absWn, nextGlobal.cache.absWn);\n//       state.absTime += step * state.sPerWn;\n//       state.absWn = nextGlobal.cache.absWn; // avoid precision error\n//       updateState(state, globals);\n//       // Call recursively with resting duration\n//       rest = a - step;\n//       if (rest > 0) {\n//         stepState(state, Duration.coerce({num: rest, unit: 'wn'}), globals);\n//       }\n//     }\n//   }\n// }\n\n// function stepStateBw(state, duration, globals) {\n//   var rest;\n//   var step;\n//   var s;\n\n//   if (!duration.isTime) console.log('Duration is ', duration, ' in stepStateBw'); // if duration is not a Duration object\n//   if (duration.isTime()) {\n//     s = duration.toFloatSeconds();\n//     var prevTempo = getPrevGlobal(state.absTime, globals, 'Tempo');\n//     if (!prevTempo || (prevTempo.cache.absTime < (state.absTime + s))) {\n//       // Simple step\n//       state.absTime += s; // duration is negative\n//       state.absWn += s / state.sPerWn;\n//     } else {\n//       // Step to next tempo change\n//       step = prevTempo.cache.absTime - state.absTime;\n//       state.absTime = nextTempo.cache.absTime; // avoid precision error\n//       state.absWn += step / state.sPerWn;\n//       updateState(state, globals); // TODO!!\n//       // Call recursively with resting duration\n//       rest = s - step;\n//       if (rest < 0) {\n//         stepState(state, Duration.coerce({num: rest, unit: 's'}), globals);\n//       }\n//     }\n//   } else {\n//     var a;\n//     switch (duration.unit) {\n//       case 'wn': a = duration.toFloat(); break;\n//       case 'beats': a = wnPerBeat(state) * duration.toFloat(); break;\n//       case 'measures': a = wnPerMeasure(state) * duration.toFloat(); break;\n//       default:\n//         console.log('Bad duration unit: ' + duration.unit);\n//         throw Error('Bad duration unit: ' + duration.unit);\n//     }\n\n//     var prevGlobal = getPrevGlobal(state.absTime, globals);\n//     s = a * state.sPerWn;\n//     if (prevGlobal) console.log('prevGlobal: ', prevGlobal.type, prevGlobal.cache.absTime, 'state.absTime: ', state.absTime, 's: ', s);\n//     if (!prevGlobal || (prevGlobal.cache.absTime < (state.absTime + s))) {\n//       // Simple step\n//       // console.log('simple step', a);\n//       state.absTime += a * state.sPerWn;\n//       state.absWn += a;\n//     } else {\n//       // Step to next global\n//       step = prevGlobal.cache.absWn - state.absWn;\n//       console.log('split step', a, step, state.absWn, prevGlobal.cache.absWn);\n//       state.absTime += step * state.sPerWn;\n//       state.absWn = prevGlobal.cache.absWn; // avoid precision error\n//       updateState(state, globals); // TODO!\n//       // Call recursively with resting duration\n//       rest = a - step;\n//       if (rest < 0) {\n//         stepState(state, Duration.coerce({num: rest, unit: 'wn'}), globals);\n//       }\n//     }\n//   }\n// }\n\n// // function sPerWn(tempo) {\n// //   return 60 / (tempo.bpm * tempo.beat); // TODO: use fraction\n// // }\n\n// // temp\n// function wnPerBeat(state) {\n//   return new Fraction(state.time.beats[0], state.time.denom);\n// }\n\n// function wnPerMeasure(state) {\n//   return new Fraction(misc.sumArray(state.time.beats), state.time.denom);\n// }\n\n// function resolveGlobals(item, state, globals) {\n//   var oldState = copyState(state);\n//   item.cache.children.forEach(function(child) {\n//     if ((item instanceof VerticalContainer) || (item instanceof Song)) {\n//       state = copyState(oldState);\n//       // throw new Error('VerticalContainer cannot currently contain globals');\n//     }\n//     if (child.position && child.position.absolute) {\n//       if (!child.position.isTime()) console.log('Warning: absolute position is only supported for time units');\n//       state = copyState(oldState);\n//       stepState(state, child.position, globals);\n//       // throw new Error('Absolute positioning of globals not supported');\n//     } else if (child.position) {\n//       stepState(state, child.position, globals);\n//     }\n\n//     switch (child.type) {\n//       case 'Time':\n//         globals.push(child);\n//         state.time = child;\n//         state.sPerWn = state.tempo.sPerWn();\n//         console.log(state.absWn, state.absTime, 'At Time, new sPerWn: ', state.sPerWn);\n//         break;\n//       case 'Tempo':\n//         globals.push(child);\n//         state.tempo = child;\n//         state.sPerWn = state.tempo.sPerWn();\n//         console.log(state.absWn, state.absTime, 'At Tempo, new sPerWn: ', state.sPerWn);\n//         break;\n//     }\n//     child.cache.absWn = state.absWn;\n//     child.cache.absTime = state.absTime;\n\n//     resolveGlobals(child, state, globals);\n//   });\n//   state = oldState;\n// }\n\n// function resolveItem(item, state, globals, result) {\n//   var oldState = copyState(state);\n//   var maxEndTime = 0;\n//   var maxEndWn = 0;\n\n//   // Calculate left trim\n//   if (item.trimLeft && !item.trimLeft.isZero()) {\n//     stepState(state, item.trimLeft, globals);\n//     item.cache.trimmedStartWn = state.absWn;\n//     item.cache.trimmedStartTime = state.absTime;\n//     state = copyState(oldState);\n//   }\n\n//   item.cache.children.forEach(function(child) {\n//     // console.log('-- ', child.type, state.tempo, state.time);\n\n//     if ((item instanceof VerticalContainer) || (item instanceof Song)) { // item.type === 'VerticalContainer' || item.type === 'NoteChord') {\n//       state = copyState(oldState);\n//     }\n//     if (child.position && child.position.absolute) {\n//       if (!child.position.isTime()) console.log('Warning: absolute position is only supported for time units');\n//       state = copyState(oldState);\n//       stepState(state, child.position, globals);\n//     } else if (child.position) {\n//       stepState(state, child.position, globals);\n//     }\n\n//     var absWn = state.absWn;\n//     var absTime = state.absTime;\n//     child.cache.absWn = absWn;\n//     child.cache.absTime = absTime;\n\n//     resolveItem(child, state, globals, result);\n\n//     // If child has an explicit duration, use it\n//     if (child.duration) {\n//       stepState(state, child.duration, globals);\n//     } else if (child.cache.maxChildEndTime) {\n//     // Otherwise, check if child has a duration derived from its children\n//       var diff = child.cache.maxChildEndTime - state.absTime;\n//       stepState(state, Duration.coerce({num: diff, unit: 's'}), globals);\n//     } else if (item.duration && ((item instanceof VerticalContainer) || (item instanceof Song))) {\n//       // If the child still doesn't have a duration, expand children of VerticalContainer\n//       // (including inherited classes, such as NoteChord) to the duration of the parent\n//       stepState(state, item.duration, globals);\n//     }\n//     var endWn = state.absWn;\n//     var endTime = state.absTime;\n//     child.cache.endWn = endWn;\n//     child.cache.endTime = endTime;\n//     if (endTime > maxEndTime) maxEndTime = endTime;\n//     if (endWn > maxEndWn) maxEndWn = endWn;\n\n//     result.push({absWn: absWn, absTime: absTime, endWn: endWn, endTime: endTime, event: child});\n//   });\n\n//   // Calculate right trim\n//   // TODO: Are we in the right position (i.e. the end of the current event) here?\n//   if (item.trimRight && !item.trimRight.isZero()) {\n//     stepState(state, item.trimRight.inverse(), globals);\n//     item.cache.trimmedEndWn = state.absWn;\n//     item.cache.trimmedEndTime = state.absTime;\n//   }\n\n//   state = oldState;\n//   if (!item.duration && maxEndTime) {\n//     item.cache.maxChildEndTime = maxEndTime;\n//     // item.cache.endTime = maxEndTime;\n//     // item.cache.endWn = maxEndWn;\n//   }\n// }\n\n// function propagateTrim(item) {\n//   // Left trim\n//   if (item.parent && (item.parent.cache.trimmedStartTime !== undefined)) {\n//     if ((item.cache.trimmedStartTime === undefined) || (item.cache.trimmedStartTime < item.parent.cache.trimmedStartTime)) {\n//       item.cache.trimmedStartTime = item.parent.cache.trimmedStartTime;\n//       item.cache.trimmedStartWn = item.parent.cache.trimmedStartWn;\n//     }\n//   }\n\n//   // Right trim\n//   if (item.parent && (item.parent.cache.trimmedEndTime !== undefined)) {\n//     if ((item.cache.trimmedEndTime === undefined) || (item.cache.trimmedEndTime > item.parent.cache.trimmedEndTime)) {\n//       item.cache.trimmedEndTime = item.parent.cache.trimmedEndTime;\n//       item.cache.trimmedEndWn = item.parent.cache.trimmedEndWn;\n//     }\n//   }\n\n//   // Set trimmedStart and trimmedEnd\n//   if ((item.cache.trimmedStartTime !== undefined) && (item.cache.absTime < item.cache.trimmedStartTime)) {\n//     item.cache.trimmedStart = true;\n//     item.cache.skip = (item.cache.trimmedStartTime > item.cache.absTime) ? (item.cache.trimmedStartTime - item.cache.absTime) : 0;\n//     // TEMPORARY:\n//     // Set enabled to false for Notes or NoteChords that have a trimmed start\n//     if (((item.type === 'Note') || (item.type === 'NoteChord')) && (item.cache.skip > 0)) item.cache.enabled = false;\n//   }\n//   if ((item.cache.trimmedEndTime !== undefined) && item.cache.absTime > item.cache.trimmedEndTime) {\n//     item.cache.trimmedStart = true;\n//     if ((item.type === 'Note') || (item.type === 'NoteChord')) item.cache.enabled = false;\n//   }\n\n//   // Propagate to children\n//   if (item.cache.children) {\n//     item.cache.children.forEach(function(child) {\n//       propagateTrim(child);\n//     });\n//   }\n// }\n\n// export default {\n//   resolve: function(item) {\n//     // Set parents\n//     setParents(item);\n\n//     // Resolve time\n//     var globals = [];\n//     var state = {\n//       tempo: new Tempo({bpm: 120, beat: 1 / 4}),\n//       time: {beats: [1, 1, 1, 1], denom: 4},\n//       sPerWn: 2,\n//       absWn: 0,\n//       absTime: 0\n//     };\n//     resolveGlobals(item, state, globals);\n//     var firstTempo = _.find(globals, (x) => { return x.type === 'Tempo'; }) || new Tempo({ bpm: 120, beat: 1 / 4 });\n//     var firstTime = _.find(globals, (x) => { return x.type === 'Time'; }) || { beats: [1, 1, 1, 1], denom: 4 };\n//     // console.log('firstTempo: ', firstTempo, '  sPerWn: ', sPerWn(firstTempo));\n//     console.log('----- Resolving items ------');\n//     // Resolve time\n//     var result = [];\n//     state = {\n//       tempo: firstTempo,\n//       time: firstTime,\n//       sPerWn: firstTempo.sPerWn(),\n//       absWn: 0,\n//       absTime: 0\n//     };\n//     resolveItem(item, state, globals, result);\n//     if (!item.cache.absTime) {\n//       item.cache.absTime = 0;\n//       item.cache.absWn = 0;\n//     }\n//     propagateTrim(item);\n//     // console.log('State:   ', state);\n//     console.log('Globals:');\n//     globals.forEach(function(g) {\n//       console.log(g.cache.absWn, g.cache.absTime, g);\n//     });\n//     var items = result.sort(function(a, b) {\n//       return a.absTime - b.absTime;\n//     });\n//     var voices = _.filter(items, (x) => { return x.event instanceof Voice; });\n//     var programChanges = [];\n//     voices.forEach((v) => {\n//       var voice = v.event;\n//       // console.log('ok voice: ', voice);\n//       if (voice.sound && voice.cache.enabled) {\n//         programChanges.push({\n//           absWn: voice.cache.absWn,\n//           absTime: voice.cache.absTime,\n//           sound: voice.sound,\n//           channel: voice.channel\n//         });\n//       }\n//     });\n\n//     return {\n//       startTempo: firstTempo,\n//       voices: voices,\n//       programChanges: programChanges,\n//       events: items\n//     };\n//   }\n// };\n\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/resolver.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 576,
    "kind": "function",
    "name": "createState",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~createState",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/resolver.js",
    "importStyle": "{createState}",
    "description": null,
    "lineNumber": 8,
    "ignore": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      },
      {
        "name": "globals",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 577,
    "kind": "function",
    "name": "getNextGlobal",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~getNextGlobal",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "absTime",
        "types": [
          "*"
        ]
      },
      {
        "name": "globals",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "inclusive",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 578,
    "kind": "function",
    "name": "getPrevGlobal",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~getPrevGlobal",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "absTime",
        "types": [
          "*"
        ]
      },
      {
        "name": "globals",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "inclusive",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 579,
    "kind": "function",
    "name": "updateState",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~updateState",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/resolver.js",
    "importStyle": "{updateState}",
    "description": null,
    "lineNumber": 56,
    "ignore": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "meta",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 580,
    "kind": "function",
    "name": "maybeUpdateState",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~maybeUpdateState",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/resolver.js",
    "importStyle": "{maybeUpdateState}",
    "description": null,
    "lineNumber": 76,
    "ignore": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "globals",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 581,
    "kind": "function",
    "name": "stepState",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~stepState",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/resolver.js",
    "importStyle": "{stepState}",
    "description": null,
    "lineNumber": 86,
    "ignore": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "duration",
        "types": [
          "*"
        ]
      },
      {
        "name": "globals",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 582,
    "kind": "function",
    "name": "stepStateFw",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~stepStateFw",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "duration",
        "types": [
          "*"
        ]
      },
      {
        "name": "globals",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 583,
    "kind": "function",
    "name": "stepStateBw",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~stepStateBw",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "duration",
        "types": [
          "*"
        ]
      },
      {
        "name": "globals",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 584,
    "kind": "function",
    "name": "wnPerBeat",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~wnPerBeat",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 585,
    "kind": "function",
    "name": "wnPerMeasure",
    "memberof": "lib/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/resolver.js~wnPerMeasure",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 225,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 586,
    "kind": "file",
    "name": "lib/score/classes/score-bar.js",
    "content": "import ScoreMeta from './score-meta.js';\nimport ScoreClef from './score-clef.js';\n\nexport default class ScoreBar extends ScoreMeta {\n  updatePosition() {\n    super.updatePosition();\n    let staffSpace = this.score.staffSize * 0.25;\n    let staffSystem = this.score.staffSystems[this.staffSystem];\n    this.y1 = this.y - 2 * staffSpace;\n    this.y2 = this.y + 2 * staffSpace;\n    if (this.leftBarline) {\n      this.y2 += (staffSystem.staves.length - 1) * staffSystem.staffDistance;\n    }\n  }\n\n  minSpace(nextItem) {\n    if (nextItem instanceof ScoreClef) {\n      return 0.5;\n    } else {\n      return 1;\n    }\n  }\n\n  draw(ctx) {\n    ctx.save();\n\n    let staffSpace = this.score.staffSize * 0.25;\n\n    ctx.lineCap = 'butt';\n    ctx.lineWidth = 1.0;\n    ctx.beginPath();\n    ctx.moveTo(this.x, this.y - 2 * staffSpace);\n    ctx.lineTo(this.x, this.y + 2 * staffSpace);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  toSVG(svg) {\n    // let staffSpace = this.score.staffSize * 0.25;\n    let barlineThickness = 1;\n    let x = this.x + barlineThickness * 0.5;\n    svg.line(x, this.y1, x, this.y2).stroke({width: barlineThickness});\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-bar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 587,
    "kind": "class",
    "name": "ScoreBar",
    "memberof": "lib/score/classes/score-bar.js",
    "static": true,
    "longname": "lib/score/classes/score-bar.js~ScoreBar",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-bar.js",
    "importStyle": "ScoreBar",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-meta.js~ScoreMeta"
    ]
  },
  {
    "__docId__": 588,
    "kind": "method",
    "name": "updatePosition",
    "memberof": "lib/score/classes/score-bar.js~ScoreBar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-bar.js~ScoreBar#updatePosition",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 589,
    "kind": "member",
    "name": "y1",
    "memberof": "lib/score/classes/score-bar.js~ScoreBar",
    "static": false,
    "longname": "lib/score/classes/score-bar.js~ScoreBar#y1",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 590,
    "kind": "member",
    "name": "y2",
    "memberof": "lib/score/classes/score-bar.js~ScoreBar",
    "static": false,
    "longname": "lib/score/classes/score-bar.js~ScoreBar#y2",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 592,
    "kind": "method",
    "name": "minSpace",
    "memberof": "lib/score/classes/score-bar.js~ScoreBar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-bar.js~ScoreBar#minSpace",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "nextItem",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 593,
    "kind": "method",
    "name": "draw",
    "memberof": "lib/score/classes/score-bar.js~ScoreBar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-bar.js~ScoreBar#draw",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 594,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-bar.js~ScoreBar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-bar.js~ScoreBar#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 595,
    "kind": "file",
    "name": "lib/score/classes/score-bracket.js",
    "content": "import ScoreItem from './score-item.js';\n\nexport default class ScoreBracket extends ScoreItem {\n  constructor(item, score, params) {\n    super(item, score, params);\n    this.kind = this.kind || 'bracket';\n    this.thickness = score.engravingDefaults.bracketThickness || 0.5;\n  }\n\n  updatePosition() {\n    let staffSpace = this.score.staffSize * 0.25;\n    let staffSystem = this.staffSystem;\n\n    this.y1 = -2.5 * staffSpace;\n    this.y2 = (staffSystem.staves.length - 1) * staffSystem.staffDistance + (staffSpace * 2.5);\n\n    this.x = staffSystem.indent + staffSpace * ((this.xOffset || 0) - this.thickness + -0.25);\n    this.y = this.y1 + staffSpace * (this.yOffset || 0);\n  }\n\n  toSVG(svg) {\n    switch (this.kind) {\n      case 'brace':\n        svg.plain('\\ue000').x(this.x).attr('y', this.y).font({family: null, size: null});\n        break;\n      case 'bracket':\n        // let halfLineWidth = 0.5 * this.staffSystem.staffLineWidth;\n        let thickness = this.thickness * this.score.staffSize * 0.25;\n        let line = svg.line(this.x, this.y1, this.x, this.y2);\n        line.stroke({width: thickness});\n        let hookX = this.x - thickness * 0.5;\n        svg.plain('\\ue003').x(hookX).attr('y', this.y1).font({family: null, size: null});\n        svg.plain('\\ue004').x(hookX).attr('y', this.y2).font({family: null, size: null});\n        break;\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-bracket.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 596,
    "kind": "class",
    "name": "ScoreBracket",
    "memberof": "lib/score/classes/score-bracket.js",
    "static": true,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-bracket.js",
    "importStyle": "ScoreBracket",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-item.js~ScoreItem"
    ]
  },
  {
    "__docId__": 597,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/classes/score-bracket.js~ScoreBracket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 598,
    "kind": "member",
    "name": "kind",
    "memberof": "lib/score/classes/score-bracket.js~ScoreBracket",
    "static": false,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket#kind",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 599,
    "kind": "member",
    "name": "thickness",
    "memberof": "lib/score/classes/score-bracket.js~ScoreBracket",
    "static": false,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket#thickness",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 600,
    "kind": "method",
    "name": "updatePosition",
    "memberof": "lib/score/classes/score-bracket.js~ScoreBracket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket#updatePosition",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 601,
    "kind": "member",
    "name": "y1",
    "memberof": "lib/score/classes/score-bracket.js~ScoreBracket",
    "static": false,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket#y1",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 602,
    "kind": "member",
    "name": "y2",
    "memberof": "lib/score/classes/score-bracket.js~ScoreBracket",
    "static": false,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket#y2",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 603,
    "kind": "member",
    "name": "x",
    "memberof": "lib/score/classes/score-bracket.js~ScoreBracket",
    "static": false,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket#x",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 604,
    "kind": "member",
    "name": "y",
    "memberof": "lib/score/classes/score-bracket.js~ScoreBracket",
    "static": false,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket#y",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 605,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-bracket.js~ScoreBracket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-bracket.js~ScoreBracket#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 606,
    "kind": "file",
    "name": "lib/score/classes/score-clef.js",
    "content": "import ScoreMeta from './score-meta.js';\nimport knowledge from '../knowledge.js';\n\nexport default class ScoreClef extends ScoreMeta {\n  constructor(item, score, params) {\n    super(item, score, params);\n    if (this.voice && this.voice.kind && (this.voice.kind === 'drums' || this.voice.kind === 'single-drum')) {\n      this.kind = this.kind || 'unpitched1';\n      this.glyphName = 'unpitchedPercussionClef1';\n    } else {\n      this.kind = this.kind || 'g';\n      if (this.kind === 'unpitched1') {\n        this.glyphName = 'unpitchedPercussionClef1';\n      } else {\n        this.glyphName = this.kind + 'Clef';\n        if (this.octave === 1) this.glyphName += '8va';\n        else if (this.octave === -1) this.glyphName += '8vb';\n      }\n    }\n  }\n\n  innerWidth() {\n    let glyphData = this.score.musicFontMetadata.glyphBBoxes;\n    let glyphName = this.glyphName;\n    if (glyphData[glyphName]) {\n      return glyphData[glyphName].bBoxNE[0];\n    } else {\n      console.log('Missing font metrics for ' + glyphName);\n      return 3;\n    }\n  }\n\n  visibleYPos() {\n    switch (this.kind) {\n      case 'g': return 1;\n      case 'f': return -1;\n      case 'c': return 0;\n      default: return 0;\n    }\n  }\n\n  toSVG(svg) {\n    let smufl = knowledge.smuflCodepoints;\n    svg.plain(smufl[this.glyphName]).x(this.x).attr('y', this.y).font({family: null, size: null});\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-clef.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 607,
    "kind": "class",
    "name": "ScoreClef",
    "memberof": "lib/score/classes/score-clef.js",
    "static": true,
    "longname": "lib/score/classes/score-clef.js~ScoreClef",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-clef.js",
    "importStyle": "ScoreClef",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-meta.js~ScoreMeta"
    ]
  },
  {
    "__docId__": 608,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/classes/score-clef.js~ScoreClef",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-clef.js~ScoreClef#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 609,
    "kind": "member",
    "name": "kind",
    "memberof": "lib/score/classes/score-clef.js~ScoreClef",
    "static": false,
    "longname": "lib/score/classes/score-clef.js~ScoreClef#kind",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 610,
    "kind": "member",
    "name": "glyphName",
    "memberof": "lib/score/classes/score-clef.js~ScoreClef",
    "static": false,
    "longname": "lib/score/classes/score-clef.js~ScoreClef#glyphName",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 616,
    "kind": "method",
    "name": "innerWidth",
    "memberof": "lib/score/classes/score-clef.js~ScoreClef",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-clef.js~ScoreClef#innerWidth",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 617,
    "kind": "method",
    "name": "visibleYPos",
    "memberof": "lib/score/classes/score-clef.js~ScoreClef",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-clef.js~ScoreClef#visibleYPos",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 618,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-clef.js~ScoreClef",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-clef.js~ScoreClef#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 619,
    "kind": "file",
    "name": "lib/score/classes/score-detail.js",
    "content": "import ScoreItem from './score-item.js';\n\nexport default class ScoreDetail extends ScoreItem {\n  constructor(item, score, params) {\n    super(item, score, params);\n    this.owner = this.owner || null;\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-detail.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 620,
    "kind": "class",
    "name": "ScoreDetail",
    "memberof": "lib/score/classes/score-detail.js",
    "static": true,
    "longname": "lib/score/classes/score-detail.js~ScoreDetail",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-detail.js",
    "importStyle": "ScoreDetail",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-item.js~ScoreItem"
    ]
  },
  {
    "__docId__": 621,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/classes/score-detail.js~ScoreDetail",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-detail.js~ScoreDetail#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 622,
    "kind": "member",
    "name": "owner",
    "memberof": "lib/score/classes/score-detail.js~ScoreDetail",
    "static": false,
    "longname": "lib/score/classes/score-detail.js~ScoreDetail#owner",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 623,
    "kind": "file",
    "name": "lib/score/classes/score-event.js",
    "content": "import ScoreItem from './score-item.js';\n\nexport default class ScoreEvent extends ScoreItem {\n  get fixedWidth() {\n    return false;\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-event.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 624,
    "kind": "class",
    "name": "ScoreEvent",
    "memberof": "lib/score/classes/score-event.js",
    "static": true,
    "longname": "lib/score/classes/score-event.js~ScoreEvent",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-event.js",
    "importStyle": "ScoreEvent",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-item.js~ScoreItem"
    ]
  },
  {
    "__docId__": 625,
    "kind": "get",
    "name": "fixedWidth",
    "memberof": "lib/score/classes/score-event.js~ScoreEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-event.js~ScoreEvent#fixedWidth",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 626,
    "kind": "file",
    "name": "lib/score/classes/score-item.js",
    "content": "export default class ScoreItem {\n  constructor(item, score, params) {\n    this.item = item;\n    this.score = score;\n    for (let param in params) {\n      this[param] = params[param];\n    }\n    this.leftExtent = 0;  // TEMP\n    this.rightExtent = 0;\n  }\n\n  get floating() {\n    return false;\n  }\n\n  get fixedWidth() {\n    return true;\n  }\n\n  visibleYPos() {\n    return 0;\n  }\n\n  innerWidth() {\n    return 0;\n  }\n\n  minSpace(nextItem) {\n    return 0.5;\n  }\n\n  flexibleSpace(nextItem) {\n    return 0;\n  }\n\n  updateExtents() {\n    this.leftExtent = 0;\n    this.rightExtent = 0;\n  }\n\n  updatePosition() {\n    let staffSpace = this.score.staffSize * 0.25;\n    this.x = this.scoreX + staffSpace * (this.xOffset || 0);\n    this.y = this.staffY + staffSpace * ((this.yOffset || 0) + this.visibleYPos());\n  }\n\n  updateBounds() {\n    let staffSpace = this.score.staffSize * 0.25;\n    let boundingBox = this.boundingBox();\n    let scale = this.scale || 1;\n    this.bounds = {\n      minX: this.x + staffSpace * scale * boundingBox.left,\n      minY: this.y + staffSpace * scale * boundingBox.top,\n      maxX: this.x + staffSpace * scale * boundingBox.right,\n      maxY: this.y + staffSpace * scale * boundingBox.bottom\n    };\n  }\n\n  boundingBox() {\n    return {\n      left: -this.leftExtent,\n      top: -2,\n      right: this.innerWidth() + this.rightExtent,\n      bottom: 2\n    };\n  }\n\n  defaultColor() {\n    if (this.selected) return 'blue';\n    if (this.hovered) return 'red';\n    return 'black';\n  }\n\n  draw(ctx) {\n    console.log('Canvas drawing not implemented for ', this);\n  }\n\n  toSVG(svg) {\n    console.log('SVG drawing not implemented for ', this);\n  }\n}\n\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 627,
    "kind": "class",
    "name": "ScoreItem",
    "memberof": "lib/score/classes/score-item.js",
    "static": true,
    "longname": "lib/score/classes/score-item.js~ScoreItem",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-item.js",
    "importStyle": "ScoreItem",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 628,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 629,
    "kind": "member",
    "name": "item",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#item",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 630,
    "kind": "member",
    "name": "score",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#score",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 631,
    "kind": "member",
    "name": "[param]",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#[param]",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 632,
    "kind": "member",
    "name": "leftExtent",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#leftExtent",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 633,
    "kind": "member",
    "name": "rightExtent",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#rightExtent",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 634,
    "kind": "get",
    "name": "floating",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#floating",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 635,
    "kind": "get",
    "name": "fixedWidth",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#fixedWidth",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 636,
    "kind": "method",
    "name": "visibleYPos",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#visibleYPos",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 637,
    "kind": "method",
    "name": "innerWidth",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#innerWidth",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 638,
    "kind": "method",
    "name": "minSpace",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#minSpace",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "nextItem",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 639,
    "kind": "method",
    "name": "flexibleSpace",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#flexibleSpace",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "nextItem",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 640,
    "kind": "method",
    "name": "updateExtents",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#updateExtents",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 643,
    "kind": "method",
    "name": "updatePosition",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#updatePosition",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 644,
    "kind": "member",
    "name": "x",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#x",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 645,
    "kind": "member",
    "name": "y",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#y",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 646,
    "kind": "method",
    "name": "updateBounds",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#updateBounds",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 647,
    "kind": "member",
    "name": "bounds",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#bounds",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "{\"minX\": *, \"minY\": *, \"maxX\": *, \"maxY\": *}"
      ]
    }
  },
  {
    "__docId__": 648,
    "kind": "method",
    "name": "boundingBox",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#boundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"left\": *, \"top\": *, \"right\": *, \"bottom\": number}"
      ]
    }
  },
  {
    "__docId__": 649,
    "kind": "method",
    "name": "defaultColor",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#defaultColor",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 650,
    "kind": "method",
    "name": "draw",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#draw",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 651,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-item.js~ScoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-item.js~ScoreItem#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 652,
    "kind": "file",
    "name": "lib/score/classes/score-key.js",
    "content": "import ScoreMeta from './score-meta.js';\nimport ScoreTime from './score-time.js';\nimport ScoreNoteChord from './score-note-chord.js';\nimport scoreKnowledge from '../knowledge.js';\n// import knowledge from '../../knowledge.js';\n\nexport default class ScoreKey extends ScoreMeta {\n  constructor(item, score, params) {\n    super(item, score, params);\n    if (item) {\n      this.root = item.root;\n      this.mode = item.mode;\n      this.fifths = this.root.fifths();\n      let modeName = this.mode.getName();\n      if (modeName === 'major') {\n      } else if (modeName === 'minor') {\n        this.fifths -= 3;\n      }\n    } else {\n      this.root = null;\n      this.mode = null;\n      this.fifths = 0;\n    }\n    this.accidentals = [0, 0, 0, 0, 0, 0, 0];\n    this.positions = [];\n    if (this.fifths < 0) {\n      this.positions = scoreKnowledge.keySignatures.flat.slice(0, -this.fifths);\n      // TODO: don't hardcode, and don't limit to \"simple\" modes\n      for (let n = 0; n < -this.fifths; n++) {\n        // this.accidentals[['b', 'e', 'a', 'd', 'g', 'c', 'f'][n]] = -1;\n        this.accidentals[[6, 2, 5, 1, 4, 0, 3][n]] = -1;\n      }\n    } else if (this.fifths > 0) {\n      this.positions = scoreKnowledge.keySignatures.sharp.slice(0, this.fifths);\n      for (let n = 0; n < this.fifths; n++) {\n        // this.accidentals[['f', 'c', 'g', 'd', 'a', 'e', 'b'][n]] = 1;\n        this.accidentals[[3, 0, 4, 1, 5, 2, 6][n]] = 1;\n      }\n    }\n  }\n\n  innerWidth() {\n    return 1 * Math.abs(this.fifths);\n  }\n\n  minSpace(nextItem) {\n    if (nextItem instanceof ScoreTime) {\n      return 0.5;\n    } else if (nextItem instanceof ScoreNoteChord) {\n      return 2;\n    } else {\n      return 1;\n    }\n  }\n\n  toSVG(svg) {\n    let staffSize = this.score.staffSize;\n    let staffSpace = staffSize * 0.25;\n    if (this.fifths < 0) {\n      for (let n = 0; n < -this.fifths; n++) {\n        svg.smuflGlyph('accidentalFlat', this.x + n * staffSpace * 1, this.y - this.positions[n] * staffSpace * 0.5, staffSize);\n      }\n    } else if (this.fifths > 0) {\n      for (let n = 0; n < this.fifths; n++) {\n        svg.smuflGlyph('accidentalSharp', this.x + n * staffSpace * 1, this.y - this.positions[n] * staffSpace * 0.5, staffSize);\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-key.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 653,
    "kind": "class",
    "name": "ScoreKey",
    "memberof": "lib/score/classes/score-key.js",
    "static": true,
    "longname": "lib/score/classes/score-key.js~ScoreKey",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-key.js",
    "importStyle": "ScoreKey",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-meta.js~ScoreMeta"
    ]
  },
  {
    "__docId__": 654,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/classes/score-key.js~ScoreKey",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-key.js~ScoreKey#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 655,
    "kind": "member",
    "name": "root",
    "memberof": "lib/score/classes/score-key.js~ScoreKey",
    "static": false,
    "longname": "lib/score/classes/score-key.js~ScoreKey#root",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 656,
    "kind": "member",
    "name": "mode",
    "memberof": "lib/score/classes/score-key.js~ScoreKey",
    "static": false,
    "longname": "lib/score/classes/score-key.js~ScoreKey#mode",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 657,
    "kind": "member",
    "name": "fifths",
    "memberof": "lib/score/classes/score-key.js~ScoreKey",
    "static": false,
    "longname": "lib/score/classes/score-key.js~ScoreKey#fifths",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 662,
    "kind": "member",
    "name": "accidentals",
    "memberof": "lib/score/classes/score-key.js~ScoreKey",
    "static": false,
    "longname": "lib/score/classes/score-key.js~ScoreKey#accidentals",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    }
  },
  {
    "__docId__": 663,
    "kind": "member",
    "name": "positions",
    "memberof": "lib/score/classes/score-key.js~ScoreKey",
    "static": false,
    "longname": "lib/score/classes/score-key.js~ScoreKey#positions",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 666,
    "kind": "method",
    "name": "innerWidth",
    "memberof": "lib/score/classes/score-key.js~ScoreKey",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-key.js~ScoreKey#innerWidth",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 667,
    "kind": "method",
    "name": "minSpace",
    "memberof": "lib/score/classes/score-key.js~ScoreKey",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-key.js~ScoreKey#minSpace",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "nextItem",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 668,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-key.js~ScoreKey",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-key.js~ScoreKey#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 669,
    "kind": "file",
    "name": "lib/score/classes/score-meta.js",
    "content": "import ScoreItem from './score-item.js';\n\nexport default class ScoreMeta extends ScoreItem {\n\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-meta.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 670,
    "kind": "class",
    "name": "ScoreMeta",
    "memberof": "lib/score/classes/score-meta.js",
    "static": true,
    "longname": "lib/score/classes/score-meta.js~ScoreMeta",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-meta.js",
    "importStyle": "ScoreMeta",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-item.js~ScoreItem"
    ]
  },
  {
    "__docId__": 671,
    "kind": "file",
    "name": "lib/score/classes/score-note-chord.js",
    "content": "import ScoreEvent from './score-event.js';\n\nexport default class ScoreNoteChord extends ScoreEvent {\n\n  //  Calculates the default stem direction, the rule are the same\n  //  regardles of if the notes are on the same stem or in the same beam:\n  //  The note farthest away from the middle line determines the stem direction.\n  //  in case of a tie, down is favoured.\n  defaultStemDirection() {\n    let min = this.notes[0].staffLine;\n    let max = this.notes[this.notes.length - 1].staffLine;\n    // for (let note of this.notes) {\n    //   min = Math.min(min, note.staffLine);\n    //   max = Math.max(max, note.staffLine);\n    // }\n    let furthest = (Math.abs(min) > Math.abs(max)) ? min : max;\n    return furthest > 0 ? 'up' : 'down';\n  }\n\n  innerWidth() {\n    return Math.max(...this.notes.map(n => n._notehead.bbox.bBoxNE[0]));\n  }\n\n  boundingBox() {\n    return {\n      left: -this.leftExtent,\n      top: this.stem.direction === 'up' ? this.stem.end : this.stem.extent,\n      right: this.innerWidth() + this.rightExtent,\n      bottom: this.stem.direction === 'up' ? this.stem.extent : this.stem.end\n    };\n  }\n\n  updateExtents() {\n    let staffSpace = this.score.staffSize * 0.25;\n    this.leftExtent = this.accidentalX || 0;\n    let flagExtent = this.flags && !this.beam ? 1 * staffSpace : 0;\n    let dotExtent = this.dots * staffSpace * this.score.musicFontMetadata.glyphBBoxes['augmentationDot'].bBoxNE[0] * 2;\n    this.rightExtent = Math.max(flagExtent, dotExtent);\n  }\n\n/**\n *  Returns the y coordinate (in staff spaces) of the stem start (at a note head)\n *  > 1 notes and stem direction are taken into account\n *\n *  As a secondary value, returns the y coordinate of the outermost edge of the outermost notehead\n *  (usable for calculating the bounding box)\n*/\n  getStemStart() {\n    let notes = this.notes;\n    // TODO: use notehead metrics\n    if (this.stem.direction === 'up') {\n      let note = notes[notes.length - 1];\n      let y = note.visibleYPos();\n      return {\n        start: y,\n        extent: y + 0.5\n      };\n    } else {\n      let note = notes[0];\n      let y = note.visibleYPos();\n      return {\n        start: y,\n        extent: y - 0.5\n      };\n    }\n  }\n\n /**\n  *  Returns the y coordinate of the stem end (in staff spaces), as if the event is not beamed\n  *  > 1 notes and stem direction are taken into account\n  */\n  getStemEnd() {\n    let notes = this.notes;\n    let note;\n    let spacePerFlag = 1;\n\n    if (notes.length > 1) {\n      note = this.stem.direction === 'up' ? notes[0] : notes[notes.length - 1];\n    } else {\n      note = notes[0];\n    }\n\n    // Special case: whole notes don't have a stem\n    if (this.noteValue === 'w') {\n      return note.visibleYPos() + this.stem.direction === 'up' ? -0.5 : 0.5;\n    }\n\n    // Manual stem length\n    // if () {\n    //\n    // }\n\n    // Stem up\n    if (this.stem.direction === 'up') {\n      // Default is one octave = 3.5 spaces, but shorter stem when note is above the middle staff line\n      let result = note.visibleYPos() + (note.staffLine < 0 ? -2.7 : -3.5);\n      // Add space for each flag/beam after the first two\n      if (this.flags > 2) {\n        result -= (this.flags - 2) * spacePerFlag;\n      }\n      // Stem goes at least to the middle staff line\n      if (note.staffLine > 0) {\n        result = Math.min(result, 0);\n      }\n      return result;\n    } else {\n      // Stem down\n      // Default is one octave = 3.5 spaces, but shorter stem when note is below the middle staff line\n      let result = note.visibleYPos() + (note.staffLine > 0 ? 2.7 : 3.5);\n      // Add space for each flag/beam after the first two\n      if (this.flags > 2) {\n        result += (this.flags - 2) * spacePerFlag;\n      }\n      // Stem goes at least to the middle staff line\n      if (note.staffLine < 0) {\n        result = Math.max(result, 0);\n      }\n      return result;\n    }\n  }\n\n  draw(ctx) {\n    ctx.save();\n    ctx.lineCap = 'butt';\n    ctx.fillStyle = this.defaultColor();\n\n    let staffSpace = this.score.staffSize * 0.25;\n    let stemThickness = staffSpace * (this.score.engravingDefaults.stemThickness || 0.12);\n    let beamThickness = staffSpace * (this.score.engravingDefaults.beamThickness || 0.5);\n    let beamSpacing = staffSpace * (this.score.engravingDefaults.beamSpacing || 0.25);\n    let xAdjust = stemThickness * 0.5;\n\n    // Draw notes and collect info about y positions\n    let min = this.notes[0].staffLine;\n    let max = this.notes[0].staffLine;\n    for (let note of this.notes) {\n      min = Math.min(min, note.staffLine);\n      max = Math.max(max, note.staffLine);\n      note.draw(ctx);\n    }\n\n    // Draw leger lines if needed\n    if (min <= -3) {\n      min = Math.ceil(min);\n      ctx.beginPath();\n      for (let i = -3; i >= min; i--) {\n        ctx.moveTo(this.scoreX - 2, this.staffY + i * staffSpace);\n        ctx.lineTo(this.scoreX + 10, this.staffY + i * staffSpace);\n      }\n      ctx.lineWidth = staffSpace * (this.score.engravingDefaults.legerLineThickness || 0.16);\n      ctx.stroke();\n    }\n    if (max >= 3) {\n      max = Math.floor(max);\n      ctx.beginPath();\n      for (let i = 3; i <= max; i++) {\n        ctx.moveTo(this.scoreX - 2, this.staffY + i * staffSpace);\n        ctx.lineTo(this.scoreX + 10, this.staffY + i * staffSpace);\n      }\n      ctx.lineWidth = staffSpace * (this.score.engravingDefaults.legerLineThickness || 0.16);\n      ctx.stroke();\n    }\n\n    // Draw stem and flags\n    ctx.lineWidth = stemThickness;\n    if (this.noteValue === 'w') {\n      // No stem\n    } else if (this.stem.direction === 'up') {\n      let x = this.scoreX + (this.stemX || 0);\n      // Stem\n      // Small adjustment: if there is a beam and it is sloped, the outermost stem will be a little too long.\n      // We compensate by shortening the stem. Instead of calculating an exact amount,\n      // we trust that the stem end will be covered by the beam anyway.\n      let stemEnd = this.stem.end + (this.beam ? 0.25 : 0);\n      ctx.beginPath();\n      ctx.moveTo(x, this.staffY + staffSpace * this.stem.start);\n      ctx.lineTo(x, this.staffY + staffSpace * stemEnd);\n      ctx.stroke();\n      // Flag\n      if (!this.beam) {\n        x -= xAdjust; // correct?\n        switch (this.noteValue) {\n          case '8': ctx.fillText('\\uE240', x, this.staffY + staffSpace * this.stem.end); break;\n          case '16': ctx.fillText('\\uE242', x, this.staffY + staffSpace * this.stem.end); break;\n          case '32': ctx.fillText('\\uE244', x, this.staffY + staffSpace * this.stem.end); break;\n          case '64': ctx.fillText('\\uE246', x, this.staffY + staffSpace * this.stem.end); break;\n        }\n      }\n    } else {\n      let x = this.scoreX + (this.stemX || 0);\n      // Stem\n      let stemEnd = this.stem.end - (this.beam ? 0.25 : 0);\n      ctx.beginPath();\n      ctx.moveTo(x, this.staffY + staffSpace * this.stem.start);\n      ctx.lineTo(x, this.staffY + staffSpace * stemEnd);\n      ctx.stroke();\n      // Flag\n      if (!this.beam) {\n        x -= xAdjust; // correct?\n        switch (this.noteValue) {\n          case '8': ctx.fillText('\\uE241', x, this.staffY + staffSpace * this.stem.end); break;\n          case '16': ctx.fillText('\\uE243', x, this.staffY + staffSpace * this.stem.end); break;\n          case '32': ctx.fillText('\\uE245', x, this.staffY + staffSpace * this.stem.end); break;\n          case '64': ctx.fillText('\\uE247', x, this.staffY + staffSpace * this.stem.end); break;\n        }\n      }\n    }\n\n    // Draw beams\n    if (this.beam && this.beam.events[0] === this) {\n      let beamEvents = this.beam.events;\n      let firstEvent = beamEvents[0];\n      let lastEvent = beamEvents[beamEvents.length - 1];\n      let firstX = firstEvent.x + (firstEvent.stemX || 0);\n      let lastX = lastEvent.x + (lastEvent.stemX || 0);\n      let firstY = this.staffY + staffSpace * firstEvent.stem.end;\n      let lastY = this.staffY + staffSpace * lastEvent.stem.end;\n      let slope = (lastY - firstY) / (lastX - firstX);\n\n      if (this.stem.direction === 'down') firstY -= beamThickness;\n\n      // console.log('Drawing beam: ', this.beam, firstY, lastY, this.staffY, slope, firstX, lastX);\n      for (let level of this.beam.beams) {\n        // console.log('  Level: ', level);\n        for (let beam of level) {\n          let event1 = beam[0];\n          let event2 = beam[beam.length - 1];\n          let x1 = event1.x + (event1.stemX || 0) - xAdjust;\n          let x2 = event2.x + (event2.stemX || 0) + xAdjust;\n\n          // Beamlet\n          // TODO: make sure they always point in the correct direction\n          if (event1 === event2) {\n            if (event1 === firstEvent) {\n              x2 = x1 + staffSpace * 1.1;\n            } else {\n              x1 = x2 - staffSpace * 1.1;\n            }\n          }\n\n          let y1 = firstY + (x1 - firstX) * slope;\n          let y2 = firstY + (x2 - firstX) * slope;\n\n          // console.log('  Drawing [' + x1 + ' ' + y1 + ' ' + x2 + ' ' + y2 + ']');\n\n          ctx.beginPath();\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x2, y2);\n          ctx.lineTo(x2, y2 + beamThickness);\n          ctx.lineTo(x1, y1 + beamThickness);\n          ctx.closePath();\n          ctx.fill();\n        }\n        if (this.stem.direction === 'up') {\n          firstY += beamThickness + beamSpacing;\n        } else {\n          firstY -= beamThickness + beamSpacing;\n        }\n      }\n    }\n    ctx.restore();\n  }\n\n  toSVG(svg) {\n    svg.fill(this.defaultColor());\n    svg.addClass('ScoreNoteChord');\n    svg.addClass('voice-' + this.voice.id);\n    // lineCap = 'butt';\n\n    let score = this.score;\n    let staffSpace = score.staffSize * 0.25;\n    let stemThickness = staffSpace * (score.engravingDefaults.stemThickness || 0.12);\n    let beamThickness = staffSpace * (score.engravingDefaults.beamThickness || 0.5);\n    let beamSpacing = staffSpace * (score.engravingDefaults.beamSpacing || 0.25);\n    let xAdjust = stemThickness * 0.5;\n\n    // Draw notes and collect info about y positions\n    let min = this.notes[0].staffLine;\n    let max = this.notes[0].staffLine;\n    for (let note of this.notes) {\n      min = Math.min(min, note.staffLine);\n      max = Math.max(max, note.staffLine);\n      let group = svg.group();\n      note.toSVG(group);\n      group.addClass('ScoreNote');\n      group.addClass('voice-' + this.voice.id);\n      // Add references\n      note.svgElement = group;\n      score.itemsBySVGID[group.id()] = note;\n      // Attach message handlers\n      group.on('mouseenter', score.handleMouseEnter.bind(score));\n      group.on('mouseleave', score.handleMouseLeave.bind(score));\n      group.on('click', score.handleClick.bind(score));\n    }\n\n    // Draw syllables\n    for (let syllable of this.syllables) {\n      let group = svg.group();\n      syllable.toSVG(group);\n      group.addClass('ScoreSyllable');\n      group.addClass('ScoreItem');\n      // Add references\n      syllable.svgElement = group;\n      score.itemsBySVGID[group.id()] = syllable;\n      // Attach message handlers\n      group.on('mouseenter', score.handleMouseEnter.bind(score));\n      group.on('mouseleave', score.handleMouseLeave.bind(score));\n      group.on('click', score.handleClick.bind(score));\n    }\n\n    // Draw leger lines if needed\n    if (min <= -3) {\n      min = Math.ceil(min);\n      let legerLines = svg.group().stroke({width: staffSpace * (this.score.engravingDefaults.legerLineThickness || 0.16)});\n      let ext = staffSpace * (this.score.engravingDefaults.legerLineExtension || 0.4);\n      for (let i = -3; i >= min; i--) {\n        legerLines.line(this.scoreX - ext, this.staffY + i * staffSpace, this.scoreX + this.innerWidth() * staffSpace + ext, this.staffY + i * staffSpace);\n      }\n    }\n    if (max >= 3) {\n      max = Math.floor(max);\n      let legerLines = svg.group().stroke({width: staffSpace * (this.score.engravingDefaults.legerLineThickness || 0.16)});\n      let ext = staffSpace * (this.score.engravingDefaults.legerLineExtension || 0.4);\n      for (let i = 3; i <= max; i++) {\n        legerLines.line(this.scoreX - ext, this.staffY + i * staffSpace, this.scoreX + this.innerWidth() * staffSpace + ext, this.staffY + i * staffSpace);\n      }\n    }\n\n    // Draw stem and flags\n    if (this.noteValue === 'w') {\n      // No stem for whole notes\n    } else if (this.stem.direction === 'up') {\n      let x = this.scoreX + (this.stemX || 0);\n      // Stem\n      // Small adjustment: if there is a beam and it is sloped, the outermost stem will be a little too long.\n      // We compensate by shortening the stem. Instead of calculating an exact amount,\n      // we trust that the stem end will be covered by the beam anyway.\n      let stemEnd = this.stem.end + (this.beam ? 0.25 : 0);\n      let line = svg.line(x, this.staffY + staffSpace * this.stem.start, x, this.staffY + staffSpace * stemEnd).addClass('stem');\n      line.stroke({width: stemThickness});\n      // Flag\n      if (!this.beam) {\n        x -= xAdjust; // correct?\n        let y = this.staffY + staffSpace * this.stem.end;\n        switch (this.noteValue) {\n          case '8': svg.plain('\\uE240').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '16': svg.plain('\\uE242').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '32': svg.plain('\\uE244').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '64': svg.plain('\\uE246').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '128': svg.plain('\\uE248').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '256': svg.plain('\\uE24A').x(x).attr('y', y).font({family: null, size: null}); break;\n        }\n      }\n    } else {\n      let x = this.scoreX + (this.stemX || 0);\n      // Stem\n      let stemEnd = this.stem.end - (this.beam ? 0.25 : 0);\n      let line = svg.line(x, this.staffY + staffSpace * this.stem.start, x, this.staffY + staffSpace * stemEnd).addClass('stem');\n      line.stroke({width: stemThickness});\n      // // Flag\n      if (!this.beam) {\n        x -= xAdjust; // correct?\n        let y = this.staffY + staffSpace * this.stem.end;\n        switch (this.noteValue) {\n          case '8': svg.plain('\\uE241').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '16': svg.plain('\\uE243').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '32': svg.plain('\\uE245').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '64': svg.plain('\\uE247').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '128': svg.plain('\\uE249').x(x).attr('y', y).font({family: null, size: null}); break;\n          case '256': svg.plain('\\uE24B').x(x).attr('y', y).font({family: null, size: null}); break;\n        }\n      }\n    }\n\n    // Draw beams\n    if (this.beam && this.beam.events[0] === this) {\n      let beamEvents = this.beam.events;\n      let firstEvent = beamEvents[0];\n      let lastEvent = beamEvents[beamEvents.length - 1];\n      let firstX = firstEvent.x + (firstEvent.stemX || 0);\n      let lastX = lastEvent.x + (lastEvent.stemX || 0);\n      let firstY = this.staffY + staffSpace * firstEvent.stem.end;\n      let lastY = this.staffY + staffSpace * lastEvent.stem.end;\n      let slope = (lastY - firstY) / (lastX - firstX);\n\n      if (this.stem.direction === 'down') firstY -= beamThickness;\n\n      // console.log('Drawing beam: ', this.beam, firstY, lastY, this.staffY, slope, firstX, lastX);\n      for (let level of this.beam.beams) {\n        // console.log('  Level: ', level);\n        for (let beam of level) {\n          let event1 = beam[0];\n          let event2 = beam[beam.length - 1];\n          let x1 = event1.x + (event1.stemX || 0) - xAdjust;\n          let x2 = event2.x + (event2.stemX || 0) + xAdjust;\n\n          // Beamlet\n          // TODO: make sure they always point in the correct direction\n          if (event1 === event2) {\n            if (event1 === firstEvent) {\n              x2 = x1 + staffSpace * 1.1;\n            } else {\n              x1 = x2 - staffSpace * 1.1;\n            }\n          }\n\n          let y1 = firstY + (x1 - firstX) * slope;\n          let y2 = firstY + (x2 - firstX) * slope;\n\n          // console.log('  Drawing [' + x1 + ' ' + y1 + ' ' + x2 + ' ' + y2 + ']');\n\n          svg.path([\n            'M', x1, y1,\n            'L', x2, y2,\n            'L', x2, y2 + beamThickness,\n            'L', x1, y1 + beamThickness,\n            'Z']).fill();\n        }\n        if (this.stem.direction === 'up') {\n          firstY += beamThickness + beamSpacing;\n        } else {\n          firstY -= beamThickness + beamSpacing;\n        }\n      }\n    }\n  }\n\n  toString() {\n    return `[ScoreNoteChord (${this.notes.length})]`;\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-note-chord.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 672,
    "kind": "class",
    "name": "ScoreNoteChord",
    "memberof": "lib/score/classes/score-note-chord.js",
    "static": true,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-note-chord.js",
    "importStyle": "ScoreNoteChord",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-event.js~ScoreEvent"
    ]
  },
  {
    "__docId__": 673,
    "kind": "method",
    "name": "defaultStemDirection",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#defaultStemDirection",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 674,
    "kind": "method",
    "name": "innerWidth",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#innerWidth",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 675,
    "kind": "method",
    "name": "boundingBox",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#boundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"left\": *, \"top\": *, \"right\": *, \"bottom\": *}"
      ]
    }
  },
  {
    "__docId__": 676,
    "kind": "method",
    "name": "updateExtents",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#updateExtents",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 677,
    "kind": "member",
    "name": "leftExtent",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#leftExtent",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 678,
    "kind": "member",
    "name": "rightExtent",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#rightExtent",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 679,
    "kind": "method",
    "name": "getStemStart",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#getStemStart",
    "access": "public",
    "description": " Returns the y coordinate (in staff spaces) of the stem start (at a note head)\n > 1 notes and stem direction are taken into account\n\n As a secondary value, returns the y coordinate of the outermost edge of the outermost notehead\n (usable for calculating the bounding box)",
    "lineNumber": 48,
    "params": [],
    "return": {
      "types": [
        "{\"start\": *, \"extent\": *}"
      ]
    }
  },
  {
    "__docId__": 680,
    "kind": "method",
    "name": "getStemEnd",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#getStemEnd",
    "access": "public",
    "description": " Returns the y coordinate of the stem end (in staff spaces), as if the event is not beamed\n > 1 notes and stem direction are taken into account",
    "lineNumber": 72,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 681,
    "kind": "method",
    "name": "draw",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#draw",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 682,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 264,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 683,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/score/classes/score-note-chord.js~ScoreNoteChord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note-chord.js~ScoreNoteChord#toString",
    "access": "public",
    "description": null,
    "lineNumber": 428,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 684,
    "kind": "file",
    "name": "lib/score/classes/score-note.js",
    "content": "import knowledge from '../knowledge.js';\nimport ScoreItem from './score-item.js';\n\nexport default class ScoreNote extends ScoreItem {\n  constructor(item, score, params) {\n    super(item, score, params);\n    let coord = item.pitch.toCoord();\n    this.coord = coord;\n    if (this.voice.kind === 'single-drum') {\n      this.staffLine = 0;\n    } else if (this.clef) {\n      switch (this.clef.kind) {\n        case 'g': this.staffLine = 20.5 - (coord[0] * 0.5); break;\n        case 'c': this.staffLine = 17.5 - (coord[0] * 0.5); break;\n        case 'f': this.staffLine = 14.5 - (coord[0] * 0.5); break;\n      }\n      this.staffLine += this.clef.octave * 3.5;\n    } else {\n      // Assume g clef\n      this.staffLine = 20.5 - (coord[0] * 0.5);\n    }\n  }\n\n  visibleYPos() {\n    return this.staffLine;\n  }\n\n  set notehead(notehead) {\n    this._notehead = {\n      name: notehead,\n      bbox: this.score.musicFontMetadata.glyphBBoxes[notehead],\n      anchors: this.score.musicFontMetadata.glyphsWithAnchors[notehead]\n    };\n  }\n\n  get notehead() {\n    return this._notehead.name;\n  }\n\n  boundingBox() {\n    // TODO: don't hardcode\n    let bbox = this._notehead.bbox;\n    return {\n      left: bbox.bBoxSW[0],\n      top: -bbox.bBoxNE[1],\n      right: bbox.bBoxNE[0],\n      bottom: -bbox.bBoxSW[1]\n    };\n    //   (let ((metrics (svref *glyph-data* (notehead-to-smufl-index (notehead self)))))\n    // (values (- (glyph-left metrics) (glyph-notehead-origin-x metrics))\n    //         (glyph-top metrics)\n    //         (- (glyph-right metrics) (glyph-notehead-origin-x metrics))\n    //         (glyph-bottom metrics)))\n  }\n\n  draw(ctx) {\n    let snc = this.scoreNoteChord;\n    // console.log('Drawing notehead at ' + snc.x + ', ' + snc.y);\n    let noteY = snc.y + this.score.staffSize * 0.25 * this.visibleYPos();\n    let str = knowledge.smuflCodepoints[this.notehead];\n    let x = snc.x + this.noteX;\n    ctx.fillText(str, x, noteY);\n    let dotX = x + 10; // TODO\n    for (let d = 0; d < snc.dots; d++) {\n      ctx.fillText('\\uE1E7', dotX, noteY);\n      dotX += 7; // TODO\n    }\n  }\n\n  toSVG(svg) {\n    let snc = this.scoreNoteChord;\n    let staffSize = this.score.staffSize;\n    let noteY = snc.y + staffSize * 0.25 * this.visibleYPos();\n    let x = snc.x + this.noteX;\n    svg.smuflGlyph(this.notehead, x, noteY, staffSize);\n    if (snc.dots) {\n      let dotW = staffSize * 0.25 * this.score.musicFontMetadata.glyphBBoxes['augmentationDot'].bBoxNE[0];\n      let dotX = snc.x + snc.dotX + dotW;\n      let dotY = noteY + (this.staffLine % 1 !== 0 ? 0 : staffSize * -0.125);\n      for (let d = 0; d < snc.dots; d++) {\n        svg.smuflGlyph('augmentationDot', dotX, dotY, staffSize);\n        dotX += dotW * 2;\n      }\n    }\n\n    // Accidental\n    if (this.displayedAccidental !== undefined) {\n      svg.smuflGlyph(knowledge.accidentals[this.displayedAccidental], x + this.accidentalX, noteY, staffSize);\n    }\n  }\n\n  toString() {\n    return `[ScoreNote ${this.item.pitch.scientific()}]`;\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-note.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 685,
    "kind": "class",
    "name": "ScoreNote",
    "memberof": "lib/score/classes/score-note.js",
    "static": true,
    "longname": "lib/score/classes/score-note.js~ScoreNote",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-note.js",
    "importStyle": "ScoreNote",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-item.js~ScoreItem"
    ]
  },
  {
    "__docId__": 686,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 687,
    "kind": "member",
    "name": "coord",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#coord",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 688,
    "kind": "member",
    "name": "staffLine",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#staffLine",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 694,
    "kind": "method",
    "name": "visibleYPos",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#visibleYPos",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 695,
    "kind": "set",
    "name": "notehead",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#notehead",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 696,
    "kind": "member",
    "name": "_notehead",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#_notehead",
    "access": "private",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "{\"name\": *, \"bbox\": *, \"anchors\": *}"
      ]
    }
  },
  {
    "__docId__": 697,
    "kind": "get",
    "name": "notehead",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#notehead",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 698,
    "kind": "method",
    "name": "boundingBox",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#boundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"left\": *, \"top\": *, \"right\": *, \"bottom\": *}"
      ]
    }
  },
  {
    "__docId__": 699,
    "kind": "method",
    "name": "draw",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#draw",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 700,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 701,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/score/classes/score-note.js~ScoreNote",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-note.js~ScoreNote#toString",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 702,
    "kind": "file",
    "name": "lib/score/classes/score-rest.js",
    "content": "import ScoreEvent from './score-event.js';\n\nexport default class ScoreRest extends ScoreEvent {\n  innerWidth() {\n    return 1; // TODO\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.defaultColor();\n    let staffSpace = this.score.staffSize * 0.25;\n    switch (this.noteValue) {\n      case 'w':\n        ctx.fillText(Math.abs(this.staffLine) > 2 ? '\\uE4F4' : '\\uE4E3', this.x, this.y - staffSpace);\n        break;\n      case 'h':\n        ctx.fillText(Math.abs(this.staffLine) > 2 ? '\\uE4F5' : '\\uE4E4', this.x, this.y);\n        break;\n      case 'q': ctx.fillText('\\uE4E5', this.x, this.y); break;\n      case '8': ctx.fillText('\\uE4E6', this.x, this.y); break;\n      case '16': ctx.fillText('\\uE4E7', this.x, this.y); break;\n      case '32': ctx.fillText('\\uE4E8', this.x, this.y); break;\n      case '64': ctx.fillText('\\uE4E9', this.x, this.y); break;\n      case '128': ctx.fillText('\\uE4EA', this.x, this.y); break;\n      case '256': ctx.fillText('\\uE4EB', this.x, this.y); break;\n    }\n\n    let dotX = this.x + staffSpace * 1.3; // TODO\n\n    // Draw augmentation dots\n    for (let d = 0; d < this.dots; d++) {\n      ctx.fillText('\\uE1E7', dotX, this.y);\n      dotX += staffSpace; // TODO\n    }\n  }\n\n  toSVG(svg) {\n    svg.addClass('voice-' + this.voice.id);\n    let staffSpace = this.score.staffSize * 0.25;\n    switch (this.noteValue) {\n      case 'w':\n        svg.plain(Math.abs(this.staffLine) > 2 ? '\\uE4F4' : '\\uE4E3').x(this.x).attr('y', this.y - staffSpace).font({family: null, size: null});\n        break;\n      case 'h':\n        svg.plain(Math.abs(this.staffLine) > 2 ? '\\uE4F5' : '\\uE4E4').x(this.x).attr('y', this.y).font({family: null, size: null});\n        break;\n      case 'q': svg.plain('\\uE4E5').x(this.x).attr('y', this.y).font({family: null, size: null}); break;\n      case '8': svg.plain('\\uE4E6').x(this.x).attr('y', this.y).font({family: null, size: null}); break;\n      case '16': svg.plain('\\uE4E7').x(this.x).attr('y', this.y).font({family: null, size: null}); break;\n      case '32': svg.plain('\\uE4E8').x(this.x).attr('y', this.y).font({family: null, size: null}); break;\n      case '64': svg.plain('\\uE4E9').x(this.x).attr('y', this.y).font({family: null, size: null}); break;\n      case '128': svg.plain('\\uE4EA').x(this.x).attr('y', this.y).font({family: null, size: null}); break;\n      case '256': svg.plain('\\uE4EB').x(this.x).attr('y', this.y).font({family: null, size: null}); break;\n    }\n\n    let dotX = this.x + staffSpace * 1.3; // TODO\n\n    // Draw augmentation dots\n    for (let d = 0; d < this.dots; d++) {\n      svg.plain('\\uE1E7').x(dotX).attr('y', this.y).font({family: null, size: null});\n      dotX += staffSpace; // TODO\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-rest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 703,
    "kind": "class",
    "name": "ScoreRest",
    "memberof": "lib/score/classes/score-rest.js",
    "static": true,
    "longname": "lib/score/classes/score-rest.js~ScoreRest",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-rest.js",
    "importStyle": "ScoreRest",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-event.js~ScoreEvent"
    ]
  },
  {
    "__docId__": 704,
    "kind": "method",
    "name": "innerWidth",
    "memberof": "lib/score/classes/score-rest.js~ScoreRest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-rest.js~ScoreRest#innerWidth",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 705,
    "kind": "method",
    "name": "draw",
    "memberof": "lib/score/classes/score-rest.js~ScoreRest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-rest.js~ScoreRest#draw",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 706,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-rest.js~ScoreRest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-rest.js~ScoreRest#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 707,
    "kind": "file",
    "name": "lib/score/classes/score-syllable.js",
    "content": "import ScoreDetail from './score-detail.js';\n\nexport default class ScoreSyllable extends ScoreDetail {\n  constructor(item, score, params) {\n    super(item, score, params);\n    this.verse = this.verse || 0;\n    this.text = item.text;\n    this.hyphen = item.hyphen;\n    this.extender = item.extender;\n  }\n\n  visibleYPos() {\n    return 6 + this.verse * 3;\n  }\n\n  toSVG(svg) {\n    let staffSize = this.score.staffSize;\n    let staffSpace = staffSize * 0.25;\n    let owner = this.owner;\n    let y = owner.y + staffSpace * this.visibleYPos();\n    let text = this.text;\n    let font = {family: 'Times New Roman', size: 13};\n    let x = owner.x;\n\n    if (owner.tiedFrom) {\n      font.anchor = 'start';\n    } else {\n      x += staffSpace * owner.innerWidth() * 0.5;\n      font.anchor = 'middle';\n    }\n    svg.plain(text).x(x).attr('y', y).font(font);\n\n    if (this.hyphen) {\n      svg.plain('-').x(x + 5).attr('y', y).font({family: 'Times New Roman', size: 13, anchor: 'start'});\n    }\n  }\n}\n\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-syllable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 708,
    "kind": "class",
    "name": "ScoreSyllable",
    "memberof": "lib/score/classes/score-syllable.js",
    "static": true,
    "longname": "lib/score/classes/score-syllable.js~ScoreSyllable",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-syllable.js",
    "importStyle": "ScoreSyllable",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-detail.js~ScoreDetail"
    ]
  },
  {
    "__docId__": 709,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/classes/score-syllable.js~ScoreSyllable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-syllable.js~ScoreSyllable#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 710,
    "kind": "member",
    "name": "verse",
    "memberof": "lib/score/classes/score-syllable.js~ScoreSyllable",
    "static": false,
    "longname": "lib/score/classes/score-syllable.js~ScoreSyllable#verse",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 711,
    "kind": "member",
    "name": "text",
    "memberof": "lib/score/classes/score-syllable.js~ScoreSyllable",
    "static": false,
    "longname": "lib/score/classes/score-syllable.js~ScoreSyllable#text",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 712,
    "kind": "member",
    "name": "hyphen",
    "memberof": "lib/score/classes/score-syllable.js~ScoreSyllable",
    "static": false,
    "longname": "lib/score/classes/score-syllable.js~ScoreSyllable#hyphen",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 713,
    "kind": "member",
    "name": "extender",
    "memberof": "lib/score/classes/score-syllable.js~ScoreSyllable",
    "static": false,
    "longname": "lib/score/classes/score-syllable.js~ScoreSyllable#extender",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 714,
    "kind": "method",
    "name": "visibleYPos",
    "memberof": "lib/score/classes/score-syllable.js~ScoreSyllable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-syllable.js~ScoreSyllable#visibleYPos",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 715,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-syllable.js~ScoreSyllable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-syllable.js~ScoreSyllable#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 716,
    "kind": "file",
    "name": "lib/score/classes/score-tie.js",
    "content": "import ScoreMeta from './score-meta.js';\n\nexport default class ScoreTie extends ScoreMeta {\n  updatePosition() {\n    let staffSpace = this.score.staffSize * 0.25;\n    let note = this.fromNote || this.toNote;\n    this.x = this.x1 + (this.xOffset || 0);\n    this.y = this.staffY + staffSpace * ((this.yOffset || 0) + note.visibleYPos());\n  }\n\n  updateBounds() {\n    let staffSpace = this.score.staffSize * 0.25;\n    let width = this.x2 - this.x1;\n    let thickness = staffSpace * (width < (2 * staffSpace) ? 0.23 : 0.36);\n    let height = staffSpace * tieHeight(width / staffSpace) + thickness;\n    this.bounds = {\n      minX: this.x1,\n      minY: this.y + (this.direction === 'up' ? -height : 0),\n      maxX: this.x2,\n      maxY: this.y + (this.direction === 'up' ? 0 : height)\n    };\n  }\n\n  draw(ctx) {\n    ctx.save();\n    ctx.fillStyle = this.defaultColor();\n    let staffSpace = this.score.staffSize * 0.25;\n    let width = this.x2 - this.x1;\n    let height = staffSpace * tieHeight(width / staffSpace);\n    let cw = width * 0.7;\n    let cx1 = (width - cw) * 0.5;\n    let cx2 = width - cx1;\n    let thickness = staffSpace * (width < (2 * staffSpace) ? 0.23 : 0.36);\n    let end = 0.043 * staffSpace;\n    let endY = end;\n    let x = this.x;\n    let y = this.y;\n    if (this.direction === 'up') {\n      y -= staffSpace * 0.5;\n      height = -height;\n      endY = -endY;\n      thickness = -thickness;\n    } else {\n      y += staffSpace * 0.5;\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + end, y);\n    ctx.bezierCurveTo(x + cx1, y + height, x + cx2, y + height, x + width - end, y);\n    ctx.lineTo(x + width, y + endY);\n    ctx.bezierCurveTo(x + cx2, y + height + thickness, x + cx1, y + height + thickness, x, y + endY);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  toSVG(svg) {\n    let staffSpace = this.score.staffSize * 0.25;\n    let width = this.x2 - this.x1;\n    let height = staffSpace * tieHeight(width / staffSpace);\n    let cw = width * 0.7;\n    let cx1 = (width - cw) * 0.5;\n    let cx2 = width - cx1;\n    let thickness = staffSpace * (width < (2 * staffSpace) ? 0.23 : 0.36);\n    let end = 0.043 * staffSpace;\n    let endY = end;\n    let x = this.x;\n    let y = this.y;\n    if (this.direction === 'up') {\n      y -= staffSpace * 0.5;\n      height = -height;\n      endY = -endY;\n      thickness = -thickness;\n    } else {\n      y += staffSpace * 0.5;\n    }\n//    let path = svg.path(['M' + (x + end) + ' ' + y + ' C' + (x + cx) + (y + height)\n    let path = svg.path([\n      'M', x + end, y,\n      'C', x + cx1, y + height, x + cx2, y + height, x + width - end, y,\n      'L', x + width, y + endY,\n      'C', x + cx2, y + height + thickness, x + cx1, y + height + thickness, x, y + endY,\n      'Z']);\n    path.fill();\n  }\n}\n\nfunction tieHeight(w) {\n  return Math.min(Math.max(0.28, 0.08 * w), 1.71);\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-tie.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 717,
    "kind": "class",
    "name": "ScoreTie",
    "memberof": "lib/score/classes/score-tie.js",
    "static": true,
    "longname": "lib/score/classes/score-tie.js~ScoreTie",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-tie.js",
    "importStyle": "ScoreTie",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-meta.js~ScoreMeta"
    ]
  },
  {
    "__docId__": 718,
    "kind": "method",
    "name": "updatePosition",
    "memberof": "lib/score/classes/score-tie.js~ScoreTie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-tie.js~ScoreTie#updatePosition",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 719,
    "kind": "member",
    "name": "x",
    "memberof": "lib/score/classes/score-tie.js~ScoreTie",
    "static": false,
    "longname": "lib/score/classes/score-tie.js~ScoreTie#x",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 720,
    "kind": "member",
    "name": "y",
    "memberof": "lib/score/classes/score-tie.js~ScoreTie",
    "static": false,
    "longname": "lib/score/classes/score-tie.js~ScoreTie#y",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 721,
    "kind": "method",
    "name": "updateBounds",
    "memberof": "lib/score/classes/score-tie.js~ScoreTie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-tie.js~ScoreTie#updateBounds",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 722,
    "kind": "member",
    "name": "bounds",
    "memberof": "lib/score/classes/score-tie.js~ScoreTie",
    "static": false,
    "longname": "lib/score/classes/score-tie.js~ScoreTie#bounds",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "{\"minX\": *, \"minY\": *, \"maxX\": *, \"maxY\": *}"
      ]
    }
  },
  {
    "__docId__": 723,
    "kind": "method",
    "name": "draw",
    "memberof": "lib/score/classes/score-tie.js~ScoreTie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-tie.js~ScoreTie#draw",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 724,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-tie.js~ScoreTie",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-tie.js~ScoreTie#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 725,
    "kind": "function",
    "name": "tieHeight",
    "memberof": "lib/score/classes/score-tie.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/classes/score-tie.js~tieHeight",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/classes/score-tie.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [
      {
        "name": "w",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 726,
    "kind": "file",
    "name": "lib/score/classes/score-time.js",
    "content": "import ScoreMeta from './score-meta.js';\n// import knowledge from '../knowledge.js';\n\nexport default class ScoreTime extends ScoreMeta {\n  // constructor(item, score, params) {\n  //   super(item, score, params);\n  // }\n\n  innerWidth() {\n    return 2; // TODO\n  }\n\n  minSpace(nextItem) {\n    return 1.5;\n  }\n\n  toSVG(svg) {\n    let staffSpace = this.score.staffSize * 0.25;\n    let n = this.item.num;\n    let d = this.item.denom;\n    // let smufl = knowledge.smuflCodepoints;\n    if (this.abbreviate && n === 4 && d === 4) {\n      svg.smuflGlyph('timeSigCommon', this.x, this.y);\n    } else if (this.abbreviate && this.num === 2 && this.denom === 2) {\n      svg.smuflGlyph('timeSigCutCommon', this.x, this.y);\n    } else {\n      svg.smuflGlyph('timeSig' + n, this.x, this.y - staffSpace);\n      svg.smuflGlyph('timeSig' + d, this.x, this.y + staffSpace);\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-time.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 727,
    "kind": "class",
    "name": "ScoreTime",
    "memberof": "lib/score/classes/score-time.js",
    "static": true,
    "longname": "lib/score/classes/score-time.js~ScoreTime",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-time.js",
    "importStyle": "ScoreTime",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-meta.js~ScoreMeta"
    ]
  },
  {
    "__docId__": 728,
    "kind": "method",
    "name": "innerWidth",
    "memberof": "lib/score/classes/score-time.js~ScoreTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-time.js~ScoreTime#innerWidth",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 729,
    "kind": "method",
    "name": "minSpace",
    "memberof": "lib/score/classes/score-time.js~ScoreTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-time.js~ScoreTime#minSpace",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "nextItem",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 730,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-time.js~ScoreTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-time.js~ScoreTime#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 731,
    "kind": "file",
    "name": "lib/score/classes/score-tuplet.js",
    "content": "import ScoreMeta from './score-meta.js';\nimport Fraction from 'fraction.js';\n\nexport default class ScoreTuplet extends ScoreMeta {\n  constructor(item, score, params) {\n    super(item, score, params);\n    let fraction = new Fraction(1).div(item.scale);\n    let text = fraction.n + ':' + fraction.d;\n    if (['3:2', '2:3', '3:2', '4:3', '5:4', '6:4', '7:4', '7:6', '7:8', '9:8'].indexOf(text) >= 0) {\n      text = text.substr(0, 1);\n    }\n    this.text = text;\n  }\n\n  get floating() {\n    return true;\n  }\n\n  toSVG(svg) {\n    let staffSpace = this.score.staffSize * 0.25;\n    // let x = this.x;\n    // let y = this.y;\n    // let thickness = this.score.engravingDefaults.bracketThickness || 0.5 * staffSpace;\n    // let line = svg.line(this.x, this.y - 20, this.x + 10, this.y - 20);\n    // svg.smuflGlyph(, this.x + 20, this.y - 20, this.score.staffSize);\n    // line.stroke({width: thickness});\n    let font = {family: 'Palatino, \"Palatino Linotype\", \"URW Palladio\"', size: staffSpace * 1.5, style: 'italic'};\n    svg.plain(this.text).x(this.x + 20).attr('y', this.y + 10).font(font);\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/score-tuplet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 732,
    "kind": "class",
    "name": "ScoreTuplet",
    "memberof": "lib/score/classes/score-tuplet.js",
    "static": true,
    "longname": "lib/score/classes/score-tuplet.js~ScoreTuplet",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/score-tuplet.js",
    "importStyle": "ScoreTuplet",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "lib/score/classes/score-meta.js~ScoreMeta"
    ]
  },
  {
    "__docId__": 733,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/classes/score-tuplet.js~ScoreTuplet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-tuplet.js~ScoreTuplet#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 734,
    "kind": "member",
    "name": "text",
    "memberof": "lib/score/classes/score-tuplet.js~ScoreTuplet",
    "static": false,
    "longname": "lib/score/classes/score-tuplet.js~ScoreTuplet#text",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 735,
    "kind": "get",
    "name": "floating",
    "memberof": "lib/score/classes/score-tuplet.js~ScoreTuplet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-tuplet.js~ScoreTuplet#floating",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 736,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/score-tuplet.js~ScoreTuplet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/score-tuplet.js~ScoreTuplet#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 737,
    "kind": "file",
    "name": "lib/score/classes/staff-system.js",
    "content": "export default class StaffSystem {\n  constructor(score, num, params = {}) {\n    this.score = score;\n    this.num = num;\n    this.x = 0;\n    this.y = 40;\n    this.indent = params.indent || 0;\n    this.staffSize = params.staffSize || score.staffSize || 28;\n    this.staffWidth = params.staffWidth || score.width;\n    this.staffLineWidth = params.staffLineWidth || 0.8;\n    this.stemThickness = params.stemThickness || 1.0;\n    this.staffDistance = params.staffDistance || score.staffDistance || 80;\n    this.staves = params.staves;\n  }\n\n  itemAt(x, y) {\n    for (let item of this.items) {\n      let b = item.bounds;\n      if (x >= b.minX && x <= b.maxX && y >= b.minY && y <= b.maxY) return item;\n    }\n  }\n\n  draw(ctx) {\n    let x1 = this.x + this.indent;\n    let x2 = this.staffWidth;\n    let y = this.y;\n    let delta = this.staffSize * 0.25;\n    ctx.save();\n    ctx.lineCap = 'butt';\n    ctx.lineWidth = this.score.staffLineWidth;\n    ctx.beginPath();\n    for (let i = -2; i <= 2; i++) {\n      ctx.moveTo(x1, y + (i * delta));\n      ctx.lineTo(x2, y + (i * delta));\n    }\n    ctx.stroke();\n\n    for (let item of this.items) {\n      item.draw(ctx);\n    }\n    // for (let i = 0; i < 5; i++) {\n    //   this.items[i].draw(ctx);\n    // }\n\n    ctx.restore();\n  }\n\n  toSVG(svg) {\n    let score = this.score;\n    let x1 = this.x + this.indent;\n    let x2 = this.staffWidth;\n    let y = this.y;\n    let delta = this.staffSize * 0.25;\n\n    // Create SVG group for the staff system, with a sane ID\n    let staffSystem = svg.group().id('staff-system-' + this.num).translate(0, y);\n\n    // Draw staff lines\n    for (let staff = 0; staff < this.staves.length; staff++) {\n      let staffY = staff * this.staffDistance; // TODO\n      let staffLines = staffSystem.group().id('staff-lines');\n      let staffLineWidth = (score.engravingDefaults.staffLineWidth || 0.13) * delta;\n      staffLines.attr('stroke-width', staffLineWidth);\n      let y1 = staffY + delta * (this.staves[staff].staffLines - 1) * -0.5;\n      for (let i = 0; i < this.staves[staff].staffLines; i++) {\n        staffLines.line(x1, y1 + (i * delta), x2, y1 + (i * delta)).stroke().id(null);\n      }\n    }\n\n    // Draw score items\n    for (let item of this.items) {\n      // Wrap every ScoreItem in a SVG group\n      let group = staffSystem.group();\n      group.addClass('ScoreItem');\n      group.addClass(item.constructor.name);\n      if (item.item && item.item.className) group.addClass(item.item.className);\n      // Call function in sub class for actual SVG generation\n      item.toSVG(group);\n      // Attach message handlers\n      group.on('mouseenter', score.handleMouseEnter.bind(score));\n      group.on('mouseleave', score.handleMouseLeave.bind(score));\n      group.on('click', score.handleClick.bind(score));\n      // Set references from SVG object to ScoreItem and back\n      // NB: as we cannot store object references in the SVG,\n      //     we use a key in the score as a lookup table\n      item.svgElement = group;\n      score.itemsBySVGID[group.id()] = item;\n    }\n\n    return staffSystem;\n  }\n}\n\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/classes/staff-system.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 738,
    "kind": "class",
    "name": "StaffSystem",
    "memberof": "lib/score/classes/staff-system.js",
    "static": true,
    "longname": "lib/score/classes/staff-system.js~StaffSystem",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/classes/staff-system.js",
    "importStyle": "StaffSystem",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 739,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 740,
    "kind": "member",
    "name": "score",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#score",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 741,
    "kind": "member",
    "name": "num",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#num",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 742,
    "kind": "member",
    "name": "x",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#x",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 743,
    "kind": "member",
    "name": "y",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#y",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 744,
    "kind": "member",
    "name": "indent",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#indent",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 745,
    "kind": "member",
    "name": "staffSize",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#staffSize",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 746,
    "kind": "member",
    "name": "staffWidth",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#staffWidth",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 747,
    "kind": "member",
    "name": "staffLineWidth",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#staffLineWidth",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 748,
    "kind": "member",
    "name": "stemThickness",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#stemThickness",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 749,
    "kind": "member",
    "name": "staffDistance",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#staffDistance",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 750,
    "kind": "member",
    "name": "staves",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#staves",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 751,
    "kind": "method",
    "name": "itemAt",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#itemAt",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 752,
    "kind": "method",
    "name": "draw",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#draw",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 753,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/classes/staff-system.js~StaffSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/classes/staff-system.js~StaffSystem#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 754,
    "kind": "file",
    "name": "lib/score/knowledge.js",
    "content": "export default {\n  noteValues: {\n    '1': { notehead: 'noteheadWhole', noteValue: 'w', flags: 0, dots: 0 },\n\n    '1/2': { notehead: 'noteheadHalf', noteValue: 'h', flags: 0, dots: 0 },\n    '3/4': { notehead: 'noteheadHalf', noteValue: 'h', flags: 0, dots: 1 },\n    '7/8': { notehead: 'noteheadHalf', noteValue: 'h', flags: 0, dots: 2 },\n\n    '1/4': { notehead: 'noteheadBlack', noteValue: 'q', flags: 0, dots: 0 },\n    '3/8': { notehead: 'noteheadBlack', noteValue: 'q', flags: 0, dots: 1 },\n    '7/16': { notehead: 'noteheadBlack', noteValue: 'q', flags: 0, dots: 2 },\n\n    '1/8': { notehead: 'noteheadBlack', noteValue: '8', flags: 1, dots: 0 },\n    '3/16': { notehead: 'noteheadBlack', noteValue: '8', flags: 1, dots: 1 },\n    '7/32': { notehead: 'noteheadBlack', noteValue: '8', flags: 1, dots: 2 },\n\n    '1/16': { notehead: 'noteheadBlack', noteValue: '16', flags: 2, dots: 0 },\n    '3/32': { notehead: 'noteheadBlack', noteValue: '16', flags: 2, dots: 1 },\n    '7/64': { notehead: 'noteheadBlack', noteValue: '16', flags: 2, dots: 2 },\n\n    '1/32': { notehead: 'noteheadBlack', noteValue: '32', flags: 3, dots: 0 },\n    '3/64': { notehead: 'noteheadBlack', noteValue: '32', flags: 3, dots: 1 },\n    '7/128': { notehead: 'noteheadBlack', noteValue: '32', flags: 3, dots: 2 },\n\n    '1/64': { notehead: 'noteheadBlack', noteValue: '64', flags: 4, dots: 0 },\n    '3/128': { notehead: 'noteheadBlack', noteValue: '64', flags: 4, dots: 1 },\n    '7/256': { notehead: 'noteheadBlack', noteValue: '64', flags: 4, dots: 2 },\n\n    '1/128': { notehead: 'noteheadBlack', noteValue: '128', flags: 5, dots: 0 },\n    '3/256': { notehead: 'noteheadBlack', noteValue: '128', flags: 5, dots: 1 },\n    '7/512': { notehead: 'noteheadBlack', noteValue: '128', flags: 5, dots: 2 },\n\n    '1/256': { notehead: 'noteheadBlack', noteValue: '256', flags: 6, dots: 0 },\n    '3/512': { notehead: 'noteheadBlack', noteValue: '256', flags: 6, dots: 1 },\n    '7/1024': { notehead: 'noteheadBlack', noteValue: '256', flags: 6, dots: 2 }\n  },\n\n  keySignatures: {\n    'sharp': [4, 1, 5, 2, -1, 3],\n    'flat': [0, 3, -1, 2, -2, 1]\n  },\n\n  accidentals: {\n    '-2': 'accidentalDoubleFlat',\n    '-1': 'accidentalFlat',\n    '0': 'accidentalNatural',\n    '1': 'accidentalSharp',\n    '2': 'accidentalDoubleSharp'\n  },\n\n  smuflCodepoints: {\n    'accidentalArrowDown': '\\uE27B',\n    'accidentalArrowUp': '\\uE27A',\n    'accidentalCombiningCloseCurlyBrace': '\\uE2EF',\n    'accidentalCombiningOpenCurlyBrace': '\\uE2EE',\n    'accidentalCommaSlashDown': '\\uE47A',\n    'accidentalCommaSlashUp': '\\uE479',\n    'accidentalDoubleFlat': '\\uE264',\n    'accidentalDoubleFlatOneArrowDown': '\\uE2C0',\n    'accidentalDoubleFlatOneArrowUp': '\\uE2C5',\n    'accidentalDoubleFlatReversed': '\\uE483',\n    'accidentalDoubleFlatThreeArrowsDown': '\\uE2D4',\n    'accidentalDoubleFlatThreeArrowsUp': '\\uE2D9',\n    'accidentalDoubleFlatTurned': '\\uE485',\n    'accidentalDoubleFlatTwoArrowsDown': '\\uE2CA',\n    'accidentalDoubleFlatTwoArrowsUp': '\\uE2CF',\n    'accidentalDoubleSharp': '\\uE263',\n    'accidentalDoubleSharpEqualTempered': '\\uE2F4',\n    'accidentalDoubleSharpOneArrowDown': '\\uE2C4',\n    'accidentalDoubleSharpOneArrowUp': '\\uE2C9',\n    'accidentalDoubleSharpThreeArrowsDown': '\\uE2D8',\n    'accidentalDoubleSharpThreeArrowsUp': '\\uE2DD',\n    'accidentalDoubleSharpTwoArrowsDown': '\\uE2CE',\n    'accidentalDoubleSharpTwoArrowsUp': '\\uE2D3',\n    'accidentalFilledReversedFlatAndFlat': '\\uE296',\n    'accidentalFilledReversedFlatAndFlatArrowDown': '\\uE298',\n    'accidentalFilledReversedFlatAndFlatArrowUp': '\\uE297',\n    'accidentalFilledReversedFlatArrowDown': '\\uE293',\n    'accidentalFilledReversedFlatArrowUp': '\\uE292',\n    'accidentalFiveQuarterTonesFlatArrowDown': '\\uE279',\n    'accidentalFiveQuarterTonesSharpArrowUp': '\\uE276',\n    'accidentalFlat': '\\uE260',\n    'accidentalFlatOneArrowDown': '\\uE2C1',\n    'accidentalFlatOneArrowUp': '\\uE2C6',\n    'accidentalFlatThreeArrowsDown': '\\uE2D5',\n    'accidentalFlatThreeArrowsUp': '\\uE2DA',\n    'accidentalFlatTurned': '\\uE484',\n    'accidentalFlatTwoArrowsDown': '\\uE2CB',\n    'accidentalFlatTwoArrowsUp': '\\uE2D0',\n    'accidentalHalfSharpArrowDown': '\\uE29A',\n    'accidentalHalfSharpArrowUp': '\\uE299',\n    'accidentalLargeDoubleSharp': '\\uE47D',\n    'accidentalNatural': '\\uE261',\n    'accidentalNaturalFlat': '\\uE267',\n    'accidentalNaturalOneArrowDown': '\\uE2C2',\n    'accidentalNaturalOneArrowUp': '\\uE2C7',\n    'accidentalNaturalReversed': '\\uE482',\n    'accidentalNaturalSharp': '\\uE268',\n    'accidentalNaturalThreeArrowsDown': '\\uE2D6',\n    'accidentalNaturalThreeArrowsUp': '\\uE2DB',\n    'accidentalNaturalTwoArrowsDown': '\\uE2CC',\n    'accidentalNaturalTwoArrowsUp': '\\uE2D1',\n    'accidentalOneAndAHalfSharpsArrowDown': '\\uE29C',\n    'accidentalOneAndAHalfSharpsArrowUp': '\\uE29B',\n    'accidentalOneThirdToneFlatFerneyhough': '\\uE48B',\n    'accidentalOneThirdToneSharpFerneyhough': '\\uE48A',\n    'accidentalParensLeft': '\\uE26A',\n    'accidentalParensRight': '\\uE26B',\n    'accidentalQuarterToneFlat4': '\\uE47F',\n    'accidentalQuarterToneFlatArrowUp': '\\uE270',\n    'accidentalQuarterToneFlatFilledReversed': '\\uE480',\n    'accidentalQuarterToneFlatNaturalArrowDown': '\\uE273',\n    'accidentalQuarterToneSharp4': '\\uE47E',\n    'accidentalQuarterToneSharpArrowDown': '\\uE275',\n    'accidentalQuarterToneSharpBusotti': '\\uE472',\n    'accidentalQuarterToneSharpNaturalArrowUp': '\\uE272',\n    'accidentalQuarterToneSharpStein': '\\uE282',\n    'accidentalQuarterToneSharpWiggle': '\\uE475',\n    'accidentalRaiseOneSeptimalComma': '\\uE2DF',\n    'accidentalRaiseOneTridecimalQuartertone': '\\uE2E5',\n    'accidentalRaiseOneUndecimalQuartertone': '\\uE2E3',\n    'accidentalRaiseTwoSeptimalCommas': '\\uE2E1',\n    'accidentalReversedFlatAndFlatArrowDown': '\\uE295',\n    'accidentalReversedFlatAndFlatArrowUp': '\\uE294',\n    'accidentalReversedFlatArrowDown': '\\uE291',\n    'accidentalReversedFlatArrowUp': '\\uE290',\n    'accidentalSharp': '\\uE262',\n    'accidentalSharpOneArrowDown': '\\uE2C3',\n    'accidentalSharpOneArrowUp': '\\uE2C8',\n    'accidentalSharpOneHorizontalStroke': '\\uE473',\n    'accidentalSharpReversed': '\\uE481',\n    'accidentalSharpSharp': '\\uE269',\n    'accidentalSharpThreeArrowsDown': '\\uE2D7',\n    'accidentalSharpThreeArrowsUp': '\\uE2DC',\n    'accidentalSharpTwoArrowsDown': '\\uE2CD',\n    'accidentalSharpTwoArrowsUp': '\\uE2D2',\n    'accidentalThreeQuarterTonesFlatArrowDown': '\\uE271',\n    'accidentalThreeQuarterTonesFlatArrowUp': '\\uE278',\n    'accidentalThreeQuarterTonesFlatCouper': '\\uE489',\n    'accidentalThreeQuarterTonesFlatGrisey': '\\uE486',\n    'accidentalThreeQuarterTonesFlatTartini': '\\uE487',\n    'accidentalThreeQuarterTonesFlatZimmermann': '\\uE281',\n    'accidentalThreeQuarterTonesSharpArrowDown': '\\uE277',\n    'accidentalThreeQuarterTonesSharpArrowUp': '\\uE274',\n    'accidentalThreeQuarterTonesSharpBusotti': '\\uE474',\n    'accidentalThreeQuarterTonesSharpStein': '\\uE283',\n    'accidentalTripleFlat': '\\uE266',\n    'accidentalTripleSharp': '\\uE265',\n    'arpeggiatoDown': '\\uE635',\n    'arpeggiatoUp': '\\uE634',\n    'arrowBlackDown': '\\uEB64',\n    'arrowBlackDownLeft': '\\uEB65',\n    'arrowBlackDownRight': '\\uEB63',\n    'arrowBlackLeft': '\\uEB66',\n    'arrowBlackRight': '\\uEB62',\n    'arrowBlackUp': '\\uEB60',\n    'arrowBlackUpLeft': '\\uEB67',\n    'arrowBlackUpRight': '\\uEB61',\n    'arrowOpenDown': '\\uEB74',\n    'arrowOpenDownLeft': '\\uEB75',\n    'arrowOpenDownRight': '\\uEB73',\n    'arrowOpenLeft': '\\uEB76',\n    'arrowOpenRight': '\\uEB72',\n    'arrowOpenUp': '\\uEB70',\n    'arrowOpenUpLeft': '\\uEB77',\n    'arrowOpenUpRight': '\\uEB71',\n    'arrowWhiteDown': '\\uEB6C',\n    'arrowWhiteDownLeft': '\\uEB6D',\n    'arrowWhiteDownRight': '\\uEB6B',\n    'arrowWhiteLeft': '\\uEB6E',\n    'arrowWhiteRight': '\\uEB6A',\n    'arrowWhiteUp': '\\uEB68',\n    'arrowWhiteUpLeft': '\\uEB6F',\n    'arrowWhiteUpRight': '\\uEB69',\n    'arrowheadBlackDown': '\\uEB7C',\n    'arrowheadBlackDownLeft': '\\uEB7D',\n    'arrowheadBlackDownRight': '\\uEB7B',\n    'arrowheadBlackLeft': '\\uEB7E',\n    'arrowheadBlackRight': '\\uEB7A',\n    'arrowheadBlackUp': '\\uEB78',\n    'arrowheadBlackUpLeft': '\\uEB7F',\n    'arrowheadBlackUpRight': '\\uEB79',\n    'arrowheadOpenDown': '\\uEB8C',\n    'arrowheadOpenDownLeft': '\\uEB8D',\n    'arrowheadOpenDownRight': '\\uEB8B',\n    'arrowheadOpenLeft': '\\uEB8E',\n    'arrowheadOpenRight': '\\uEB8A',\n    'arrowheadOpenUp': '\\uEB88',\n    'arrowheadOpenUpLeft': '\\uEB8F',\n    'arrowheadOpenUpRight': '\\uEB89',\n    'arrowheadWhiteDown': '\\uEB84',\n    'arrowheadWhiteDownLeft': '\\uEB85',\n    'arrowheadWhiteDownRight': '\\uEB83',\n    'arrowheadWhiteLeft': '\\uEB86',\n    'arrowheadWhiteRight': '\\uEB82',\n    'arrowheadWhiteUp': '\\uEB80',\n    'arrowheadWhiteUpLeft': '\\uEB87',\n    'arrowheadWhiteUpRight': '\\uEB81',\n    'articAccentAbove': '\\uE4A0',\n    'articAccentBelow': '\\uE4A1',\n    'articAccentStaccatoAbove': '\\uE4B0',\n    'articAccentStaccatoBelow': '\\uE4B1',\n    'articLaissezVibrerAbove': '\\uE4BA',\n    'articLaissezVibrerBelow': '\\uE4BB',\n    'articMarcatoAbove': '\\uE4AC',\n    'articMarcatoBelow': '\\uE4AD',\n    'articMarcatoStaccatoAbove': '\\uE4AE',\n    'articMarcatoStaccatoBelow': '\\uE4AF',\n    'articMarcatoTenutoAbove': '\\uE4BC',\n    'articMarcatoTenutoBelow': '\\uE4BD',\n    'articStaccatissimoAbove': '\\uE4A6',\n    'articStaccatissimoBelow': '\\uE4A7',\n    'articStaccatissimoStrokeAbove': '\\uE4AA',\n    'articStaccatissimoStrokeBelow': '\\uE4AB',\n    'articStaccatissimoWedgeAbove': '\\uE4A8',\n    'articStaccatissimoWedgeBelow': '\\uE4A9',\n    'articStaccatoAbove': '\\uE4A2',\n    'articStaccatoBelow': '\\uE4A3',\n    'articStressAbove': '\\uE4B6',\n    'articStressBelow': '\\uE4B7',\n    'articTenutoAbove': '\\uE4A4',\n    'articTenutoAccentAbove': '\\uE4B4',\n    'articTenutoAccentBelow': '\\uE4B5',\n    'articTenutoBelow': '\\uE4A5',\n    'articTenutoStaccatoAbove': '\\uE4B2',\n    'articTenutoStaccatoBelow': '\\uE4B3',\n    'articUnstressAbove': '\\uE4B8',\n    'articUnstressBelow': '\\uE4B9',\n    'augmentationDot': '\\uE1E7',\n    'barlineDashed': '\\uE036',\n    'barlineDotted': '\\uE037',\n    'barlineDouble': '\\uE031',\n    'barlineFinal': '\\uE032',\n    'barlineHeavy': '\\uE034',\n    'barlineHeavyHeavy': '\\uE035',\n    'barlineReverseFinal': '\\uE033',\n    'barlineShort': '\\uE038',\n    'barlineSingle': '\\uE030',\n    'barlineTick': '\\uE039',\n    'brace': '\\uE000',\n    'bracket': '\\uE002',\n    'bracketBottom': '\\uE004',\n    'bracketTop': '\\uE003',\n    'breathMarkComma': '\\uE4CE',\n    'breathMarkSalzedo': '\\uE4D5',\n    'breathMarkTick': '\\uE4CF',\n    'breathMarkUpbow': '\\uE4D0',\n    'bridgeClef': '\\uE078',\n    'buzzRoll': '\\uE22A',\n    'cClef': '\\uE05C',\n    'cClef8vb': '\\uE05D',\n    'cClefArrowDown': '\\uE05F',\n    'cClefArrowUp': '\\uE05E',\n    'cClefChange': '\\uE07B',\n    'cClefCombining': '\\uE061',\n    'cClefReversed': '\\uE075',\n    'cClefSquare': '\\uE060',\n    'caesura': '\\uE4D1',\n    'caesuraCurved': '\\uE4D4',\n    'caesuraShort': '\\uE4D3',\n    'caesuraThick': '\\uE4D2',\n    'clef15': '\\uE07E',\n    'clef8': '\\uE07D',\n    'clefChangeCombining': '\\uE07F',\n    'coda': '\\uE048',\n    'codaSquare': '\\uE049',\n    'csymAugmented': '\\uE872',\n    'csymBracketLeftTall': '\\uE877',\n    'csymBracketRightTall': '\\uE878',\n    'csymDiminished': '\\uE870',\n    'csymHalfDiminished': '\\uE871',\n    'csymMajorSeventh': '\\uE873',\n    'csymMinor': '\\uE874',\n    'csymParensLeftTall': '\\uE875',\n    'csymParensRightTall': '\\uE876',\n    'curlewSign': '\\uE4D6',\n    'daCapo': '\\uE046',\n    'dalSegno': '\\uE045',\n    'dynamicFF': '\\uE52F',\n    'dynamicFFF': '\\uE530',\n    'dynamicFFFF': '\\uE531',\n    'dynamicFFFFF': '\\uE532',\n    'dynamicFFFFFF': '\\uE533',\n    'dynamicForte': '\\uE522',\n    'dynamicFortePiano': '\\uE534',\n    'dynamicForzando': '\\uE535',\n    'dynamicMF': '\\uE52D',\n    'dynamicMP': '\\uE52C',\n    'dynamicMessaDiVoce': '\\uE540',\n    'dynamicMezzo': '\\uE521',\n    'dynamicNiente': '\\uE526',\n    'dynamicNienteForHairpin': '\\uE541',\n    'dynamicPF': '\\uE52E',\n    'dynamicPP': '\\uE52B',\n    'dynamicPPP': '\\uE52A',\n    'dynamicPPPP': '\\uE529',\n    'dynamicPPPPP': '\\uE528',\n    'dynamicPPPPPP': '\\uE527',\n    'dynamicPiano': '\\uE520',\n    'dynamicRinforzando': '\\uE523',\n    'dynamicRinforzando1': '\\uE53C',\n    'dynamicRinforzando2': '\\uE53D',\n    'dynamicSforzando': '\\uE524',\n    'dynamicSforzando1': '\\uE536',\n    'dynamicSforzandoPianissimo': '\\uE538',\n    'dynamicSforzandoPiano': '\\uE537',\n    'dynamicSforzato': '\\uE539',\n    'dynamicSforzatoFF': '\\uE53B',\n    'dynamicSforzatoPiano': '\\uE53A',\n    'dynamicZ': '\\uE525',\n    'fClef': '\\uE062',\n    'fClef15ma': '\\uE066',\n    'fClef15mb': '\\uE063',\n    'fClef8va': '\\uE065',\n    'fClef8vb': '\\uE064',\n    'fClefArrowDown': '\\uE068',\n    'fClefArrowUp': '\\uE067',\n    'fClefChange': '\\uE07C',\n    'fClefReversed': '\\uE076',\n    'fClefTurned': '\\uE077',\n    'fermataAbove': '\\uE4C0',\n    'fermataBelow': '\\uE4C1',\n    'fermataLongAbove': '\\uE4C6',\n    'fermataLongBelow': '\\uE4C7',\n    'fermataLongHenzeAbove': '\\uE4CA',\n    'fermataLongHenzeBelow': '\\uE4CB',\n    'fermataShortAbove': '\\uE4C4',\n    'fermataShortBelow': '\\uE4C5',\n    'fermataShortHenzeAbove': '\\uE4CC',\n    'fermataShortHenzeBelow': '\\uE4CD',\n    'fermataVeryLongAbove': '\\uE4C8',\n    'fermataVeryLongBelow': '\\uE4C9',\n    'fermataVeryShortAbove': '\\uE4C2',\n    'fermataVeryShortBelow': '\\uE4C3',\n    'flag1024thDown': '\\uE24F',\n    'flag1024thUp': '\\uE24E',\n    'flag128thDown': '\\uE249',\n    'flag128thUp': '\\uE248',\n    'flag16thDown': '\\uE243',\n    'flag16thUp': '\\uE242',\n    'flag256thDown': '\\uE24B',\n    'flag256thUp': '\\uE24A',\n    'flag32ndDown': '\\uE245',\n    'flag32ndUp': '\\uE244',\n    'flag512thDown': '\\uE24D',\n    'flag512thUp': '\\uE24C',\n    'flag64thDown': '\\uE247',\n    'flag64thUp': '\\uE246',\n    'flag8thDown': '\\uE241',\n    'flag8thUp': '\\uE240',\n    'flagInternalDown': '\\uE251',\n    'flagInternalUp': '\\uE250',\n    'gClef': '\\uE050',\n    'gClef15ma': '\\uE054',\n    'gClef15mb': '\\uE051',\n    'gClef8va': '\\uE053',\n    'gClef8vb': '\\uE052',\n    'gClef8vbCClef': '\\uE056',\n    'gClef8vbOld': '\\uE055',\n    'gClef8vbParens': '\\uE057',\n    'gClefArrowDown': '\\uE05B',\n    'gClefArrowUp': '\\uE05A',\n    'gClefChange': '\\uE07A',\n    'gClefLigatedNumberAbove': '\\uE059',\n    'gClefLigatedNumberBelow': '\\uE058',\n    'gClefReversed': '\\uE073',\n    'gClefTurned': '\\uE074',\n    'glissandoDown': '\\uE586',\n    'glissandoUp': '\\uE585',\n    'graceNoteAcciaccaturaStemDown': '\\uE561',\n    'graceNoteAcciaccaturaStemUp': '\\uE560',\n    'graceNoteAppoggiaturaStemDown': '\\uE563',\n    'graceNoteAppoggiaturaStemUp': '\\uE562',\n    'graceNoteSlashStemDown': '\\uE565',\n    'graceNoteSlashStemUp': '\\uE564',\n    'keyboardPedalD': '\\uE653',\n    'keyboardPedalDot': '\\uE654',\n    'keyboardPedalE': '\\uE652',\n    'keyboardPedalHalf': '\\uE656',\n    'keyboardPedalHalf2': '\\uE65B',\n    'keyboardPedalHalf3': '\\uE65C',\n    'keyboardPedalHeel1': '\\uE661',\n    'keyboardPedalHeel2': '\\uE662',\n    'keyboardPedalHeel3': '\\uE663',\n    'keyboardPedalHeelToe': '\\uE666',\n    'keyboardPedalHyphen': '\\uE658',\n    'keyboardPedalP': '\\uE651',\n    'keyboardPedalPed': '\\uE650',\n    'keyboardPedalS': '\\uE65A',\n    'keyboardPedalSost': '\\uE659',\n    'keyboardPedalToe1': '\\uE664',\n    'keyboardPedalToe2': '\\uE665',\n    'keyboardPedalUp': '\\uE655',\n    'keyboardPedalUpNotch': '\\uE657',\n    'leftRepeatSmall': '\\uE04C',\n    'legerLine': '\\uE022',\n    'legerLineNarrow': '\\uE024',\n    'legerLineWide': '\\uE023',\n    'lyricsElision': '\\uE551',\n    'lyricsElisionNarrow': '\\uE550',\n    'lyricsElisionWide': '\\uE552',\n    'lyricsHyphenBaseline': '\\uE553',\n    'lyricsHyphenBaselineNonBreaking': '\\uE554',\n    'miscEyeglasses': '\\uEC62',\n    'note1024thDown': '\\uE1E6',\n    'note1024thUp': '\\uE1E5',\n    'note128thDown': '\\uE1E0',\n    'note128thUp': '\\uE1DF',\n    'note16thDown': '\\uE1DA',\n    'note16thUp': '\\uE1D9',\n    'note256thDown': '\\uE1E2',\n    'note256thUp': '\\uE1E1',\n    'note32ndDown': '\\uE1DC',\n    'note32ndUp': '\\uE1DB',\n    'note512thDown': '\\uE1E4',\n    'note512thUp': '\\uE1E3',\n    'note64thDown': '\\uE1DE',\n    'note64thUp': '\\uE1DD',\n    'note8thDown': '\\uE1D8',\n    'note8thUp': '\\uE1D7',\n    'noteABlack': '\\uE197',\n    'noteAFlatBlack': '\\uE196',\n    'noteAFlatHalf': '\\uE17F',\n    'noteAFlatWhole': '\\uE168',\n    'noteAHalf': '\\uE180',\n    'noteASharpBlack': '\\uE198',\n    'noteASharpHalf': '\\uE181',\n    'noteASharpWhole': '\\uE16A',\n    'noteAWhole': '\\uE169',\n    'noteBBlack': '\\uE19A',\n    'noteBFlatBlack': '\\uE199',\n    'noteBFlatHalf': '\\uE182',\n    'noteBFlatWhole': '\\uE16B',\n    'noteBHalf': '\\uE183',\n    'noteBSharpBlack': '\\uE19B',\n    'noteBSharpHalf': '\\uE184',\n    'noteBSharpWhole': '\\uE16D',\n    'noteBWhole': '\\uE16C',\n    'noteCBlack': '\\uE19D',\n    'noteCFlatBlack': '\\uE19C',\n    'noteCFlatHalf': '\\uE185',\n    'noteCFlatWhole': '\\uE16E',\n    'noteCHalf': '\\uE186',\n    'noteCSharpBlack': '\\uE19E',\n    'noteCSharpHalf': '\\uE187',\n    'noteCSharpWhole': '\\uE170',\n    'noteCWhole': '\\uE16F',\n    'noteDBlack': '\\uE1A0',\n    'noteDFlatBlack': '\\uE19F',\n    'noteDFlatHalf': '\\uE188',\n    'noteDFlatWhole': '\\uE171',\n    'noteDHalf': '\\uE189',\n    'noteDSharpBlack': '\\uE1A1',\n    'noteDSharpHalf': '\\uE18A',\n    'noteDSharpWhole': '\\uE173',\n    'noteDWhole': '\\uE172',\n    'noteDoBlack': '\\uE160',\n    'noteDoHalf': '\\uE158',\n    'noteDoWhole': '\\uE150',\n    'noteDoubleWhole': '\\uE1D0',\n    'noteDoubleWholeSquare': '\\uE1D1',\n    'noteEBlack': '\\uE1A3',\n    'noteEFlatBlack': '\\uE1A2',\n    'noteEFlatHalf': '\\uE18B',\n    'noteEFlatWhole': '\\uE174',\n    'noteEHalf': '\\uE18C',\n    'noteESharpBlack': '\\uE1A4',\n    'noteESharpHalf': '\\uE18D',\n    'noteESharpWhole': '\\uE176',\n    'noteEWhole': '\\uE175',\n    'noteEmptyBlack': '\\uE1AF',\n    'noteEmptyHalf': '\\uE1AE',\n    'noteEmptyWhole': '\\uE1AD',\n    'noteFBlack': '\\uE1A6',\n    'noteFFlatBlack': '\\uE1A5',\n    'noteFFlatHalf': '\\uE18E',\n    'noteFFlatWhole': '\\uE177',\n    'noteFHalf': '\\uE18F',\n    'noteFSharpBlack': '\\uE1A7',\n    'noteFSharpHalf': '\\uE190',\n    'noteFSharpWhole': '\\uE179',\n    'noteFWhole': '\\uE178',\n    'noteFaBlack': '\\uE163',\n    'noteFaHalf': '\\uE15B',\n    'noteFaWhole': '\\uE153',\n    'noteGBlack': '\\uE1A9',\n    'noteGFlatBlack': '\\uE1A8',\n    'noteGFlatHalf': '\\uE191',\n    'noteGFlatWhole': '\\uE17A',\n    'noteGHalf': '\\uE192',\n    'noteGSharpBlack': '\\uE1AA',\n    'noteGSharpHalf': '\\uE193',\n    'noteGSharpWhole': '\\uE17C',\n    'noteGWhole': '\\uE17B',\n    'noteHBlack': '\\uE1AB',\n    'noteHHalf': '\\uE194',\n    'noteHSharpBlack': '\\uE1AC',\n    'noteHSharpHalf': '\\uE195',\n    'noteHSharpWhole': '\\uE17E',\n    'noteHWhole': '\\uE17D',\n    'noteHalfDown': '\\uE1D4',\n    'noteHalfUp': '\\uE1D3',\n    'noteLaBlack': '\\uE165',\n    'noteLaHalf': '\\uE15D',\n    'noteLaWhole': '\\uE155',\n    'noteMiBlack': '\\uE162',\n    'noteMiHalf': '\\uE15A',\n    'noteMiWhole': '\\uE152',\n    'noteQuarterDown': '\\uE1D6',\n    'noteQuarterUp': '\\uE1D5',\n    'noteReBlack': '\\uE161',\n    'noteReHalf': '\\uE159',\n    'noteReWhole': '\\uE151',\n    'noteShapeArrowheadLeftBlack': '\\uE1C9',\n    'noteShapeArrowheadLeftWhite': '\\uE1C8',\n    'noteShapeDiamondBlack': '\\uE1B9',\n    'noteShapeDiamondWhite': '\\uE1B8',\n    'noteShapeIsoscelesTriangleBlack': '\\uE1C5',\n    'noteShapeIsoscelesTriangleWhite': '\\uE1C4',\n    'noteShapeKeystoneBlack': '\\uE1C1',\n    'noteShapeKeystoneWhite': '\\uE1C0',\n    'noteShapeMoonBlack': '\\uE1BD',\n    'noteShapeMoonLeftBlack': '\\uE1C7',\n    'noteShapeMoonLeftWhite': '\\uE1C6',\n    'noteShapeMoonWhite': '\\uE1BC',\n    'noteShapeQuarterMoonBlack': '\\uE1C3',\n    'noteShapeQuarterMoonWhite': '\\uE1C2',\n    'noteShapeRoundBlack': '\\uE1B1',\n    'noteShapeRoundWhite': '\\uE1B0',\n    'noteShapeSquareBlack': '\\uE1B3',\n    'noteShapeSquareWhite': '\\uE1B2',\n    'noteShapeTriangleLeftBlack': '\\uE1B7',\n    'noteShapeTriangleLeftWhite': '\\uE1B6',\n    'noteShapeTriangleRightBlack': '\\uE1B5',\n    'noteShapeTriangleRightWhite': '\\uE1B4',\n    'noteShapeTriangleRoundBlack': '\\uE1BF',\n    'noteShapeTriangleRoundLeftBlack': '\\uE1CB',\n    'noteShapeTriangleRoundLeftWhite': '\\uE1CA',\n    'noteShapeTriangleRoundWhite': '\\uE1BE',\n    'noteShapeTriangleUpBlack': '\\uE1BB',\n    'noteShapeTriangleUpWhite': '\\uE1BA',\n    'noteSiBlack': '\\uE167',\n    'noteSiHalf': '\\uE15F',\n    'noteSiWhole': '\\uE157',\n    'noteSoBlack': '\\uE164',\n    'noteSoHalf': '\\uE15C',\n    'noteSoWhole': '\\uE154',\n    'noteTiBlack': '\\uE166',\n    'noteTiHalf': '\\uE15E',\n    'noteTiWhole': '\\uE156',\n    'noteWhole': '\\uE1D2',\n    'noteheadBlack': '\\uE0A4',\n    'noteheadCircleSlash': '\\uE0F7',\n    'noteheadCircleX': '\\uE0B3',\n    'noteheadCircleXDoubleWhole': '\\uE0B0',\n    'noteheadCircleXHalf': '\\uE0B2',\n    'noteheadCircleXWhole': '\\uE0B1',\n    'noteheadCircledBlack': '\\uE0E4',\n    'noteheadCircledBlackLarge': '\\uE0E8',\n    'noteheadCircledDoubleWhole': '\\uE0E7',\n    'noteheadCircledDoubleWholeLarge': '\\uE0EB',\n    'noteheadCircledHalf': '\\uE0E5',\n    'noteheadCircledHalfLarge': '\\uE0E9',\n    'noteheadCircledWhole': '\\uE0E6',\n    'noteheadCircledWholeLarge': '\\uE0EA',\n    'noteheadCircledXLarge': '\\uE0EC',\n    'noteheadClusterDoubleWhole2nd': '\\uE124',\n    'noteheadClusterDoubleWhole3rd': '\\uE128',\n    'noteheadClusterDoubleWholeBottom': '\\uE12E',\n    'noteheadClusterDoubleWholeMiddle': '\\uE12D',\n    'noteheadClusterDoubleWholeTop': '\\uE12C',\n    'noteheadClusterHalf2nd': '\\uE126',\n    'noteheadClusterHalf3rd': '\\uE12A',\n    'noteheadClusterHalfBottom': '\\uE134',\n    'noteheadClusterHalfMiddle': '\\uE133',\n    'noteheadClusterHalfTop': '\\uE132',\n    'noteheadClusterQuarter2nd': '\\uE127',\n    'noteheadClusterQuarter3rd': '\\uE12B',\n    'noteheadClusterQuarterBottom': '\\uE137',\n    'noteheadClusterQuarterMiddle': '\\uE136',\n    'noteheadClusterQuarterTop': '\\uE135',\n    'noteheadClusterRoundBlack': '\\uE123',\n    'noteheadClusterRoundWhite': '\\uE122',\n    'noteheadClusterSquareBlack': '\\uE121',\n    'noteheadClusterSquareWhite': '\\uE120',\n    'noteheadClusterWhole2nd': '\\uE125',\n    'noteheadClusterWhole3rd': '\\uE129',\n    'noteheadClusterWholeBottom': '\\uE131',\n    'noteheadClusterWholeMiddle': '\\uE130',\n    'noteheadClusterWholeTop': '\\uE12F',\n    'noteheadDiamondBlack': '\\uE0DB',\n    'noteheadDiamondBlackOld': '\\uE0E2',\n    'noteheadDiamondBlackWide': '\\uE0DC',\n    'noteheadDiamondClusterBlack2nd': '\\uE139',\n    'noteheadDiamondClusterBlack3rd': '\\uE13B',\n    'noteheadDiamondClusterBlackBottom': '\\uE141',\n    'noteheadDiamondClusterBlackMiddle': '\\uE140',\n    'noteheadDiamondClusterBlackTop': '\\uE13F',\n    'noteheadDiamondClusterWhite2nd': '\\uE138',\n    'noteheadDiamondClusterWhite3rd': '\\uE13A',\n    'noteheadDiamondClusterWhiteBottom': '\\uE13E',\n    'noteheadDiamondClusterWhiteMiddle': '\\uE13D',\n    'noteheadDiamondClusterWhiteTop': '\\uE13C',\n    'noteheadDiamondDoubleWhole': '\\uE0D7',\n    'noteheadDiamondDoubleWholeOld': '\\uE0DF',\n    'noteheadDiamondHalf': '\\uE0D9',\n    'noteheadDiamondHalfFilled': '\\uE0E3',\n    'noteheadDiamondHalfOld': '\\uE0E1',\n    'noteheadDiamondHalfWide': '\\uE0DA',\n    'noteheadDiamondOpen': '\\uE0FC',\n    'noteheadDiamondWhite': '\\uE0DD',\n    'noteheadDiamondWhiteWide': '\\uE0DE',\n    'noteheadDiamondWhole': '\\uE0D8',\n    'noteheadDiamondWholeOld': '\\uE0E0',\n    'noteheadDoubleWhole': '\\uE0A0',\n    'noteheadDoubleWholeSquare': '\\uE0A1',\n    'noteheadDoubleWholeWithX': '\\uE0B4',\n    'noteheadHalf': '\\uE0A3',\n    'noteheadHalfFilled': '\\uE0FB',\n    'noteheadHalfWithX': '\\uE0B6',\n    'noteheadHeavyX': '\\uE0F8',\n    'noteheadHeavyXHat': '\\uE0F9',\n    'noteheadLargeArrowDownBlack': '\\uE0F4',\n    'noteheadLargeArrowDownDoubleWhole': '\\uE0F1',\n    'noteheadLargeArrowDownHalf': '\\uE0F3',\n    'noteheadLargeArrowDownWhole': '\\uE0F2',\n    'noteheadLargeArrowUpBlack': '\\uE0F0',\n    'noteheadLargeArrowUpDoubleWhole': '\\uE0ED',\n    'noteheadLargeArrowUpHalf': '\\uE0EF',\n    'noteheadLargeArrowUpWhole': '\\uE0EE',\n    'noteheadMoonBlack': '\\uE0CB',\n    'noteheadMoonWhite': '\\uE0CA',\n    'noteheadNull': '\\uE0A5',\n    'noteheadParenthesis': '\\uE0CE',\n    'noteheadParenthesisLeft': '\\uE0F5',\n    'noteheadParenthesisRight': '\\uE0F6',\n    'noteheadPlusBlack': '\\uE0AF',\n    'noteheadPlusDoubleWhole': '\\uE0AC',\n    'noteheadPlusHalf': '\\uE0AE',\n    'noteheadPlusWhole': '\\uE0AD',\n    'noteheadRectangularClusterBlackBottom': '\\uE144',\n    'noteheadRectangularClusterBlackMiddle': '\\uE143',\n    'noteheadRectangularClusterBlackTop': '\\uE142',\n    'noteheadRectangularClusterWhiteBottom': '\\uE147',\n    'noteheadRectangularClusterWhiteMiddle': '\\uE146',\n    'noteheadRectangularClusterWhiteTop': '\\uE145',\n    'noteheadRoundBlack': '\\uE113',\n    'noteheadRoundBlackLarge': '\\uE110',\n    'noteheadRoundBlackSlashed': '\\uE118',\n    'noteheadRoundBlackSlashedLarge': '\\uE116',\n    'noteheadRoundWhite': '\\uE114',\n    'noteheadRoundWhiteLarge': '\\uE111',\n    'noteheadRoundWhiteSlashed': '\\uE119',\n    'noteheadRoundWhiteSlashedLarge': '\\uE117',\n    'noteheadRoundWhiteWithDot': '\\uE115',\n    'noteheadRoundWhiteWithDotLarge': '\\uE112',\n    'noteheadSlashDiamondWhite': '\\uE104',\n    'noteheadSlashHorizontalEnds': '\\uE101',\n    'noteheadSlashHorizontalEndsMuted': '\\uE108',\n    'noteheadSlashVerticalEnds': '\\uE100',\n    'noteheadSlashVerticalEndsMuted': '\\uE107',\n    'noteheadSlashVerticalEndsSmall': '\\uE105',\n    'noteheadSlashWhiteHalf': '\\uE103',\n    'noteheadSlashWhiteMuted': '\\uE109',\n    'noteheadSlashWhiteWhole': '\\uE102',\n    'noteheadSlashX': '\\uE106',\n    'noteheadSlashedBlack1': '\\uE0CF',\n    'noteheadSlashedBlack2': '\\uE0D0',\n    'noteheadSlashedDoubleWhole1': '\\uE0D5',\n    'noteheadSlashedDoubleWhole2': '\\uE0D6',\n    'noteheadSlashedHalf1': '\\uE0D1',\n    'noteheadSlashedHalf2': '\\uE0D2',\n    'noteheadSlashedWhole1': '\\uE0D3',\n    'noteheadSlashedWhole2': '\\uE0D4',\n    'noteheadSquareBlack': '\\uE0B9',\n    'noteheadSquareBlackLarge': '\\uE11A',\n    'noteheadSquareBlackWhite': '\\uE11B',\n    'noteheadSquareWhite': '\\uE0B8',\n    'noteheadTriangleDownBlack': '\\uE0C7',\n    'noteheadTriangleDownDoubleWhole': '\\uE0C3',\n    'noteheadTriangleDownHalf': '\\uE0C5',\n    'noteheadTriangleDownWhite': '\\uE0C6',\n    'noteheadTriangleDownWhole': '\\uE0C4',\n    'noteheadTriangleLeftBlack': '\\uE0C0',\n    'noteheadTriangleLeftWhite': '\\uE0BF',\n    'noteheadTriangleRightBlack': '\\uE0C2',\n    'noteheadTriangleRightWhite': '\\uE0C1',\n    'noteheadTriangleRoundDownBlack': '\\uE0CD',\n    'noteheadTriangleRoundDownWhite': '\\uE0CC',\n    'noteheadTriangleUpBlack': '\\uE0BE',\n    'noteheadTriangleUpDoubleWhole': '\\uE0BA',\n    'noteheadTriangleUpHalf': '\\uE0BC',\n    'noteheadTriangleUpRightBlack': '\\uE0C9',\n    'noteheadTriangleUpRightWhite': '\\uE0C8',\n    'noteheadTriangleUpWhite': '\\uE0BD',\n    'noteheadTriangleUpWhole': '\\uE0BB',\n    'noteheadVoidWithX': '\\uE0B7',\n    'noteheadWhole': '\\uE0A2',\n    'noteheadWholeFilled': '\\uE0FA',\n    'noteheadWholeWithX': '\\uE0B5',\n    'noteheadXBlack': '\\uE0A9',\n    'noteheadXDoubleWhole': '\\uE0A6',\n    'noteheadXHalf': '\\uE0A8',\n    'noteheadXOrnate': '\\uE0AA',\n    'noteheadXOrnateEllipse': '\\uE0AB',\n    'noteheadXWhole': '\\uE0A7',\n    'octaveBaselineA': '\\uEC91',\n    'octaveBaselineB': '\\uEC93',\n    'octaveBaselineM': '\\uEC95',\n    'octaveBaselineV': '\\uEC97',\n    'octaveBassa': '\\uE51F',\n    'octaveLoco': '\\uEC90',\n    'octaveParensLeft': '\\uE51A',\n    'octaveParensRight': '\\uE51B',\n    'octaveSuperscriptA': '\\uEC92',\n    'octaveSuperscriptB': '\\uEC94',\n    'octaveSuperscriptM': '\\uEC96',\n    'octaveSuperscriptV': '\\uEC98',\n    'ornamentComma': '\\uE581',\n    'ornamentDoubleObliqueLinesAfterNote': '\\uE57E',\n    'ornamentDoubleObliqueLinesBeforeNote': '\\uE57D',\n    'ornamentDownCurve': '\\uE578',\n    'ornamentHaydn': '\\uE56F',\n    'ornamentHighLeftConcaveStroke': '\\uE592',\n    'ornamentHighLeftConvexStroke': '\\uE593',\n    'ornamentHighRightConcaveStroke': '\\uE5A2',\n    'ornamentHighRightConvexStroke': '\\uE5A3',\n    'ornamentHookAfterNote': '\\uE576',\n    'ornamentHookBeforeNote': '\\uE575',\n    'ornamentLeftFacingHalfCircle': '\\uE572',\n    'ornamentLeftFacingHook': '\\uE574',\n    'ornamentLeftPlus': '\\uE597',\n    'ornamentLeftShakeT': '\\uE596',\n    'ornamentLeftVerticalStroke': '\\uE594',\n    'ornamentLeftVerticalStrokeWithCross': '\\uE595',\n    'ornamentMordent': '\\uE56C',\n    'ornamentMordentInverted': '\\uE56D',\n    'ornamentOriscus': '\\uEA21',\n    'ornamentPinceCouperin': '\\uE588',\n    'ornamentPortDeVoixV': '\\uE570',\n    'ornamentQuilisma': '\\uEA20',\n    'ornamentRightFacingHalfCircle': '\\uE571',\n    'ornamentRightFacingHook': '\\uE573',\n    'ornamentRightVerticalStroke': '\\uE5A4',\n    'ornamentSchleifer': '\\uE587',\n    'ornamentShake3': '\\uE582',\n    'ornamentShakeMuffat1': '\\uE584',\n    'ornamentShortObliqueLineAfterNote': '\\uE57A',\n    'ornamentShortObliqueLineBeforeNote': '\\uE579',\n    'ornamentTopLeftConcaveStroke': '\\uE590',\n    'ornamentTopLeftConvexStroke': '\\uE591',\n    'ornamentTopRightConcaveStroke': '\\uE5A0',\n    'ornamentTopRightConvexStroke': '\\uE5A1',\n    'ornamentTremblement': '\\uE56E',\n    'ornamentTremblementCouperin': '\\uE589',\n    'ornamentTrill': '\\uE566',\n    'ornamentTurn': '\\uE567',\n    'ornamentTurnInverted': '\\uE568',\n    'ornamentTurnSlash': '\\uE569',\n    'ornamentTurnUp': '\\uE56A',\n    'ornamentTurnUpS': '\\uE56B',\n    'ornamentUpCurve': '\\uE577',\n    'ornamentVerticalLine': '\\uE583',\n    'ornamentZigZagLineNoRightEnd': '\\uE59D',\n    'ornamentZigZagLineWithRightEnd': '\\uE59E',\n    'ottava': '\\uE510',\n    'ottavaAlta': '\\uE511',\n    'ottavaBassa': '\\uE512',\n    'ottavaBassaBa': '\\uE513',\n    'ottavaBassaVb': '\\uE51C',\n    'repeat1Bar': '\\uE500',\n    'repeat2Bars': '\\uE501',\n    'repeat4Bars': '\\uE502',\n    'repeatDot': '\\uE044',\n    'repeatDots': '\\uE043',\n    'repeatLeft': '\\uE040',\n    'repeatRight': '\\uE041',\n    'repeatRightLeft': '\\uE042',\n    'rest1024th': '\\uE4ED',\n    'rest128th': '\\uE4EA',\n    'rest16th': '\\uE4E7',\n    'rest256th': '\\uE4EB',\n    'rest32nd': '\\uE4E8',\n    'rest512th': '\\uE4EC',\n    'rest64th': '\\uE4E9',\n    'rest8th': '\\uE4E6',\n    'restDoubleWhole': '\\uE4E2',\n    'restDoubleWholeLegerLine': '\\uE4F3',\n    'restHBar': '\\uE4EE',\n    'restHBarLeft': '\\uE4EF',\n    'restHBarMiddle': '\\uE4F0',\n    'restHBarRight': '\\uE4F1',\n    'restHalf': '\\uE4E4',\n    'restHalfLegerLine': '\\uE4F5',\n    'restLonga': '\\uE4E1',\n    'restMaxima': '\\uE4E0',\n    'restQuarter': '\\uE4E5',\n    'restQuarterOld': '\\uE4F2',\n    'restQuarterZ': '\\uE4F6',\n    'restWhole': '\\uE4E3',\n    'restWholeLegerLine': '\\uE4F4',\n    'reversedBrace': '\\uE001',\n    'reversedBracketBottom': '\\uE006',\n    'reversedBracketTop': '\\uE005',\n    'rightRepeatSmall': '\\uE04D',\n    'segno': '\\uE047',\n    'segnoSerpent1': '\\uE04A',\n    'segnoSerpent2': '\\uE04B',\n    'semipitchedPercussionClef1': '\\uE06B',\n    'semipitchedPercussionClef2': '\\uE06C',\n    'splitBarDivider': '\\uE00A',\n    'staffDivideArrowDown': '\\uE00B',\n    'staffDivideArrowUp': '\\uE00C',\n    'staffDivideArrowUpDown': '\\uE00D',\n    'stem': '\\uE210',\n    'stemBowOnBridge': '\\uE215',\n    'stemBowOnTailpiece': '\\uE216',\n    'stemBuzzRoll': '\\uE217',\n    'stemDamp': '\\uE218',\n    'stemHarpStringNoise': '\\uE21F',\n    'stemMultiphonicsBlack': '\\uE21A',\n    'stemMultiphonicsBlackWhite': '\\uE21C',\n    'stemMultiphonicsWhite': '\\uE21B',\n    'stemPendereckiTremolo': '\\uE213',\n    'stemRimShot': '\\uE21E',\n    'stemSprechgesang': '\\uE211',\n    'stemSulPonticello': '\\uE214',\n    'stemSussurando': '\\uE21D',\n    'stemSwished': '\\uE212',\n    'stemVibratoPulse': '\\uE219',\n    'stringsBowBehindBridge': '\\uE618',\n    'stringsBowOnBridge': '\\uE619',\n    'stringsBowOnTailpiece': '\\uE61A',\n    'stringsChangeBowDirection': '\\uE626',\n    'stringsDownBow': '\\uE610',\n    'stringsDownBowTurned': '\\uE611',\n    'stringsFouette': '\\uE622',\n    'stringsHalfHarmonic': '\\uE615',\n    'stringsHarmonic': '\\uE614',\n    'stringsMuteOff': '\\uE617',\n    'stringsMuteOn': '\\uE616',\n    'stringsOverpressureDownBow': '\\uE61B',\n    'stringsOverpressureNoDirection': '\\uE61F',\n    'stringsOverpressurePossibileDownBow': '\\uE61D',\n    'stringsOverpressurePossibileUpBow': '\\uE61E',\n    'stringsOverpressureUpBow': '\\uE61C',\n    'stringsThumbPosition': '\\uE624',\n    'stringsThumbPositionTurned': '\\uE625',\n    'stringsUpBow': '\\uE612',\n    'stringsUpBowTurned': '\\uE613',\n    'stringsVibratoPulse': '\\uE623',\n    'systemDivider': '\\uE007',\n    'systemDividerExtraLong': '\\uE009',\n    'systemDividerLong': '\\uE008',\n    'textAugmentationDot': '\\uE1FC',\n    'textBlackNoteFrac16thLongStem': '\\uE1F5',\n    'textBlackNoteFrac16thShortStem': '\\uE1F4',\n    'textBlackNoteFrac32ndLongStem': '\\uE1F6',\n    'textBlackNoteFrac8thLongStem': '\\uE1F3',\n    'textBlackNoteFrac8thShortStem': '\\uE1F2',\n    'textBlackNoteLongStem': '\\uE1F1',\n    'textBlackNoteShortStem': '\\uE1F0',\n    'textCont16thBeamLongStem': '\\uE1FA',\n    'textCont16thBeamShortStem': '\\uE1F9',\n    'textCont32ndBeamLongStem': '\\uE1FB',\n    'textCont8thBeamLongStem': '\\uE1F8',\n    'textCont8thBeamShortStem': '\\uE1F7',\n    'textTie': '\\uE1FD',\n    'textTuplet3LongStem': '\\uE202',\n    'textTuplet3ShortStem': '\\uE1FF',\n    'textTupletBracketEndLongStem': '\\uE203',\n    'textTupletBracketEndShortStem': '\\uE200',\n    'textTupletBracketStartLongStem': '\\uE201',\n    'textTupletBracketStartShortStem': '\\uE1FE',\n    'timeSig0': '\\uE080',\n    'timeSig1': '\\uE081',\n    'timeSig2': '\\uE082',\n    'timeSig3': '\\uE083',\n    'timeSig4': '\\uE084',\n    'timeSig5': '\\uE085',\n    'timeSig6': '\\uE086',\n    'timeSig7': '\\uE087',\n    'timeSig8': '\\uE088',\n    'timeSig9': '\\uE089',\n    'timeSigBracketLeft': '\\uEC80',\n    'timeSigBracketLeftSmall': '\\uEC82',\n    'timeSigBracketRight': '\\uEC81',\n    'timeSigBracketRightSmall': '\\uEC83',\n    'timeSigCombDenominator': '\\uE09F',\n    'timeSigCombNumerator': '\\uE09E',\n    'timeSigComma': '\\uE096',\n    'timeSigCommon': '\\uE08A',\n    'timeSigCut2': '\\uEC85',\n    'timeSigCutCommon': '\\uE08B',\n    'timeSigEquals': '\\uE08F',\n    'timeSigFractionHalf': '\\uE098',\n    'timeSigFractionOneThird': '\\uE09A',\n    'timeSigFractionQuarter': '\\uE097',\n    'timeSigFractionThreeQuarters': '\\uE099',\n    'timeSigFractionTwoThirds': '\\uE09B',\n    'timeSigFractionalSlash': '\\uE08E',\n    'timeSigMinus': '\\uE090',\n    'timeSigMultiply': '\\uE091',\n    'timeSigOpenPenderecki': '\\uE09D',\n    'timeSigParensLeft': '\\uE094',\n    'timeSigParensLeftSmall': '\\uE092',\n    'timeSigParensRight': '\\uE095',\n    'timeSigParensRightSmall': '\\uE093',\n    'timeSigPlus': '\\uE08C',\n    'timeSigPlusSmall': '\\uE08D',\n    'timeSigSlash': '\\uEC84',\n    'timeSigX': '\\uE09C',\n    'tremolo1': '\\uE220',\n    'tremolo2': '\\uE221',\n    'tremolo3': '\\uE222',\n    'tremolo4': '\\uE223',\n    'tremolo5': '\\uE224',\n    'tremoloDivisiDots2': '\\uE22E',\n    'tremoloDivisiDots3': '\\uE22F',\n    'tremoloDivisiDots4': '\\uE230',\n    'tremoloDivisiDots6': '\\uE231',\n    'tremoloFingered1': '\\uE225',\n    'tremoloFingered2': '\\uE226',\n    'tremoloFingered3': '\\uE227',\n    'tremoloFingered4': '\\uE228',\n    'tremoloFingered5': '\\uE229',\n    'tripleTongueAbove': '\\uE5F2',\n    'tripleTongueBelow': '\\uE5F3',\n    'tuplet0': '\\uE880',\n    'tuplet1': '\\uE881',\n    'tuplet2': '\\uE882',\n    'tuplet3': '\\uE883',\n    'tuplet4': '\\uE884',\n    'tuplet5': '\\uE885',\n    'tuplet6': '\\uE886',\n    'tuplet7': '\\uE887',\n    'tuplet8': '\\uE888',\n    'tuplet9': '\\uE889',\n    'tupletColon': '\\uE88A',\n    'unmeasuredTremolo': '\\uE22C',\n    'unmeasuredTremoloSimple': '\\uE22D',\n    'unpitchedPercussionClef1': '\\uE069',\n    'unpitchedPercussionClef2': '\\uE06A'\n  }\n};\n\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/knowledge.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 755,
    "kind": "file",
    "name": "lib/score/score.js",
    "content": "import StaffSystem from './classes/staff-system.js';\nimport ScoreEvent from './classes/score-event.js';\nimport ScoreMeta from './classes/score-meta.js';\nimport ScoreBar from './classes/score-bar.js';\nimport ScoreBracket from './classes/score-bracket.js';\nimport ScoreClef from './classes/score-clef.js';\nimport ScoreKey from './classes/score-key.js';\nimport ScoreNoteChord from './classes/score-note-chord.js';\nimport ScoreNote from './classes/score-note.js';\nimport ScoreRest from './classes/score-rest.js';\nimport ScoreTie from './classes/score-tie.js';\nimport ScoreTime from './classes/score-time.js';\nimport ScoreTuplet from './classes/score-tuplet.js';\nimport ScoreSyllable from './classes/score-syllable.js';\nimport NoteChord from '../classes/event/note-chord.js';\n// import Note from '../classes/event/note.js';\nimport Rest from '../classes/event/rest.js';\nimport Key from '../classes/meta/key.js';\nimport Clef from '../classes/meta/clef.js';\nimport Tuplet from '../classes/event/tuplet.js';\nimport Interval from '../classes/interval.js';\nimport knowledge from './knowledge.js';\nimport Fraction from 'fraction.js';\n\nimport SVG from 'svg.js';\nimport _ from 'underscore';\n\nlet scoreMetaOrdering = [\n  ScoreClef,\n  // ScoreSlur,\n  ScoreBar,\n  ScoreKey,\n  ScoreTime,\n  // ScoreTempo,\n  ScoreTuplet\n];\n\nexport default class Score {\n  constructor(params) {\n    this.song = params.song;\n    this.staffSystems = [];\n    this.staffSize = params.staffSize || 28;\n    this.width = params.width || 700;\n    this.height = params.height || 1200;\n    this.staffWidth = params.staffWidth || 600; // TODO\n    this.zoom = 1.0;\n    this.musicFont = params.musicFont || 'RemusBravura';\n    this.musicFontMetadata = params.musicFontMetadata || { glyphBBoxes: {}, glyphsWithAnchors: {} };\n    this.musicFontGlyphs = params.musicFontGlyphs || {};\n    this.engravingDefaults = params.engravingDefaults || this.musicFontMetadata.engravingDefaults || {};\n    this.staffDistance = params.staffDistance || 80;\n    this.firstStaffSystemY = params.firstStaffSystemY || 40;\n    this.staffSystemDistance = params.staffSystemDistance || 160;\n    this.autoSystemBreaks = params.autoSystemBreaks || false; // TODO: Rename to pageMode or something like that\n    this.hiddenElements = params.hiddenElements || [];\n    this.referenceDuration = params.referenceDuration || 0.2;\n    this.referenceNoteSpace = params.referenceNoteSpace || 3.0;\n    this.horizontalProportionalFactor = params.horizontalProportionalFactor || 0.65;\n    this.raggedRight = params.raggedRight || false;  // Don't justify staff systems\n    this.raggedLast = params.raggedLast === false ? false : true;     // Don't justify last staff system\n    this.measureLayout = params.measureLayout || null;\n  }\n\n  updateScore() {\n    //\n    // This is the main entry point for creating a Score.\n    //\n    // Score creation consists of a couple of phases:\n    //\n    // 0)  Decide which voices to \"draw\"\n    //\n    // 1)  Generate a \"score list\" for each voice, i.e. a list of ScoreItems corresponding\n    //     to the Items in the voice\n    //     Main function: makeScoreList()\n    //\n    // 2)  Combine the score lists \"column-wise\", grouping score items that happen at the same time and\n    //     can be aligned horizontally\n    //     Main function: groupScoreLists()\n    //\n    // 3)  Calculate stems, beams, accidentals etc\n    //     Functions: calculateStemsAndBeams(), shiftSecondIntervalsAndSetDeltas()\n    //\n    // 4)  Distribute score items horizontally, effectively creating one long staff system\n    //     Main function: layoutScoreItems()\n    //\n    // 5)  Break the score into multiple staff systems if needed and required\n    //     Functions: breakScore(), dontBreakScore()\n    //\n    // 6)  Create additional score items (ties, slurs, brackets etc)\n    //     Functions: createTies(), createBrackets(), ...\n    //\n    // 7)  Calculate vertical spacing (esp. if more than one staff system)\n    //     and let each ScoreItem store its own position\n    //\n    // 8)  Make final adjustments to some ScoreItems\n    //     Functions: adjustBeams()\n    //\n    //  (In reality, step 5-8 are somewhat interleaved for simplicity and performance reasons)\n    //\n    //  Additionally, the current selection is stored in the beginning of the function and\n    //  restored (if possible) in the end, after score creating is finished.\n    //\n    //  Finally, call onScoreUpdated callback (if set).\n    //\n\n    let song = this.song;\n    if (!song) return; // sanity check\n\n    //\n    //  Store selection\n    //\n\n    let selectedItems = this.sel ? this.sel.map(i => { return i.item; }) : [];\n    let newSelection = [];\n\n    //\n    //  Step 0:  Decide which voices to \"draw\"\n    //\n\n    song.resolve();\n    let voices = song.findEvents('Voice');\n    let scoreLists = [];\n    let voiceStaves = [];\n    // voices = [voices[0]]; // TEMP\n\n    //\n    //  Step 1:  Generate a \"score list\" for each voice\n    //\n\n    let staff = 0;\n    let staves = [];\n    for (let voice of voices) {\n      scoreLists.push(makeScoreList(voice, this, {voice: voice}));\n      staves.push({id: staff, staffLines: voice.kind === 'single-drum' ? 1 : 5});\n      voiceStaves[voice.id] = staff++;\n    }\n    this.staves = staves;\n\n    //\n    //  Step 2:  Combine the score lists \"column-wise\"\n    //\n\n    // Temp: assign staff slot of all items.\n    // This should probably be done directly by makeScoreList\n    for (let scoreList of scoreLists) {\n      for (let item of scoreList) {\n        item.staff = item.voice ? voiceStaves[item.voice.id] : 0;\n      }\n    }\n\n    let scoreListGroups = groupScoreLists(scoreLists);\n\n    //\n    //  Step 3:  Calculate stems, beams, accidentals etc\n    //\n\n    createAccidentals(scoreListGroups);\n    calculateStemsAndBeams(scoreListGroups);\n    shiftSecondIntervalsAndSetDeltas(scoreListGroups, this);\n\n    //\n    //  Step 4:  Distribute score items horizontally\n    //  Step 5:  Break the score into multiple staff systems if needed\n    //\n\n    let staffSystems;\n    if (this.autoSystemBreaks) { // TODO: what to call this parameter?\n      staffSystems = breakScore(layoutScoreItems(scoreListGroups, this), this); // TODO: width\n    } else {\n      staffSystems = dontBreakScore(layoutScoreItems(scoreListGroups, this), this);\n    }\n    this.staffSystems = staffSystems;\n\n    //\n    //  Step 6:  Create additional score items (ties, slurs, brackets etc)\n    //  Step 7:  Calculate vertical spacing and let each ScoreItem store its own position\n    //  Step 8:  Make final adjustments to some ScoreItems\n    //\n\n    for (let staffSystem of staffSystems) {\n      adjustBeams(staffSystem.items);\n      if (this.elementVisible('ScoreTie')) {\n        staffSystem.items = staffSystem.items.concat(createTies(staffSystem.items, this));\n        for (let item of staffSystem.items) {\n          // item.staff = item.voice ? voiceStaves[item.voice.id] : 0; // TEMP!!\n          item.staffY = this.staffDistance * item.staff; // TEMP!!\n          item.updatePosition();\n          item.updateBounds();\n          if (selectedItems.indexOf(item.item) >= 0) {\n            newSelection.push(item);\n          }\n        }\n      }\n      if (this.elementVisible('ScoreBracket')) {\n        createBrackets(staffSystem, this);\n      }\n    }\n\n    //\n    //  Restore selection\n    //\n\n    this.sel = newSelection;\n\n    //\n    //  Finished! Now call callback if set\n    //\n\n    if (this.onScoreUpdated instanceof Function) this.onScoreUpdated();\n    console.log(this.staffSystems);\n  }\n\n  itemAt(x, y) {\n    return this.staffSystems[0].itemAt(x, y);\n  }\n\n  draw(ctx, x = 0, y = 0, w = this.width, h = this.height) {\n    ctx.save();\n    ctx.scale(this.zoom, this.zoom);\n    ctx.font = this.staffSize + 'px ' + this.musicFont;\n    for (let s = 0; s < this.staffSystems.length; s++) {\n      this.staffSystems[s].draw(ctx);\n    }\n    ctx.restore();\n  }\n\n  hideElements(elementClasses) {\n    this.hiddenElements = elementClasses;\n    this.updateScore();\n  }\n\n  elementVisible(elementClass) {\n    return _.all(this.hiddenElements, (el) => el !== elementClass);\n  }\n\n  toSVG(svg) {\n    this.itemsBySVGID = {};\n    svg.on('click', this.handleClick.bind(this));\n    svg = svg.group().id('score');\n    // svg.attr({'font-family': this.musicFont, 'font-size': this.staffSize + 'px '});\n    svg.font({family: this.musicFont, size: this.staffSize});\n    for (let s = 0; s < this.staffSystems.length; s++) {\n      let staffSystem = this.staffSystems[s].toSVG(svg);\n      this.itemsBySVGID[staffSystem.id()] = this.staffSystems[s];\n    }\n  }\n\n  toString() {\n    return '[Score]';\n  }\n\n  handleClick(e) {\n    let svgElem = e.target;\n    let svgID = null;\n    if (svgElem) {\n      svgElem = SVG.adopt(svgElem);\n      svgElem = svgElem.parent('.ScoreNote') || svgElem.parent('.ScoreItem');\n      if (svgElem) {\n        svgID = svgElem.id instanceof Function ? svgElem.id() : svgElem.id;\n      }\n    }\n    let item = svgID ? this.itemsBySVGID[svgID] : null;\n    if (item) {\n      // Clicked an item\n      if (e.shiftKey) {\n        // ... with shift key = add to selection\n        if (this.sel) {\n          this.sel.push(item);\n        } else {\n          this.sel = [item];\n        }\n      } else {\n        // ... without shift key = set new selection\n        if (this.sel) {\n          for (let i of this.sel) {\n            if (i !== item && i.svgElement) i.svgElement.removeClass('selected');\n          }\n        }\n        this.sel = [item];\n      }\n      svgElem.addClass('selected');\n    } else {\n      // No item clicked\n      if (this.sel) {\n        for (let item of this.sel) {\n          if (item.svgElement) item.svgElement.removeClass('selected');\n        }\n      }\n      this.sel = null;\n    }\n    e.stopPropagation();\n    // Call handler if bound\n    if (this.onSelectionChanged instanceof Function) {\n      this.onSelectionChanged(this);\n    }\n  }\n\n  handleMouseEnter(e) {\n    let element = SVG.adopt(e.target);\n    element.addClass('hovered');\n    if (element.hasClass('ScoreNote')) {\n      element.parent().addClass('hovered-note');\n    }\n  }\n\n  handleMouseLeave(e) {\n    let element = SVG.adopt(e.target);\n    element.removeClass('hovered');\n    if (element.hasClass('ScoreNote')) {\n      element.parent().removeClass('hovered-note');\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 38) {\n      if (this.sel) {\n        let changed = false;\n        for (let item of this.sel) {\n          if (item instanceof ScoreNoteChord) {\n            for (let scoreNote of item.notes) {\n              scoreNote.item.pitch.transpose(Interval.fromString('M2'));\n              changed = true;\n            }\n          }\n        }\n        if (changed) {\n          this.updateScore();\n        }\n      }\n    } else if (e.keyCode === 40) {\n      if (this.sel) {\n        let changed = false;\n        for (let item of this.sel) {\n          if (item instanceof ScoreNoteChord) {\n            for (let scoreNote of item.notes) {\n              scoreNote.item.pitch.transpose(Interval.fromString('M-2'));\n              changed = true;\n            }\n          }\n        }\n        if (changed) {\n          this.updateScore();\n        }\n      }\n    } else if (e.keyCode === 37) {\n      // left arrow\n    } else if (e.keyCode === 39) {\n      // right arrow\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  handleKeyUp(e) {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\nScore.knowledge = knowledge;\n\nfunction makeScoreList(container, score, params = {}, eventsOnly) {\n  let items = container.events;\n  let scoreItems = [];\n  let first = true;\n  let position = new Fraction(0);\n  let voice = params.voice;\n  let drumMode = (voice.kind === 'drums' || voice.kind === 'single-drum');\n  let measureDuration = new Fraction(container.cache.time.num, container.cache.time.denom);\n  let beats = [];\n  let totalAtoms = 0;\n  for (let beat of container.cache.time.beats.slice(0, -1)) {\n    totalAtoms += beat;\n    beats.push(new Fraction(totalAtoms, container.cache.time.denom));\n  }\n  // let timeScale = params.timeScale || 1;\n\n  // Get first clef\n  let clef = params.clef || container.metas.find(m => m instanceof Clef && m.cache.absWn.equals(container.cache.absWn));\n\n  if (!eventsOnly) {\n    if (drumMode) {\n      if (score.elementVisible('ScoreClef')) {\n        scoreItems.push(new ScoreClef(null, score, {position: new Fraction(0), voice: params.voice}));\n      }\n      if (score.elementVisible('ScoreTime')) {\n        scoreItems.push(new ScoreTime(container.cache.time, score, {position: new Fraction(0), voice: params.voice}));\n      }\n    } else {\n      if (score.elementVisible('ScoreClef')) {\n        let clefKind = clef ? clef.kind : 'g';\n        let clefOctave = clef ? clef.octave : 0;\n        scoreItems.push(new ScoreClef(null, score, {position: new Fraction(0), voice: params.voice, kind: clefKind, octave: clefOctave}));\n      }\n      if (score.elementVisible('ScoreTime')) {\n        scoreItems.push(new ScoreTime(container.cache.time, score, {position: new Fraction(0), voice: params.voice}));\n      }\n      let key = container.metas.find(m => m instanceof Key && m.cache.absWn.equals(container.cache.absWn)) || container.cache.key;\n      if (key && score.elementVisible('ScoreKey')) {\n        scoreItems.push(new ScoreKey(key, score, {position: new Fraction(0), voice: params.voice}));\n      }\n    }\n  }\n\n  for (let item of items) {\n    // if (item instanceof Note) {\n    //   item = new NoteChord({events: [item], duration: item.duration});\n    // }\n    if (item.cache.absWn.mod(measureDuration).valueOf() === 0) {\n      if (first) {\n        first = false;\n      } else if (score.elementVisible('ScoreBar')) {\n        scoreItems.push(new ScoreBar(null, score, {position: item.cache.absWn, voice: params.voice}));\n      }\n    }\n    // NoteChord\n    if (item instanceof NoteChord && score.elementVisible('ScoreNoteChord')) {\n      let scoreItem = new ScoreNoteChord(item, score);\n      let dur = knowledge.noteValues[item.cache.duration.value.toFraction()];\n      if (!dur) console.log('No duration data for ' + item.cache.duration.value.toFraction());\n      scoreItem.voice = params.voice;\n      scoreItem.noteValue = dur.noteValue;\n      scoreItem.flags = dur.flags;\n      scoreItem.dots = dur.dots;\n      scoreItem.notes = [];\n      scoreItem.syllables = [];\n      scoreItem.tiedFrom = item.tiedFrom;\n      scoreItem.tiedTo = item.tiedTo;\n      scoreItem.position = item.cache.absWn;\n      scoreItem.duration = item.cache.duration.value;\n      for (let note of item.events) {\n        let scoreNote = new ScoreNote(note, score, {voice: params.voice, clef: clef});\n        scoreNote.scoreNoteChord = scoreItem;\n        scoreNote.tiedFrom = note.tiedFrom || item.tiedFrom;\n        scoreNote.tiedTo = note.tiedTo || item.tiedTo;\n        scoreNote.notehead = dur.notehead;\n        // scoreNote.voice = params.voice;\n        scoreItem.notes.push(scoreNote);\n      }\n      scoreItem.notes.sort((a, b) => { return a.staffLine - b.staffLine; });\n      // Lyrics\n      if (!item.tiedTo) { // TODO!!\n        let verse = 0;\n        for (let syllable of item.syllables) {\n          let scoreSyllable = new ScoreSyllable(syllable, score, {verse: verse});\n          scoreSyllable.owner = scoreItem;\n          scoreItem.syllables.push(scoreSyllable);\n          verse++;\n        }\n      }\n      scoreItems.push(scoreItem);\n    // Rest\n    } else if (item instanceof Rest && score.elementVisible('ScoreRest')) {\n      let scoreItem = new ScoreRest(item, score);\n      let dur = knowledge.noteValues[item.cache.duration.value.toFraction()];\n      scoreItem.position = item.cache.absWn;\n      scoreItem.duration = item.cache.duration.value;\n      scoreItem.voice = params.voice;\n      scoreItem.noteValue = dur.noteValue;\n      scoreItem.flags = dur.flags;\n      scoreItem.dots = dur.dots;\n      scoreItems.push(scoreItem);\n    // Tuplet\n    } else if (item instanceof Tuplet && score.elementVisible('ScoreTuplet')) {\n      let tuplet = new ScoreTuplet(item, score);\n      tuplet.voice = params.voice;\n      tuplet.position = item.cache.absWn;\n      let tupletItems = makeScoreList(item, score, Object.assign({clef: clef}, params), true);\n      tuplet.items = tupletItems;\n      scoreItems.push(tuplet);\n      for (let tupletItem of tupletItems) {\n        scoreItems.push(tupletItem);\n      }\n    } else {\n      console.log('Skipping event ', item);\n    }\n\n    position = item.cache.endWn;\n  }\n\n  if (position.mod(measureDuration).valueOf() === 0 && !first && score.elementVisible('ScoreBar')) {\n    scoreItems.push(new ScoreBar(null, score, {position: position, voice: params.voice}));\n  }\n\n  // Beaming\n  let processBeamGroup = function(group) {\n    if (group.length > 1) {\n      let pitches = [];\n      for (let e of group) {\n        pitches.push(e.item.cache.absWn.toString());\n      }\n      group[0].beam = '[';\n      group[group.length - 1].beam = ']';\n      for (let i = 1; i < group.length - 1; i++) {\n        group[i].beam = '=';\n      }\n    } else {\n      group[0].beam = null;\n    }\n  };\n  let beamGroup = [];\n  for (let item of scoreItems) {\n    if (item instanceof ScoreEvent && score.elementVisible(item.constructor.name)) {\n      let beamable = (item instanceof ScoreNoteChord) && item.flags;\n      // let atBeat = item.item.cache.absWn.mod(new Fraction(1, 4)).valueOf() === 0; // TODO!!\n      let measureOffset = item.item.cache.absWn.mod(measureDuration);\n      let atBeat = measureOffset.valueOf() === 0 || beats.some(x => x.equals(measureOffset));\n      if (beamGroup.length && (!beamable || atBeat)) {\n        processBeamGroup(beamGroup);\n        beamGroup = [];\n      }\n      if (beamable) {\n        beamGroup.push(item);\n      }\n    }\n  }\n  if (beamGroup.length) processBeamGroup(beamGroup);\n\n  return scoreItems;\n}\n\nfunction createAccidentals(scoreListGroups) {\n  // let currentKey = null;\n  let keyAccidentals = {};\n  let curAccidentals = {};\n  const makeRepeated = (arr, repeats) => [].concat(...Array.from({ length: repeats }, () => arr));\n  const copyKeyToStaff = function(staff) {\n    curAccidentals[staff] = makeRepeated(keyAccidentals[staff] || [0, 0, 0, 0, 0, 0, 0], 12);\n  };\n  for (let group of scoreListGroups) {\n    if (group.items[0] instanceof ScoreKey) {\n      for (let scoreKey of group.items) {\n        keyAccidentals[scoreKey.staff] = group.items[0].accidentals;\n        copyKeyToStaff(scoreKey.staff);\n        // console.log('new key:', keyAccidentals, curAccidentals);\n      }\n      // console.log('Key', keyAccidentals, curAccidentals);\n    } else if (group.items[0] instanceof ScoreBar) {\n      curAccidentals = {};\n    } else {\n      for (let item of group.items) {\n        if (item instanceof ScoreNoteChord && item.voice.kind !== 'single-drum') {\n          let staff = item.staff;\n          if (curAccidentals[staff] === undefined) {\n            copyKeyToStaff(staff);\n          }\n          for (let note of item.notes) {\n            let step = note.coord[0];\n            let accVal = note.item.pitch.accidentalValue();\n            if (accVal !== curAccidentals[staff][step] && !note.tiedTo) {\n              note.displayedAccidental = accVal;\n              curAccidentals[staff][step] = accVal;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction calculateStemDirection(scoreNoteList) {\n  let maxDistance = 0;\n  let direction = 'down';\n  for (let note of scoreNoteList) {\n    if (note.voice.kind === 'single-drum') {\n      return 'up';\n    }\n    let distanceFromMiddle = Math.abs(note.staffLine);\n    if (distanceFromMiddle === maxDistance) {\n      if (note.staffLine <= 0) direction = 'down';\n    } else if (distanceFromMiddle > maxDistance) {\n      direction = note.staffLine > 0 ? 'up' : 'down';\n      maxDistance = distanceFromMiddle;\n    }\n  }\n  return direction;\n}\n\n/**\n *  Helper function for calculate-stems-and-beams\n */\nfunction getBeamList(scoreEvents) {\n  let beamList = [];\n  let currentBeamLevel = [];\n  let currentBeam = [];\n  for (let flag = 1; flag <= 5; flag++) {\n    for (let n = 0; n < scoreEvents.length; n++) {\n      let thisNoteChord = scoreEvents[n];\n      // let nextNoteChord = scoreEvents[n + 1];\n      if (thisNoteChord.flags >= flag) currentBeam.push(thisNoteChord);\n      if (currentBeam.length && (thisNoteChord.flags < flag)) { // TODO: check for tuplets\n        currentBeamLevel.push(currentBeam);\n        currentBeam = [];\n      }\n    }\n    if (currentBeam.length) {\n      currentBeamLevel.push(currentBeam);\n      currentBeam = [];\n    }\n    if (!currentBeamLevel.length) break;\n    beamList.push(currentBeamLevel);\n    currentBeamLevel = [];\n  }\n  return beamList;\n}\n\n/**\n *  Calculate stem directions and default stem lengths,\n *  and set beaming data. Stems are *not* adjusted to\n *  match the beam, use adjustBeams for that after this\n *  function has finished.\n */\nfunction calculateStemsAndBeams(itemGroups) {\n  let notesPerVoice = {};\n  let eventsPerVoice = {};\n  for (let group of itemGroups) {\n    for (let scoreItem of group.items) {\n      // let staffSpace = 0.25 * scoreItem.score.staffSize;\n      if (scoreItem instanceof ScoreNoteChord) {\n        let voice = scoreItem.voice.id;\n        // console.log('voice: ', voice);\n\n        if (scoreItem.beam === '[') {\n          // Beginning of a beam: save the note objects to a list\n          notesPerVoice[voice] = scoreItem.notes;\n          eventsPerVoice[voice] = [scoreItem];\n        } else if (scoreItem.beam === '=') {\n          // Middle of a beam: save the note objects to a list\n          notesPerVoice[voice] = notesPerVoice[voice].concat(scoreItem.notes);\n          eventsPerVoice[voice].push(scoreItem);\n        } else if (scoreItem.beam === ']') {\n          // Beam end: calculate stem directions for the saved note list\n          let scoreNotes = notesPerVoice[voice].concat(scoreItem.notes);\n          let scoreEvents = eventsPerVoice[voice];\n          let stemDirection;\n          // let tieDirection;\n          scoreEvents.push(scoreItem);\n          if (false) {\n            // TODO: non-homophonic\n          } else {\n            // Homophonic\n            stemDirection = calculateStemDirection(scoreNotes);\n          }\n\n          let beamData = {events: scoreEvents, beams: getBeamList(scoreEvents)};\n\n          for (let e of scoreEvents) {\n            e.stem = {direction: stemDirection};\n            let stemStart = e.getStemStart();\n            let stemEnd = e.getStemEnd();\n            e.stem.start = stemStart.start;\n            e.stem.extent = stemStart.extent;\n            e.stem.end = stemEnd;\n            e.beamType = e.beam;\n            e.beam = beamData;\n          }\n        } else {\n          // Otherwise, this is a non-beamed event. Calculate stem-direction for this event separately\n          // scoreItem.stem = {direction: scoreItem.defaultStemDirection()};\n          scoreItem.stem = {direction: calculateStemDirection(scoreItem.notes)};\n          let stemStart = scoreItem.getStemStart();\n          let stemEnd = scoreItem.getStemEnd();\n          scoreItem.stem.start = stemStart.start;\n          scoreItem.stem.extent = stemStart.extent;\n          scoreItem.stem.end = stemEnd;\n          scoreItem.beam = null;\n        }\n      }\n    }\n  }\n}\n\n/**\n *  Calculates beam slopes and adjusts stem lengths in beams so that all\n *  stems in the beam are connected to the beam. scoreX has to be set\n *  for all ScoreNoteChords before adjustBeams is called.\n */\nfunction adjustBeams(scoreItems) {\n  for (let scoreItem of scoreItems) {\n    if (scoreItem.beam) {\n      let beamData = scoreItem.beam;\n      let noteChord1 = beamData.events[0];\n      let noteChord2 = beamData.events[beamData.events.length - 1];\n      if (noteChord1 !== scoreItem) continue; // Only do this once for every beam\n      let stemDir = noteChord1.stem.direction;\n      let note1 = stemDir === 'up' ? noteChord1.notes[0] : noteChord1.notes[noteChord1.notes.length - 1];\n      let note2 = stemDir === 'up' ? noteChord2.notes[0] : noteChord2.notes[noteChord2.notes.length - 1];\n      let flat = note1.staffLine === note2.staffLine;\n      // TODO: check more conditions for flatness (such as repeated pattern, concave shapes, two pitches only)\n      // See Gould, p. 22-23\n      if (flat) {\n        let y = (stemDir === 'up' ? Math.min : Math.max)(...beamData.events.map(e => e.stem.end));\n        for (let event of beamData.events) {\n          event.stem.end = y;\n        }\n      } else {\n        let x1 = noteChord1.scoreX + (noteChord1.stemX || 0);\n        let x2 = noteChord2.scoreX + (noteChord2.stemX || 0);\n        let y1 = (stemDir === 'up' ? Math.min : Math.max)(...beamData.events.map(e => e.stem.end));\n        let y2 = y1;\n        let narrow = (x2 - x1) < (noteChord1.score.staffSize * 0.25 * 3); // width less than three staff spaces\n        let yDelta = note2.staffLine - note1.staffLine;\n        let up = stemDir === 'up';\n        if (yDelta < -3.5 && !narrow) {\n          if (up) y1 += 1; else y2 -= 1;\n        } else if (yDelta <= -2) {\n          if (up) y1 += 0.5; else y2 -= 0.5;\n        } else if (yDelta < 0) {\n          if (up) y1 += 0.25; else y2 -= 0.25;\n        } else if (yDelta > 3.5 && !narrow) {\n          if (up) y2 += 1; else y1 -= 1;\n        } else if (yDelta >= 2) {\n          if (up) y2 += 0.5; else y1 -= 0.5;\n        } else {\n          if (up) y2 += 0.25; else y1 -= 0.25;\n        }\n        let slope = x1 === x2 ? 0 : (y2 - y1) / (x2 - x1);\n        for (let event of beamData.events) {\n          event.stem.end = y1 + slope * ((event.scoreX + (event.stemX || 0)) - x1);\n        }\n      }\n    }\n  }\n}\n\n/**\n *  Create ties for the passed ScoreItems.\n *  NOTE: createTies can be called both StaffSystem-wise or with a complete song-wide SongItems list\n */\nfunction createTies(scoreItems, score) {\n  let staffSpace = score.staffSize * 0.25;\n  let tiesPerVoice = {};\n\n  // First, collect tied notes\n  let ties = [];\n  for (let i = 0; i < scoreItems.length; i++) {\n    let scoreItem = scoreItems[i];\n    if (!(scoreItem instanceof ScoreNoteChord)) continue;\n    let voice = scoreItem.voice;\n    if (scoreItem.tiedTo) {\n      let prevEvent = tiesPerVoice[voice];\n      ties.push({\n        thisEvent: prevEvent,\n        thisNotes: prevEvent ? prevEvent.notes : null,\n        nextEvent: scoreItem,\n        nextNotes: scoreItem.notes\n      });\n      tiesPerVoice[voice] = null;\n    }\n    if (scoreItem.tiedFrom) {\n      tiesPerVoice[voice] = scoreItem;\n    }\n  }\n  // Add unfinished ties\n  for (let voice in tiesPerVoice) {\n    let event = tiesPerVoice[voice];\n    if (event) {\n      ties.push({\n        thisEvent: event,\n        thisNotes: event.notes,\n        nextEvent: null,\n        nextNotes: null\n      });\n    }\n  }\n\n  // Calculate tie directions\n  for (let tie of ties) {\n    let scoreNotes = tie.thisNotes ? tie.thisNotes : tie.nextNotes;\n    let scoreEvent = tie.thisEvent || tie.nextEvent;\n    let stemDirection = scoreEvent.stem.direction;\n    let i = 0;\n    for (let scoreNote of scoreNotes) {\n      if (false) { // TODO\n        // Polyphony: tie follows stem direction\n        scoreNote.tieDirection = stemDirection;\n      } else if (scoreNotes.length === 1) {\n        // Single note: opposite of stem direction\n        scoreNote.tieDirection = stemDirection === 'up' ? 'down' : 'up';\n      } else if (stemDirection === 'up') {\n        // Multiple notes, stem up: divide evenly. For odd number of ties, middle tie goes down.\n        scoreNote.tieDirection = (2 * i + 1) < scoreNotes.length ? 'up' : 'down';\n      } else {\n        // Multiple notes, stem down: divide evenly. For odd number of ties, middle tie goes up.\n        scoreNote.tieDirection = (2 * i + 1) < scoreNotes.length ? 'down' : 'up';\n      }\n      i++;\n    }\n  }\n\n  // Create ScoreTies\n  let scoreTies = [];\n  for (let tie of ties) {\n    if (tie.thisEvent && tie.nextEvent && tie.thisEvent.staffSystem === tie.nextEvent.staffSystem) {\n      // Begins and ends on the same staff system\n      for (let note of tie.thisNotes) {\n        let thisNoteChord = tie.thisEvent; // TODO: will not work for draw-by-parent-voice\n        let nextNote = tie.nextEvent instanceof ScoreNoteChord\n          ? (tie.nextNotes || tie.nextEvent.notes).find(n => {\n            return n.voice === note.voice && n.staffLine === note.staffLine;\n          })\n          : null;\n        let nextEvent = nextNote ? nextNote.scoreNoteChord : 0;\n        let x1 = thisNoteChord.scoreX + (thisNoteChord.dotX || 0) + 2; // TODO\n        let x2 = nextEvent ? nextEvent.scoreX - 2 : x1 + 15; // TODO\n        // Very short ties\n        if (x2 - x1 < staffSpace * 1.5) {\n          // TODO\n        }\n        let scoreTie = new ScoreTie(null, score, {\n          owner: note,\n          fromNote: note,\n          toNote: nextNote,\n          scoreX: x1, // Check if this is correct\n          voice: thisNoteChord.voice,\n          staff: thisNoteChord.staff,\n          staffY: thisNoteChord.staffY,\n          staffSystem: thisNoteChord.staffSystem,\n          x1: x1,\n          x2: x2,\n          direction: note.tieDirection // TODO\n        });\n        if (nextNote) nextNote.tiedTo = scoreTie;\n        scoreTies.push(scoreTie);\n      }\n    } else if (tie.thisEvent) {\n      // Begins on a note\n      for (let note of tie.thisNotes) {\n        let thisNoteChord = tie.thisEvent;\n        let x1 = thisNoteChord.scoreX + (thisNoteChord.dotX || 0) + 2; // TODO\n        let x2 = x1 + staffSpace * 2;\n        let scoreTie = new ScoreTie(null, score, {\n          owner: note,\n          fromNote: note,\n          toNote: null,\n          scoreX: x1, // Check if this is correct\n          voice: thisNoteChord.voice,\n          staff: thisNoteChord.staff,\n          staffY: thisNoteChord.staffY,\n          staffSystem: thisNoteChord.staffSystem,\n          x1: x1,\n          x2: x2,\n          direction: note.tieDirection // TODO\n        });\n        scoreTies.push(scoreTie);\n      }\n    } else if (tie.nextEvent) {\n      // Ends on a note\n      for (let note of tie.nextNotes) {\n        let thisNoteChord = tie.nextEvent;\n        let x2 = thisNoteChord.scoreX; // TODO\n        let x1 = x2 - staffSpace * 2;\n        let scoreTie = new ScoreTie(null, score, {\n          owner: note,\n          fromNote: null,\n          toNote: note,\n          scoreX: x1, // Check if this is correct\n          voice: thisNoteChord.voice,\n          staff: thisNoteChord.staff,\n          staffY: thisNoteChord.staffY,\n          staffSystem: thisNoteChord.staffSystem,\n          x1: x1,\n          x2: x2,\n          direction: note.tieDirection // TODO\n        });\n        scoreTies.push(scoreTie);\n      }\n    }\n  }\n  // (No need to call update-bounds, this is done later anyway)\n  return scoreTies;\n}\n\n/**\n *  Takes an array of scoreLists and generates a list of objects, where each object contains\n *  one or more ScoreItems which are to be drawn at the same \"logical\" x-position in\n *  the score. Actual x-positions are calculated later with regard to spacing etc.\n *\n *  The result list is sorted, so that metas appearing on the same time position are\n *  added in the correct score order.\n *\n *  If a sublist contains a ScoreMeta, it is guaranteed to contain only ScoreMetas\n *  of the same type. Sublists containing ScoreEvents can hold both ScoreNoteChords,\n *  ScoreRests and ScoreDetails (which are not technically ScoreEvents).\n *\n *  NOTE: the scoreLists passed as argument to groupScoreLists are clobbered!\n */\nfunction groupScoreLists(scoreLists) {\n  let result = [];\n\n  let lastEventGroup = null;\n  scoreLists = scoreLists.filter(a => a.length > 0); // Remove empty lists\n  while (scoreLists.length > 0) {\n    // let pos = Math.max(...scoreLists.map(sl => sl[0].item.cache.absWn));\n    // Find next position to collect. Can't use Math.max, as it clobbers the Fractions\n    let pos = Infinity;\n    for (let scoreList of scoreLists) {\n      // if (!scoreList[0].item) {\n      //   console.log('No item for ', scoreList[0]);\n      // }\n      let p = scoreList[0].position;\n      if (p === undefined) {\n        console.log('Undefined position for ', scoreList[0]);\n      }\n      if (p < pos) pos = p;\n    }\n\n    if (pos === Infinity) {\n      console.warn('No position found at all!', scoreLists);\n      break;\n    }\n\n    // console.log('pos: ' + pos.valueOf());\n\n    if (!(pos instanceof Fraction)) {\n      console.warn('Position is not a Fraction at ', pos);\n    }\n\n    // Collect metas at pos\n    let currentItems = [];\n    for (let scoreList of scoreLists) {\n      while (scoreList[0] instanceof ScoreMeta && scoreList[0].position.equals(pos)) {\n        // console.log('  first: ', scoreList[0]);\n        currentItems.push(scoreList.shift());\n      }\n    }\n\n    // for (let x = 0; x < scoreLists.length; x++) {\n    //   while (scoreLists[x][0] instanceof ScoreMeta && scoreLists[x][0].position.equals(pos)) {\n    //     // console.log('  first: ', scoreList[0]);\n    //     currentItems.push(scoreLists[x].shift());\n    //   }\n    // }\n\n    // console.log('  metas collected: ', currentItems);\n\n    // Group metas by type and add them in pre-specified order\n    for (let type of scoreMetaOrdering) {\n      let itemsOfType = currentItems.filter(item => item instanceof type);\n      if (itemsOfType.length > 0) {\n        let group = {\n          position: pos,\n          items: itemsOfType,\n          floating: itemsOfType[0].floating,\n          fixed: itemsOfType[0].fixedWidth\n        };\n        result.push(group);\n        for (let item of itemsOfType) {\n          item.group = group;\n        }\n      }\n    }\n\n    // console.log('  result is now: ', result);\n    // console.log('  scoreLists: ', scoreLists);\n\n    // Collect events at pos\n    currentItems = [];\n    for (let scoreList of scoreLists) {\n      while (scoreList.length > 0 && scoreList[0] instanceof ScoreEvent && scoreList[0].position.equals(pos)) {\n        currentItems.push(scoreList.shift());\n      }\n    }\n\n    // Set duration of last group\n    if (lastEventGroup) {\n      let dur = pos.sub(lastEventGroup.position);\n      if (dur < 0) {\n        console.warn('Negative group duration at ' + lastEventGroup.position.toString());\n        dur = new Fraction(0);\n      }\n      lastEventGroup.duration = dur;\n      lastEventGroup = null;\n    }\n\n    if (currentItems.length > 0) {\n      let group = {\n        position: pos,\n        items: currentItems,\n        fixed: currentItems[0].fixedWidth\n      };\n      result.push(group);\n      for (let item of currentItems) {\n        item.group = group;\n      }\n      lastEventGroup = group;\n    }\n\n    scoreLists = scoreLists.filter(a => a.length > 0); // Remove empty lists\n  }\n\n  // for (let scoreItem of scoreLists[0]) {\n  //   let group = {items: [scoreItem], duration: scoreItem.duration};\n  //   result.push(group);\n  //   scoreItem.group = group; // DEBUG\n  // }\n  return result;\n}\n\nfunction shiftSecondIntervalsAndSetDeltas(scoreListGroups, score) {\n  for (let group of scoreListGroups) {\n    let scoreNoteChords = group.items.filter(x => { return x instanceof ScoreNoteChord; });\n    if (scoreNoteChords.length === 0) {\n      // No note chords: skip\n      continue;\n    } else if (scoreNoteChords.length === 1) {\n      // Only one ScoreNoteChord: no need to deal with staff separation\n      let scoreNotes = scoreNoteChords[0].notes;\n      scoreNoteShift(scoreNotes, score);\n      updateScoreNoteDeltas(scoreNotes, score);\n    } else {\n      // Multiple ScoreNoteChords: group them staff-wise and update deltas\n      let staves = {};\n      for (let scoreNoteChord of scoreNoteChords) {\n        let key = scoreNoteChord.staff; // + ' ' + scoreNoteChord.part\n        staves[key] = staves[key] || [];\n        staves[key].push(scoreNoteChord);\n      }\n      for (let staff in staves) {\n        let scoreNoteChords = staves[staff];\n        for (let scoreNoteChord of scoreNoteChords) {\n          scoreNoteShift(scoreNoteChord.notes, score);\n        }\n        scoreNoteChordsXAdjust(scoreNoteChords, score);\n        for (let scoreNoteChord of scoreNoteChords) {\n          updateScoreNoteDeltas(scoreNoteChord.notes, score);\n        }\n      }\n    }\n  }\n}\n\nfunction scoreNoteShift(scoreNotes, score) {\n  if (scoreNotes.length === 0) return;\n  // When only one note, make it quick\n  if (scoreNotes.length === 1) {\n    scoreNotes[0].shifted = false;\n    return;\n  }\n\n  let clusters = [];\n  // Find blocks of notes in second intervals and save them to the clusters variable\n  let lastNote;\n  let currentCluster;\n  for (let scoreNote of scoreNotes.slice().sort((a, b) => { b.staffLine - a.staffLine; })) {\n    scoreNote.shifted = false;\n    if (lastNote && (scoreNote.staffLine === (lastNote.staffLine + 0.5))) {\n      if (!currentCluster) currentCluster = [lastNote];\n      currentCluster.push(scoreNote);\n    } else if (currentCluster) {\n      clusters.push(currentCluster);\n      currentCluster = null;\n    }\n    lastNote = scoreNote;\n  }\n  if (currentCluster) clusters.push(currentCluster);\n\n  // clusters is now a list of lists of ScoreNotes\n  for (let cluster of clusters) {\n    let currentShift = cluster[0].scoreNoteChord.stem.direction === 'up'; // ??\n    let shifted = 0;\n    // loop through the notes in the current cluster, shifting every second note\n    for (let scoreNote of cluster) {\n      scoreNote.shifted = currentShift;\n      if (currentShift) shifted++;\n      currentShift = !currentShift;\n    }\n    // if there are more shifted than normal notes in the cluster, reverse the shift\n    if (shifted > (cluster.length - shifted)) {\n      for (let scoreNote of cluster) {\n        scoreNote.shifted = !scoreNote.shifted;\n      }\n    }\n  }\n}\n\nfunction noteheadStemUpX(notehead) {\n  return notehead.anchors.stemUpSE ? notehead.anchors.stemUpSE[0] : notehead.bbox.bBoxNE[0];\n}\n\nfunction noteheadStemDownX(notehead) {\n  return notehead.anchors.stemDown ? notehead.anchors.stemUpNW[0] : notehead.bbox.bBoxSW[0];\n}\n\nfunction updateScoreNoteDeltas(scoreNotes, score) {\n  if (scoreNotes.length === 0) return;\n\n  let staffSpace = score.staffSize * 0.25;\n\n  // When only one note, make it quick\n  if (scoreNotes.length === 1) {\n    // console.log('quick');\n    let scoreNote = scoreNotes[0];\n    let scoreNoteChord = scoreNote.scoreNoteChord;\n    let stemDirection = scoreNoteChord.stem.direction;\n    let noteheadWidth = scoreNote._notehead.bbox.bBoxNE[0] * staffSpace;\n    let noteChordNoteX = scoreNoteChord.noteX || 0;\n    let halfStemThickness = staffSpace * (score.engravingDefaults.stemThickness || 0.12) * 0.5;\n    // let anchors = scoreNote._notehead.anchors;\n    let stemX = stemDirection === 'up'\n      ? (staffSpace * noteheadStemUpX(scoreNote._notehead)) - halfStemThickness\n      : (staffSpace * noteheadStemDownX(scoreNote._notehead)) + halfStemThickness;\n    // TODO: accidental parentheses\n    scoreNote.noteX = noteChordNoteX;\n    scoreNoteChord.dotX = noteChordNoteX + noteheadWidth;\n    scoreNoteChord.stemX = noteChordNoteX + stemX;\n    if (scoreNote.displayedAccidental !== undefined) {\n      let acc = score.musicFontMetadata.glyphBBoxes[knowledge.accidentals[scoreNote.displayedAccidental]];\n      if (acc) {\n        let accWidth = acc.bBoxNE[0] * staffSpace;\n        let accidentalX = -(accWidth + 0.25 * staffSpace); // TODO: scale\n        scoreNoteChord.accidentalX = accidentalX;\n        scoreNote.accidentalX = accidentalX;\n      }\n    }\n    scoreNoteChord.updateExtents();\n    return;\n  }\n\n  // So, we're dealing with multiple notes (chord and/or multiple voices)\n  // console.log('multiple');\n  let dotX = 0;\n  let notesWithAccidentals = [];\n  let leftmostPosition = 0;\n  let scoreNoteChords = new Set();\n  for (let scoreNote of scoreNotes) {\n    let scoreNoteChord = scoreNote.scoreNoteChord;\n    let noteChordNoteX = scoreNoteChord.noteX || 0;\n    let halfStemThickness = staffSpace * (score.engravingDefaults.stemThickness || 0.12) * 0.5;\n    let noteheadWidth = 1.0 * staffSpace; // TODO\n    scoreNoteChords.add(scoreNoteChord); // save for later\n    // STEP 1: Note head and dots\n    if (!scoreNoteChord.stem) {\n      console.warn('Undefined stem for ', scoreNoteChord);\n    } else if (scoreNote.shifted) {\n      if (scoreNoteChord.stem.direction === 'up') {\n        // Shifted and stem up = shift right\n        scoreNote.noteX = noteChordNoteX + noteheadWidth;\n        dotX = Math.max(dotX, noteChordNoteX + noteheadWidth * 2);\n      } else {\n        // Shifted and stem down = shift left\n        scoreNote.noteX = noteChordNoteX - noteheadWidth;\n        leftmostPosition = Math.min(leftmostPosition, -noteheadWidth);\n      }\n    } else {\n      // Not shifted\n      scoreNote.noteX = noteChordNoteX;\n      dotX = Math.max(dotX, noteChordNoteX + noteheadWidth);\n      scoreNoteChord.stemX = Math.max(scoreNoteChord.stemX || 0,\n        noteChordNoteX + (scoreNoteChord.stem.direction === 'up'\n        ? (staffSpace * noteheadStemUpX(scoreNote._notehead)) - halfStemThickness\n        : (staffSpace * noteheadStemDownX(scoreNote._notehead)) + halfStemThickness));\n    }\n    // STEP 2: Collect accidentals\n    if (scoreNote.displayedAccidental !== undefined) {\n      notesWithAccidentals.push(scoreNote);\n    }\n  }\n\n  // Distribute accidentals\n  let accidentalOrigin = leftmostPosition - (0.15 * staffSpace);\n  let x = accidentalOrigin;\n  let lastStaffLine = 0;\n  for (let scoreNote of notesWithAccidentals) {\n    if (scoreNote.staffLine > lastStaffLine + 3) {\n      x = accidentalOrigin;\n    }\n    lastStaffLine = scoreNote.staffLine;\n    let acc = score.musicFontMetadata.glyphBBoxes[knowledge.accidentals[scoreNote.displayedAccidental]];\n    let accWidth = acc.bBoxNE[0] * staffSpace;\n    x -= accWidth + 0.1 * staffSpace; // TODO: scale\n    scoreNote.accidentalX = x - scoreNote.noteX;\n  }\n\n  // Set dots delta\n  scoreNoteChords.forEach(scoreNoteChord => {\n    scoreNoteChord.dotX = dotX;\n    scoreNoteChord.accidentalX = Math.min(...scoreNoteChord.notes.map(n => n.noteX + n.accidentalX || 0));\n    // TODO: set stem delta\n    scoreNoteChord.updateExtents();\n  });\n}\n\n/**\n *  Sets the note-delta slot of score-notes, to avoid note overlap of noteheads.\n *  This is different from shifting (which only works with single chords/clusters).\n *  A common case is second intervals in polyphonic notation.\n */\nfunction scoreNoteChordsXAdjust(scoreNoteChords) {\n  // TODO\n}\n\n/**\n *  Takes as argument a grouped list of ScoreItems, as generated by GroupScoreLists\n *\n *  Updates that list and sets the following keys for each object:\n *    innerWidth\n *    minSpace\n *    optimalSpace\n */\nfunction layoutScoreItems(scoreListGroups, score, followingGroup) {\n  let staffSpace = score.staffSize * 0.25;\n  let referenceDuration = score.referenceDuration; // TODO\n  let horizontalProportionalFactor = score.horizontalProportionalFactor; // TODO\n  let referenceNoteSpace = score.referenceNoteSpace; // TODO\n  let quotas = {};\n\n  for (let group of scoreListGroups.filter(g => g.floating)) {\n    group.innerWidth = 0;\n    group.minSpace = 0;\n    group.optimalSpace = 0;\n  }\n\n  let nonFloatingGroups = scoreListGroups.filter(g => !g.floating);\n  for (let g = 0; g < nonFloatingGroups.length; g++) {\n    let thisGroup = nonFloatingGroups[g];\n    let nextGroup = nonFloatingGroups[g + 1] || followingGroup;\n\n    // Inner width of group is the widest inner width of its items\n    thisGroup.innerWidth = Math.max(...thisGroup.items.map(i => { return i.innerWidth(); })) * staffSpace;\n\n    // Get left extent of next group\n    // Do it staff-wise, so that e.g. an accidental in a low-density voice\n    // doesn't add space to a voice with higher density.\n    let nextLeftExtentPerStaff = {};\n    let nextExtraSpacePerStaff = {};\n    if (nextGroup) {\n      for (let item of nextGroup.items) {\n        let staff = item.staff;\n        nextLeftExtentPerStaff[staff] = Math.min(nextLeftExtentPerStaff[staff] || 0, item.leftExtent || 0);\n        nextExtraSpacePerStaff[staff] = Math.min(nextExtraSpacePerStaff[staff] || 0, item.extraSpaceLeft || 0);\n      }\n    }\n\n    // Minimum spacing to next group\n    let minSpace = 0;\n    if (nextGroup) {\n      for (let item of thisGroup.items) {\n        let itemMinSpace = item.minSpace(nextGroup.items[0]) * staffSpace;\n        minSpace = Math.max(minSpace, (item.rightExtent || 0) + itemMinSpace - (nextLeftExtentPerStaff[item.staff] || 0));\n      }\n    }\n    thisGroup.minSpace = minSpace;\n\n    // Optimal spacing to next group\n    if (thisGroup.duration > 0) {\n      let dur = thisGroup.duration.valueOf();\n      let quota = quotas[dur];\n      if (!quota) {\n        quota = Math.pow(dur / referenceDuration, horizontalProportionalFactor);\n        quotas[quota] = quota;\n      }\n      thisGroup.optimalSpace = Math.max(minSpace, referenceNoteSpace * staffSpace * quota);\n      // TODO: add extra spacing from nextExtraSpacePerStaff if we are in the voice with the highest density\n    } else {\n      thisGroup.optimalSpace = minSpace;\n    }\n  }\n  return scoreListGroups;\n}\n\nfunction dontBreakScore(scoreListGroups, score) {\n  let systemItems = [];\n  let indent = 10; // TODO\n  // Remove spacing from last group\n  let lastGroup = scoreListGroups[scoreListGroups.length - 1];\n  lastGroup.minSpace = 0;\n  lastGroup.optimalSpace = 0;\n  let x = indent;\n  // Add left barline\n  if (score.staves.length > 1 && score.elementVisible('ScoreBar')) {\n    systemItems.push(new ScoreBar(null, score, {\n      position: new Fraction(0),\n      voice: null,\n      staff: 0,\n      leftBarline: true,\n      scoreX: x,\n      staffSystem: 0\n    }));\n    x += score.staffSize * 0.2; // TODO: indent + left padding\n  } else {\n    x += score.staffSize * 0.2;\n  }\n  // Add all items\n  for (let group of scoreListGroups) {\n    for (let item of group.items) {\n      item.staffSystem = 0;\n      // TODO: Spanning metas\n      //     (when (typep item 'spanning-score-meta)\n      // (setf (from-staff-system item) staff-system\n      //       (to-staff-system item) staff-system))\n      item.scoreX = x;\n      if (item instanceof ScoreNoteChord) {\n        // TODO: add grace notes before\n\n      }\n      systemItems.push(item);\n      if (item instanceof ScoreNoteChord) {\n        // TODO: add grace notes after\n\n      }\n    }\n    x += (group.innerWidth + Math.max(group.optimalSpace, group.minSpace)) || 0;\n  }\n  let singleSystem = new StaffSystem(score, 0, {\n    staffWidth: x,\n    indent: indent,\n    staves: score.staves,\n    staffDistance: score.staffDistance\n  });\n  singleSystem.items = systemItems;\n  return [singleSystem];\n}\n\nfunction breakScore(scoreListGroups, score, staffWidth = score.width) {\n  let indent = 10; // TODO\n  // Remove spacing from last group\n  let lastGroup = scoreListGroups[scoreListGroups.length - 1];\n  lastGroup.minSpace = 0;\n  lastGroup.optimalSpace = 0;\n\n  let measureLayout = score.measureLayout;\n  if (_.isArray(measureLayout)) {\n    measureLayout = measureLayout.slice();\n  } else {\n    measureLayout = [measureLayout];\n  }\n\n  let staffSystems = [];\n\n  let iCurrent = 0;\n  let iSystemStart = 0;\n  let iLastBar = 0;\n  let staffSystemNum = 0;\n  let measureNum = 1;\n  while (iCurrent < scoreListGroups.length) {\n    let staffSystemStartMeasure = measureNum;\n    let staffSystemMeasures = (measureLayout.length > 1) ? measureLayout.shift() : measureLayout[0];\n    // console.log(staffSystemStartMeasure, staffSystemMeasures);\n    let systemGroups = [];\n    let x = indent + score.staffSize * 0.2;\n    iCurrent = iSystemStart;\n\n    if (iCurrent > 0) {\n      let newGroups = makeSystemBreak(scoreListGroups, score, iCurrent);\n      for (let group of newGroups) {\n        group.x = x;\n        x += (group.innerWidth + Math.max(group.optimalSpace, group.minSpace)) || 0;\n      }\n      systemGroups = systemGroups.concat(newGroups);\n    }\n\n    while (staffSystemMeasures ? true : x < staffWidth) {\n      let group = scoreListGroups[iCurrent];\n      if (!group) break;\n      group.x = x;\n      x += (group.innerWidth + Math.max(group.optimalSpace, group.minSpace)) || 0;\n      if (group.items[0] instanceof ScoreBar) {\n        iLastBar = iCurrent;\n        measureNum++;\n        if (staffSystemMeasures && staffSystemMeasures === (measureNum - staffSystemStartMeasure)) {\n          iCurrent++;\n          break;\n        }\n      }\n      iCurrent++;\n    }\n    let iSystemEnd = iLastBar > iSystemStart ? iLastBar : (iCurrent - 1);\n    systemGroups = systemGroups.concat(scoreListGroups.slice(iSystemStart, (iSystemEnd + 1)));\n    let lastSystemGroup = systemGroups[systemGroups.length - 1];\n\n    let staffSystem = new StaffSystem(score, staffSystemNum++, {\n      staffWidth: lastSystemGroup.x + lastSystemGroup.innerWidth,\n      indent: indent,\n      staves: score.staves,\n      staffDistance: score.staffDistance\n    });\n    staffSystem.groups = systemGroups;\n    staffSystems.push(staffSystem);\n\n    // console.log(iSystemStart + ' - ' + iSystemEnd);\n    // console.log('Added staff system: ', staffSystem);\n\n    iSystemStart = (iSystemEnd + 1);\n    if (iCurrent < iSystemStart) {\n      console.log('No progress!', iSystemStart, iCurrent);\n      break;\n    }\n  }\n\n  let createLeftBarlines = (score.staves.length > 1 && score.elementVisible('ScoreBar'));\n\n  for (let staffSystem of staffSystems) {\n    let num = staffSystem.num;\n    let systemItems = [];\n\n    // Create left barline\n    if (createLeftBarlines) {\n      systemItems.push(new ScoreBar(null, score, {\n        position: new Fraction(0),\n        voice: null,\n        staff: 0,\n        leftBarline: true,\n        scoreX: staffSystem.indent,\n        staffSystem: num\n      }));\n    }\n\n    // Justify system\n    if (num === staffSystems.length - 1) {\n      if (!score.raggedLast || staffSystem.staffWidth > staffWidth) justifyStaffSystem(staffSystem, score, staffWidth);\n    } else {\n      if (!score.raggedRight || staffSystem.staffWidth > staffWidth) justifyStaffSystem(staffSystem, score, staffWidth);\n    }\n\n    // Set y value of staffSystem\n    // TODO: move out of this function\n    staffSystem.y = score.firstStaffSystemY + score.staffSystemDistance * num;\n\n    // Set scoreX of all staffSystem items\n    for (let group of staffSystem.groups) {\n      for (let item of group.items) {\n        item.scoreX = group.x;\n        item.staffSystem = num;\n        systemItems.push(item);\n      }\n    }\n    staffSystem.items = systemItems;\n  }\n\n  return staffSystems;\n}\n\n// Helper for breakScore\nfunction makeSystemBreak(scoreListGroups, score, breakpoint) {\n  let newGroups = [];\n  let keys = [];\n  let clefs = [];\n  for (let staff = 0; staff < score.staves.length; staff++) {\n    let key;\n    let clef;\n    for (let i = breakpoint; i >= 0; i--) {\n      let g = scoreListGroups[i];\n      if (!key && g.items[0] instanceof ScoreKey) {\n        key = g.items.find(item => item.staff === staff);\n        if (key) {\n          key = new ScoreKey(key.item, score); // TODO: better copying\n          key.staff = staff;\n        }\n      } else if (!clef && g.items[0] instanceof ScoreClef) {\n        clef = g.items.find(item => item.staff === staff);\n        if (clef) {\n          clef = new ScoreClef(clef.item, score, {kind: clef.kind}); // TODO: better copying\n          clef.staff = staff;\n        }\n      }\n      if (key && clef) break;\n    }\n    if (key) keys.push(key);\n    if (clef) clefs.push(clef);\n  }\n  if (clefs.length) {\n    newGroups.push({\n      items: clefs,\n      fixed: true\n    });\n  }\n  if (keys.length) {\n    newGroups.push({\n      items: keys,\n      fixed: true\n    });\n  }\n  // TODO: check that next groups is non-floating\n  if (newGroups.length) layoutScoreItems(newGroups, score, scoreListGroups[breakpoint]);\n  return newGroups;\n}\n\n// Helper for breakScore\nfunction justifyStaffSystem(staffSystem, score, width) {\n  let space = width - staffSystem.staffWidth;\n  let count = staffSystem.groups.filter(group => !group.fixed).length;\n  let offset = 0;\n  let num = 0;\n  for (let group of staffSystem.groups) {\n    if (group.fixed) {\n      group.x += offset;\n    } else {\n      group.x += offset;\n      offset += space / count;\n      num++;\n    }\n  }\n  staffSystem.staffWidth = width;\n}\n\nfunction createBrackets(staffSystem, score) {\n  let bracket = new ScoreBracket(null, score);\n  bracket.staffSystem = staffSystem;\n\n  bracket.updatePosition();\n  staffSystem.items.unshift(bracket);\n}\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score/score.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 756,
    "kind": "variable",
    "name": "scoreMetaOrdering",
    "memberof": "lib/score/score.js",
    "static": true,
    "longname": "lib/score/score.js~scoreMetaOrdering",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 757,
    "kind": "class",
    "name": "Score",
    "memberof": "lib/score/score.js",
    "static": true,
    "longname": "lib/score/score.js~Score",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/score/score.js",
    "importStyle": "Score",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 758,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 759,
    "kind": "member",
    "name": "song",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#song",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 760,
    "kind": "member",
    "name": "staffSystems",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#staffSystems",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 761,
    "kind": "member",
    "name": "staffSize",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#staffSize",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 762,
    "kind": "member",
    "name": "width",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#width",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 763,
    "kind": "member",
    "name": "height",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#height",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 764,
    "kind": "member",
    "name": "staffWidth",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#staffWidth",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 765,
    "kind": "member",
    "name": "zoom",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#zoom",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 766,
    "kind": "member",
    "name": "musicFont",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#musicFont",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 767,
    "kind": "member",
    "name": "musicFontMetadata",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#musicFontMetadata",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 768,
    "kind": "member",
    "name": "musicFontGlyphs",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#musicFontGlyphs",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 769,
    "kind": "member",
    "name": "engravingDefaults",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#engravingDefaults",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 770,
    "kind": "member",
    "name": "staffDistance",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#staffDistance",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 771,
    "kind": "member",
    "name": "firstStaffSystemY",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#firstStaffSystemY",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 772,
    "kind": "member",
    "name": "staffSystemDistance",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#staffSystemDistance",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 773,
    "kind": "member",
    "name": "autoSystemBreaks",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#autoSystemBreaks",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 774,
    "kind": "member",
    "name": "hiddenElements",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#hiddenElements",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 775,
    "kind": "member",
    "name": "referenceDuration",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#referenceDuration",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 776,
    "kind": "member",
    "name": "referenceNoteSpace",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#referenceNoteSpace",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 777,
    "kind": "member",
    "name": "horizontalProportionalFactor",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#horizontalProportionalFactor",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 778,
    "kind": "member",
    "name": "raggedRight",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#raggedRight",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 779,
    "kind": "member",
    "name": "raggedLast",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#raggedLast",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 780,
    "kind": "member",
    "name": "measureLayout",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#measureLayout",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 781,
    "kind": "method",
    "name": "updateScore",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#updateScore",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 782,
    "kind": "member",
    "name": "staves",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#staves",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 784,
    "kind": "member",
    "name": "sel",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#sel",
    "access": "public",
    "description": null,
    "lineNumber": 203,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 785,
    "kind": "method",
    "name": "itemAt",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#itemAt",
    "access": "public",
    "description": null,
    "lineNumber": 213,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 786,
    "kind": "method",
    "name": "draw",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#draw",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "x",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "y",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "w",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "h",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 787,
    "kind": "method",
    "name": "hideElements",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#hideElements",
    "access": "public",
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "params": [
      {
        "name": "elementClasses",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 789,
    "kind": "method",
    "name": "elementVisible",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#elementVisible",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true,
    "params": [
      {
        "name": "elementClass",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 790,
    "kind": "method",
    "name": "toSVG",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#toSVG",
    "access": "public",
    "description": null,
    "lineNumber": 236,
    "undocument": true,
    "params": [
      {
        "name": "svg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 791,
    "kind": "member",
    "name": "itemsBySVGID",
    "memberof": "lib/score/score.js~Score",
    "static": false,
    "longname": "lib/score/score.js~Score#itemsBySVGID",
    "access": "public",
    "description": null,
    "lineNumber": 237,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 792,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#toString",
    "access": "public",
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 793,
    "kind": "method",
    "name": "handleClick",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#handleClick",
    "access": "public",
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 797,
    "kind": "method",
    "name": "handleMouseEnter",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#handleMouseEnter",
    "access": "public",
    "description": null,
    "lineNumber": 298,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 798,
    "kind": "method",
    "name": "handleMouseLeave",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#handleMouseLeave",
    "access": "public",
    "description": null,
    "lineNumber": 306,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 799,
    "kind": "method",
    "name": "handleKeyDown",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#handleKeyDown",
    "access": "public",
    "description": null,
    "lineNumber": 314,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 800,
    "kind": "method",
    "name": "handleKeyUp",
    "memberof": "lib/score/score.js~Score",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/score/score.js~Score#handleKeyUp",
    "access": "public",
    "description": null,
    "lineNumber": 354,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 801,
    "kind": "function",
    "name": "makeScoreList",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~makeScoreList",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 362,
    "undocument": true,
    "params": [
      {
        "name": "container",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      },
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "eventsOnly",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 802,
    "kind": "function",
    "name": "createAccidentals",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~createAccidentals",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 522,
    "undocument": true,
    "params": [
      {
        "name": "scoreListGroups",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 803,
    "kind": "function",
    "name": "calculateStemDirection",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~calculateStemDirection",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 561,
    "undocument": true,
    "params": [
      {
        "name": "scoreNoteList",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 804,
    "kind": "function",
    "name": "getBeamList",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~getBeamList",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": " Helper function for calculate-stems-and-beams",
    "lineNumber": 582,
    "params": [
      {
        "name": "scoreEvents",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 805,
    "kind": "function",
    "name": "calculateStemsAndBeams",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~calculateStemsAndBeams",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": " Calculate stem directions and default stem lengths,\n and set beaming data. Stems are *not* adjusted to\n match the beam, use adjustBeams for that after this\n function has finished.",
    "lineNumber": 613,
    "params": [
      {
        "name": "itemGroups",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 806,
    "kind": "function",
    "name": "adjustBeams",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~adjustBeams",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": " Calculates beam slopes and adjusts stem lengths in beams so that all\n stems in the beam are connected to the beam. scoreX has to be set\n for all ScoreNoteChords before adjustBeams is called.",
    "lineNumber": 678,
    "params": [
      {
        "name": "scoreItems",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 807,
    "kind": "function",
    "name": "createTies",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~createTies",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": " Create ties for the passed ScoreItems.\n NOTE: createTies can be called both StaffSystem-wise or with a complete song-wide SongItems list",
    "lineNumber": 730,
    "params": [
      {
        "name": "scoreItems",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 808,
    "kind": "function",
    "name": "groupScoreLists",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~groupScoreLists",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": " Takes an array of scoreLists and generates a list of objects, where each object contains\n one or more ScoreItems which are to be drawn at the same \"logical\" x-position in\n the score. Actual x-positions are calculated later with regard to spacing etc.\n\n The result list is sorted, so that metas appearing on the same time position are\n added in the correct score order.\n\n If a sublist contains a ScoreMeta, it is guaranteed to contain only ScoreMetas\n of the same type. Sublists containing ScoreEvents can hold both ScoreNoteChords,\n ScoreRests and ScoreDetails (which are not technically ScoreEvents).\n\n NOTE: the scoreLists passed as argument to groupScoreLists are clobbered!",
    "lineNumber": 888,
    "params": [
      {
        "name": "scoreLists",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 809,
    "kind": "function",
    "name": "shiftSecondIntervalsAndSetDeltas",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~shiftSecondIntervalsAndSetDeltas",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1000,
    "undocument": true,
    "params": [
      {
        "name": "scoreListGroups",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 810,
    "kind": "function",
    "name": "scoreNoteShift",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~scoreNoteShift",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1033,
    "undocument": true,
    "params": [
      {
        "name": "scoreNotes",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 811,
    "kind": "function",
    "name": "noteheadStemUpX",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~noteheadStemUpX",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1077,
    "undocument": true,
    "params": [
      {
        "name": "notehead",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 812,
    "kind": "function",
    "name": "noteheadStemDownX",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~noteheadStemDownX",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1081,
    "undocument": true,
    "params": [
      {
        "name": "notehead",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 813,
    "kind": "function",
    "name": "updateScoreNoteDeltas",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~updateScoreNoteDeltas",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1085,
    "undocument": true,
    "params": [
      {
        "name": "scoreNotes",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 814,
    "kind": "function",
    "name": "scoreNoteChordsXAdjust",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~scoreNoteChordsXAdjust",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": " Sets the note-delta slot of score-notes, to avoid note overlap of noteheads.\n This is different from shifting (which only works with single chords/clusters).\n A common case is second intervals in polyphonic notation.",
    "lineNumber": 1189,
    "params": [
      {
        "name": "scoreNoteChords",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 815,
    "kind": "function",
    "name": "layoutScoreItems",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~layoutScoreItems",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": " Takes as argument a grouped list of ScoreItems, as generated by GroupScoreLists\n\n Updates that list and sets the following keys for each object:\n   innerWidth\n   minSpace\n   optimalSpace",
    "lineNumber": 1201,
    "params": [
      {
        "name": "scoreListGroups",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      },
      {
        "name": "followingGroup",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 816,
    "kind": "function",
    "name": "dontBreakScore",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~dontBreakScore",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1262,
    "undocument": true,
    "params": [
      {
        "name": "scoreListGroups",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 817,
    "kind": "function",
    "name": "breakScore",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~breakScore",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1315,
    "undocument": true,
    "params": [
      {
        "name": "scoreListGroups",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      },
      {
        "name": "staffWidth",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 818,
    "kind": "function",
    "name": "makeSystemBreak",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~makeSystemBreak",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1435,
    "undocument": true,
    "params": [
      {
        "name": "scoreListGroups",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      },
      {
        "name": "breakpoint",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 819,
    "kind": "function",
    "name": "justifyStaffSystem",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~justifyStaffSystem",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1480,
    "undocument": true,
    "params": [
      {
        "name": "staffSystem",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      },
      {
        "name": "width",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 820,
    "kind": "function",
    "name": "createBrackets",
    "memberof": "lib/score/score.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/score/score.js~createBrackets",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/score/score.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1497,
    "undocument": true,
    "params": [
      {
        "name": "staffSystem",
        "types": [
          "*"
        ]
      },
      {
        "name": "score",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 821,
    "kind": "file",
    "name": "lib/score.js",
    "content": "// import _ from 'underscore';\n// import MusicPtr from './music-ptr';\n\nexport default {\n\n  splitDurations: function(container) {\n    if (container.eventTimeMode !== 'relative') {\n      throw new Error('splitDurations can only work with relative events');\n    }\n\n    container.resolve();\n    // let mp = new MusicPtr(container);\n  }\n};\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/score.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 822,
    "kind": "file",
    "name": "lib/store.js",
    "content": "\nimport Interval from './classes/interval.js';\nimport Pitch from './classes/pitch.js';\nimport Duration from './classes/duration.js';\nimport Harmony from './classes/harmony.js';\nimport Chord from './classes/event/chord.js';\nimport ChordSequence from './classes/event/chord-sequence.js';\nimport Note from './classes/event/note.js';\nimport NoteChord from './classes/event/note-chord.js';\nimport Rest from './classes/event/rest.js';\nimport Voice from './classes/event/voice.js';\nimport VerticalContainer from './classes/event/vertical-container.js';\nimport VoiceContainer from './classes/event/voice-container.js';\nimport AudioFile from './classes/audio-file.js';\nimport Audio from './classes/event/audio.js';\nimport Tempo from './classes/meta/tempo.js';\nimport Time from './classes/meta/time.js';\nimport Song from './classes/event/song.js';\nimport Key from './classes/meta/key.js';\n\nexport default {\n  typeMap: {\n    Interval: Interval,\n    Pitch: Pitch,\n    Duration: Duration,\n    Note: Note,\n    NoteChord: NoteChord,\n    Rest: Rest,\n    Harmony: Harmony,\n    Chord: Chord,\n    ChordSequence: ChordSequence,\n    Voice: Voice,\n    VerticalContainer: VerticalContainer,\n    VoiceContainer: VoiceContainer,\n    AudioFile: AudioFile,\n    Audio: Audio,\n    Tempo: Tempo,\n    Time: Time,\n    Song: Song,\n    Key: Key\n  },\n  ignoredProperties: ['parent', 'cache'],\n\n  store: function(obj) {\n    var getObjectTypeString = this.getObjectTypeString.bind(this);\n    var ignoredProperties = this.ignoredProperties;\n    return JSON.stringify(obj, function(k, v) {\n      var typeStr = getObjectTypeString(v);\n      if (typeStr) {\n        var obj = {type: typeStr};\n        for (var i in v) {\n          if (ignoredProperties.indexOf(i) < 0) { obj[i] = v[i]; }\n        }\n        return obj;\n      } else {\n        return v;\n      }\n    });\n  },\n\n  restore: function(str) {\n    var root = JSON.parse(str);\n\n    return new Song(root);\n  },\n\n  bless: function(obj) {\n    return this.restore(this.store(obj));\n  },\n\n  strToProto: function(str) {\n    return this.typeMap[str];\n  },\n\n  getObjectTypeString: function(obj) {\n    for (var typeStr in this.typeMap) {\n      var proto = this.typeMap[typeStr];\n      if (proto.isPrototypeOf(obj) || obj instanceof proto) { return typeStr; }\n    }\n    return null;\n  }\n};\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 823,
    "kind": "file",
    "name": "lib/validator.js",
    "content": "\n// import chalk from 'chalk';\nimport _ from 'underscore';\n\nvar isArray = _.isArray;\n\nfunction isNumber(value) {\n  return typeof value === 'number' && (value === +value); // || toString.call(value) === numberClass;\n}\n\nfunction isInteger(value) {\n  return isNumber(value) && ((value % 1) === 0);\n}\n\n/** @ignore */\nclass Validator {\n  constructor(verbose) {\n    this.errors = [];\n    this.verbose = verbose || 0;\n  }\n\n  inspect() {\n    // var color = this.errors.length ? chalk.red.bold : chalk.green;\n    // return color(this.toString());\n  }\n\n  toString() {\n    if (this.errors.length) {\n      return this.errors.length + ' errors';\n    } else {\n      return 'OK';\n    }\n  }\n\n  log() {\n    if (this.errors.length) {\n      var isNode = process.title === 'node'; // TODO: better check\n      // console.log(chalk.red.bold(this.errors.length + ' errors'));\n      this.errors.forEach(function(e) {\n        console.warn(isNode ? e.obj.className : e.obj, e.text);\n      });\n    } else {\n      // console.log(chalk.green('No errors'));\n    }\n    return this.errors.length + ' errors';\n  }\n\n  //\n\n  satisfies(obj, place, test, errorStr) {\n    if (test.call(obj.place)) return;\n    if (errorStr === undefined) errorStr = place + ' does not satisfy ' + test.toString();\n    this.errors.push({obj: obj, text: errorStr});\n  }\n\n  hasType(obj, place, type) {\n    if (obj[place] instanceof type) return;\n    this.errors.push({obj: obj, text: place + ' is not of type ' + type.name});\n  }\n\n  hasTypeOrNull(obj, place, type) {\n    if (obj[place] === null || obj[place] === undefined) return;\n    if (obj[place] instanceof type) return;\n    this.errors.push({obj: obj, text: place + ' is neither null nor of type ' + type.name});\n  }\n\n  isNull(obj, place) {\n    if (obj[place] === null || obj[place] === undefined) return;\n    this.errors.push({obj: obj, text: place + ' is not null'});\n  }\n\n  isDefined(obj, place) {\n    if (obj[place] !== undefined) return;\n    this.errors.push({obj: obj, text: place + ' is undefined'});\n  }\n\n  isUndefined(obj, place) {\n    if (obj[place] === undefined) return;\n    this.errors.push({obj: obj, text: place + ' is defined'});\n  }\n\n  isNumber(obj, place, min, max) {\n    if (!isNumber(obj[place])) {\n      this.errors.push({obj: obj, text: place + ' is not a number'});\n    } else if (isNumber(min) && obj[place] < min) {\n      this.errors.push({obj: obj, text: place + ' is too small'});\n    } else if (isNumber(max) && obj[place] > max) {\n      this.errors.push({obj: obj, text: place + ' is too big'});\n    }\n  }\n\n  isIntegerOrNull(obj, place, min, max) {\n    if (obj[place] !== null && !isInteger(obj[place])) {\n      this.errors.push({obj: obj, text: place + ' is not an integer or null'});\n    } else if (isNumber(min) && obj[place] < min) {\n      this.errors.push({obj: obj, text: place + ' is too small'});\n    } else if (isNumber(max) && obj[place] > max) {\n      this.errors.push({obj: obj, text: place + ' is too big'});\n    }\n  }\n\n  isInteger(obj, place, min, max) {\n    if (!isInteger(obj[place])) {\n      this.errors.push({obj: obj, text: place + ' is not an integer'});\n    } else if (isNumber(min) && obj[place] < min) {\n      this.errors.push({obj: obj, text: place + ' is too small'});\n    } else if (isNumber(max) && obj[place] > max) {\n      this.errors.push({obj: obj, text: place + ' is too big'});\n    }\n  }\n\n  isPositiveInteger(obj, place) {\n    this.isInteger(obj, place, 1);\n  }\n\n  isBoolean(obj, place) {\n    if (obj[place] === true || obj[place] === false) return;\n    this.errors.push({obj: obj, text: place + ' is not a boolean'});\n  }\n\n  isOneOf(obj, place, list) {\n    if (list.indexOf(obj[place]) < 0) {\n      this.errors.push({obj: obj, text: place + ' is not one of ' + list});\n    }\n  }\n\n  isArray(obj, place, test, testDescription) {\n    if (!isArray(obj[place])) {\n      this.errors.push({obj: obj, text: place + ' is not an array'});\n    }\n    if (test && !obj[place].every(test)) {\n      this.errors.push({obj: obj, text: place + ' contains non-conforming elements'});\n    }\n  }\n\n  isArrayOfIntegers(obj, place, nullOk) {\n    if (nullOk && obj[place] === null) return;\n    if (!isArray(obj[place])) {\n      this.errors.push({obj: obj, text: place + ' is not an array'});\n    } else if (!obj[place].every(isInteger)) {\n      this.errors.push({obj: obj, text: place + ' contains non-integers'});\n    }\n  }\n\n  onlyOneOf(obj) {\n    var defined = 0;\n    var places = [];\n    for (var a = 1; a < arguments.length; a++) {\n      var place = arguments[a];\n      places.push(place);\n      var value = obj[place];\n      if (!(value === null || value === undefined)) defined++;\n    }\n    if (defined > 1) {\n      this.errors.push({obj: obj, text: 'More than one of [' + places.join(', ') + '] is defined'});\n    }\n  }\n}\n\nexport default Validator;\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/validator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 824,
    "kind": "variable",
    "name": "isArray",
    "memberof": "lib/validator.js",
    "static": true,
    "longname": "lib/validator.js~isArray",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/validator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 825,
    "kind": "function",
    "name": "isNumber",
    "memberof": "lib/validator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/validator.js~isNumber",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/validator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 826,
    "kind": "function",
    "name": "isInteger",
    "memberof": "lib/validator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/validator.js~isInteger",
    "access": "public",
    "export": false,
    "importPath": "remus/lib/validator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 827,
    "kind": "class",
    "name": "Validator",
    "memberof": "lib/validator.js",
    "static": true,
    "longname": "lib/validator.js~Validator",
    "access": "public",
    "export": true,
    "importPath": "remus/lib/validator.js",
    "importStyle": "Validator",
    "description": null,
    "lineNumber": 16,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 828,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 829,
    "kind": "member",
    "name": "errors",
    "memberof": "lib/validator.js~Validator",
    "static": false,
    "longname": "lib/validator.js~Validator#errors",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 830,
    "kind": "member",
    "name": "verbose",
    "memberof": "lib/validator.js~Validator",
    "static": false,
    "longname": "lib/validator.js~Validator#verbose",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 831,
    "kind": "method",
    "name": "inspect",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#inspect",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 832,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#toString",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 833,
    "kind": "method",
    "name": "log",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#log",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 834,
    "kind": "method",
    "name": "satisfies",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#satisfies",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      },
      {
        "name": "test",
        "types": [
          "*"
        ]
      },
      {
        "name": "errorStr",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 835,
    "kind": "method",
    "name": "hasType",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#hasType",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 836,
    "kind": "method",
    "name": "hasTypeOrNull",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#hasTypeOrNull",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 837,
    "kind": "method",
    "name": "isNull",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isNull",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 838,
    "kind": "method",
    "name": "isDefined",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isDefined",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 839,
    "kind": "method",
    "name": "isUndefined",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isUndefined",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 840,
    "kind": "method",
    "name": "isNumber",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isNumber",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      },
      {
        "name": "min",
        "types": [
          "*"
        ]
      },
      {
        "name": "max",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 841,
    "kind": "method",
    "name": "isIntegerOrNull",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isIntegerOrNull",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      },
      {
        "name": "min",
        "types": [
          "*"
        ]
      },
      {
        "name": "max",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 842,
    "kind": "method",
    "name": "isInteger",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isInteger",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      },
      {
        "name": "min",
        "types": [
          "*"
        ]
      },
      {
        "name": "max",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 843,
    "kind": "method",
    "name": "isPositiveInteger",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isPositiveInteger",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 844,
    "kind": "method",
    "name": "isBoolean",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isBoolean",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 845,
    "kind": "method",
    "name": "isOneOf",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isOneOf",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      },
      {
        "name": "list",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 846,
    "kind": "method",
    "name": "isArray",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isArray",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      },
      {
        "name": "test",
        "types": [
          "*"
        ]
      },
      {
        "name": "testDescription",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 847,
    "kind": "method",
    "name": "isArrayOfIntegers",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#isArrayOfIntegers",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "place",
        "types": [
          "*"
        ]
      },
      {
        "name": "nullOk",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 848,
    "kind": "method",
    "name": "onlyOneOf",
    "memberof": "lib/validator.js~Validator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/validator.js~Validator#onlyOneOf",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 849,
    "kind": "file",
    "name": "lib/vector.js",
    "content": "\nexport default {\n  add: function(pitch, interval) {\n    return [pitch[0] + interval[0], pitch[1] + interval[1]];\n  },\n\n  sub: function(pitch, interval) {\n    return [pitch[0] - interval[0], pitch[1] - interval[1]];\n  },\n\n  mul: function(pitch, interval) {\n    if (typeof interval === 'number') {\n      return [pitch[0] * interval, pitch[1] * interval];\n    } else {\n      return [pitch[0] * interval[0], pitch[1] * interval[1]];\n    }\n  },\n\n  sum: function(coord) {\n    return coord[0] + coord[1];\n  }\n};\n",
    "static": true,
    "longname": "/Volumes/DoReMIR/remus/lib/vector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "Remus\n=====\n\nRemus is a JSON-based format for representing musical data. To work with remus data, the `remus` JavaScript library is provided.  \n\n## Basic structure\n\nRemus is a hierarchical structure of musical objects where the root object is the [`Song`](class/lib/classes/event/song.js~Song.html). Conceptually, a song consists of\n\n* a timeline\n* objects relating to the timeline\n* objects that do not relate to the timeline, and therefore have no timing (a resource pool)\n\nExamples of the latter can be links, audio files not [yet] used in the actual song, imported lyrics, MIDI-files, etc.\n\nTechnically, objects on the timeline are stored under one of two JS keys: `events` and `metas`. This is similar (but not identical) to how MIDI files use “events” and “meta events”. The event list contains the objects that actually “sounds”, notes, chords and audio file references, while the meta list contains information such as tempo, time and key signature.\n\nThe event list may also contain other containers to created nested objects of arbitrary depth. (Note however that there are restrictions for where certain objects can be stored)\n\n## Items\n\nAll objects in remus document are referred to as _items_ and inherit from the [`Item`](class/lib/classes/item.js~Item.html) class. All items have a `type`, a string denoting the class name. When loading remus using the `remus` library, items are instantiated to the JS class named by their specified `type`.\n\nHere follows an overview over the various item classes. Detailed documentation is available in the source files of the respective item class.\n\n### Abstract classes\n- [`Item`](class/lib/classes/item.js~Item.html)\nAncestor of all items\n- [`Event`](class/lib/classes/event/event.js~Event.html)\nAncestor of all items that have a position on the timeline\n- [`Meta`](class/lib/classes/event/meta.js~Meta.html)\n  Meta events\n- [`EventContainer`](class/lib/classes/event/event-container.js~EventContainer.html)\n  Events containing other events\n\n### Basic types\n- [`Duration`](class/lib/classes/duration.js~Duration.html)\n  Durations in various units\n- [`Pitch`](class/lib/classes/pitch.js~Pitch.html)\n  Pitch representation\n- [`Interval`](class/lib/classes/interval.js~Interval.html)\n  Pitch intervals\n- [`Harmony`](class/lib/classes/harmony.js~Harmony.html)\n  Chords (e.g. dominant or minor seventh)\n- [`Mode`](class/lib/classes/mode.js~Mode.html)\n  Modes and scales (e.g. major, dorian, minor penta)\n\n### Events\n- [`Note`](class/lib/classes/event/note.js~Note.html)\n  A single note (essentially a Pitch placed on the timeline)\n- [`NoteChord`](class/lib/classes/event/note-chord.js~NoteChord.html)\n  A “chord” of simultanous notes\n- [`Chord`](class/lib/classes/event/chord.js~Chord.html)\n  A chord (essentially a Harmony placed on the timeline)\n- [`Rest`](class/lib/classes/event/rest.js~Rest.html)\n\n### Meta-events\n- [`Time`](class/lib/classes/meta/time.js~Time.html)\n  A time signature such as 4/4 or 6/8\n- [`Key`](class/lib/classes/meta/key.js~key.html)\n  Key signature\n- [`Tempo`](class/lib/classes/meta/tempo.js~Tempo.html)\n  Tempo indication or tempo change\n- [`Clef`](class/lib/classes/meta/clef.js~Clef.html)\n  Clef (for sheet music generation)\n\n\n## Coercing and type inference\n\nMost of the `Item` classes has a `coerce` method that simplifies creation of instances.\n\nFor example, this is an easy way to create a [`Pitch`](class/lib/classes/pitch.js~Pitch.html) object:\n\n```\nPitch.coerce(\"Ab4\")\n// equivalent to\nnew Pitch({coord: [40, 68]})\n```\n\n(For information of supported formats, see the documentation of the respective `Item` class)\n\nIn places where a specific `Item` class is expected, its `coerce` method is called automatically. Therefore it is often not needed to specify a complete JS object.\n\nFor example, the [`Key`](class/lib/classes/meta/key.js~key.html) class has two members called `root` and `mode` which are of type `Pitch` and `Mode` respectively. The following code works as expected:\n\n```\nnew Key({pitch: \"Bb\", mode: \"minor\"})\n```\n\nThis is because under the hood, the `Key` constructor calls `Pitch.coerce` on the string `\"Bb\"` and `Mode.coerce` on the string `\"minor\"`, resulting in a `Pitch` and a `Mode` object.\n\nAs an another example, this is a valid representation of a [`NoteChord`](class/lib/classes/event/note-chord.js~NoteChord.html):\n\n```\n{\n  \"type\": \"NoteChord\",\n  \"duration\": \"3/16 wn\",\n  \"events\": [\n    {\"pitch\": \"D5\"},\n    {\"pitch\": \"Bb4\"},\n    {\"pitch\": \"F4\"}\n  ]\n}\n```\n\nNotice that\n\n- the duration is coerced to a `Duration` object\n- the default event type of `NoteChord` is `Note`, so the\n  three elements in the event list doesn't need `type: \"Note\"`\n- the duration of the `NoteChord` is inherited by the notes\n- the pitches of the individual notes are coerced into `Pitch` objects\n\nThis is usually preferable to specifying every object in full:\n\n```\n{\n  \"type\": \"NoteChord\",\n  \"duration\": {\n    \"type\": \"Duration\",\n    \"value\": \"3/16\",\n    \"unit\": \"wn\"\n  },\n  \"events\": [\n    {\n      \"type\": \"Note\",\n      \"pitch\": {\n        \"type\": \"Pitch\",\n        \"coord\": [43, 74]\n      }\n    },\n    {\n      \"type\": \"Note\",\n      \"pitch\": {\n        \"type\": \"Pitch\",\n        \"coord\": [41, 70]\n      }\n    },\n    {\n      \"type\": \"Note\",\n      \"pitch\": {\n        \"type\": \"Pitch\",\n        \"coord\": [38, 65]\n      }\n    }\n  ]\n}\n```\n\n## Positioning\n\nEvents are generally positioned in relation to their parent container. For example, notes specify their position in relation to their voice.\n\nEach event has an anchor point, which is normally the “start” of the event. It may however be changed so that e.g. voices with pickups to sync to other events on their first downbeat, rather than their first note.\n\n## Resolving\n\nRemus is designed with flexibility and extendability as high priorities. The flip side is that parsing remus may be a complex process since the code needs knowledge about the various concepts and representations supported by remus.\n\nTo facilitate things, the remus library can _resolve_ a remus object. This means that it walks through its structure, expands inherited properties, converts various units etc. The result is then cached in each remus object.\n\n```\nlet remus = loadSomeComplexRemusFile();\nremus.resolve();\nlet note = remus.findEvent('Note');\nnote.cache.absWn\n  => the absolute position of note in wn (whole notes)\n```\n\nFor detailed documentation of the timeline-related cache keys, see [`Event`](class/lib/classes/event/event.js~Event.html).",
    "longname": "/Volumes/DoReMIR/remus/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"type\": \"module\",\n  \"name\": \"remus\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Generalized music representation\",\n  \"main\": \"remus.js\",\n  \"dependencies\": {\n    \"fraction.js\": \"^4.0.13\",\n    \"helmholtz\": \"erikronstrom/helmholtz\",\n    \"interval-coords\": \"erikronstrom/interval-coords\",\n    \"jquery\": \"^3.5.1\",\n    \"note-split\": \"doremir/note-split\",\n    \"notecoord\": \"erikronstrom/notecoord\",\n    \"scientific-notation\": \"erikronstrom/scientific-notation\",\n    \"svg.js\": \"^2.7.1\",\n    \"underscore\": \"^1.12.0\",\n    \"xml2js\": \"^0.4.23\"\n  }\n}\n",
    "longname": "/Volumes/DoReMIR/remus/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]